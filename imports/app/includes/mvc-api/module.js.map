{"version":3,"file":"module.js","names":["Module","name","current_version","global","app","controllers","isready","isloading","clientapicontrollers","currenciesapicontrollers","console","log","parentscriptloader","callback","self","modulescriptloader","getChildLoader","load_scripts","init","rootscriptloader","getRootScriptLoader","signalEvent","loadModule","registerHooks","mvcclientwalletmodule","getModuleObject","_getClientAPI","currenciesmodules","getControllersObject","wallet","scheme","isRemote","walletschemeuuid","getSchemeUUID","card","session","fromaccount","_apicontrollers","transaction","createEthereumTransaction","parentsession","Promise","reject","schemesessionmap","getSessionVariable","Object","create","setSessionVariable","schemeuuid","createChildSessionObject","childsession","MYQUOTE","MYQUOTE_ROOT","networkconfig","getNetworkConfig","setSessionNetworkConfig","_canWalletHandleScheme","fetchsession","_getSession","walletsession","_getChildSessionOnScheme","authname","password","address","Card","getModuleClass","cardjson","uuid","guid","label","card_new","readFromJson","isLocked","unlock","Error","privatekey","isValidPrivateKey","getSessionAccountFromPrivateKey","sessionaccount","_privatekey","generatePrivateKey","walletuser","getSessionUserObject","getAddress","getUserName","__makeWalletCard","err","createWalletCard","wallettype","getWalletType","_makeWalletCard","_getAverageTransactionFee","currency","position","_apicurrencies","_getCurrenciesAPI","createCurrencyAmount","amount","decimals","createDecimalAmount","sessionuuid","walletuuid","cardfromuuid","cardtouuid","currencyuuid","currencyamount","feelevel","CurrencyAmountClass","toString","getSessionObject","getCurrencyFromUUID","getWalletFromUUID","getCardFromUUID","fromcard","tocard","_getSessionAccountObject","_getMonitoredCardSession","cardsession","from_card_scheme","getScheme","toaddress","tokenaddress","tokenamount","_getCurrencyWeb3ProviderUrl","providerurl","senderprivatekey","getPrivateKey","recipientaddress","createSchemeFee","fee","sendERC20Tokens","txhash","currenciesmodule","getCurrencyProvider","_getCurrencyProvider","currency_provider","getOps","canpay","currencyschemeuuid","scheme_uuid","getSchemeFromUUID","web3url","web3providerurl","getSchemeFromWeb3Url","getDefaultScheme","defaultlocalscheme","cloneOnWeb3ProviderUrl","_getCurrencyScheme","getWeb3ProviderUrl","url1","url2","_url1","endsWith","substring","length","_url2","getCurrencies","currencies","i","_compareUrl","getSessionUUID","pretradeschemeuuid","pretrade_scheme_uuid","clientmodule","getBuiltinLocalSchemes","builtin_local_schemes","prestradescheme","firenze","_currencies","push","array","currencyscheme","readLocalCurrencies","saveLocalCurrencies","saveLocalCurrency","current_currencies_timestamp","getCurrenciesTimeStamp","currencies_timestamp","_filterCurrencies","values","_getCurrencyOps","ops","_getPretradeScheme","e","currency_pretrade_scheme","currency_pretrade_ethnode_conf","getEthNodeServerConfig","pretrade_web3_provider_url","web3_provider_url","pretrade_explorer_url","explorerurl","arr","trim","toLowerCase","_currencyaddress","getCurrencyScheme","_getMonitoredSchemeSession","importERC20Token","erc20token_contract","getChainName","getChainSymbol","symbol","getChainDecimals","description","_web3providerurl","_currency","_currency_scheme","_web3_provider_url","network","ethnodeserver","cards","getCurrencyCardList","_currency_cards","concat","getCardList","_crdschemeuuid","xtradata","getXtraData","_crdcurrencyuuid","_getCurrencyCardList","crd","xtra","maincard","mvcclienwallet","schemeinfo","_fillSchemeInfoFromScheme","carduuid","_getCurrencyCard","cardinfo","getCardUUID","_fillCardInfo","currencycards","currencycard","putXtraData","save","card_address","getCardsWithAddress","sibling_cards","_createWalletCard","_xtradata","_currencyuuid","cloneCard","_old_card","_old_xtradata","assign","bSave","setCurrencyCard","cardarray","createReadOnlyCurrencyCard","createCard","createCurrencyCard","getTokenAccountFromAddress","tokenaccount","token","getTokenObject","createTokenAccount","_synchronizeWithERC20TokenContract","getCurrencyCard","getCardInfo","cardaddress","valuescheme","getAddressERC20Position","_createCurrencyAmount","getCreditBalance","credits","getSchemeTransactionUnitsThreshold","threshold","cantxfree","cantopup","topUpCard","topupinfo","top","tokenamount_string","value","gaslimit","gasPrice","transactioncredits","_createMonitoredEthereumTransaction","ethtx","setToAddress","setGas","setGasPrice","setValue","transferERC20Tokens","payAmount","paymenturl","getPaymentUrl","erc20token","getChainTotalSupply","tokenuuid","importTokenAccount","erc20tokenaccount","getToken","tokenaccountsession","erc20tokencontract","_getERC20TokenContract","contractinterface","getContractInterface","contractinstance","getContractInstance","ethereumnodeaccessinstance","getEthereumNodeAccessInstance","MYWIDGET_OVERLOAD","Date","now","_findTransactionFromUUID","transactionuuid","jsonarray","_readTransactionLogs","tx_log","transactionHash","getAddressFromTransactionUUID","_getAddressFromTokenUUID","importCurrencyFromTokenAddress","xtra_data","origin","provider","makeCurrencyCard","pretradescheme","pretradeschemeinfo","getPretradeSchemeInfo","pretrade_schemeinfo","pretrade_web3providerurl","bRefresh","cardlist","_getCardsOnScheme","pretradecard","canSign","canPretradeCardSign","pretradecardinfo","canCardSign","setPretradeCard","creditunits","swapmodule","ethnodemodule","avg_transaction_fee","weiamount","getWeiFromEther","_createDecimalAmount","ethamount","multiply","toInteger","ethcredit","uniswap_v2","version","weth","gas_name","gas_address","gas_symbol","gas_decimals","getPriceForOutput","pricing","priceamount","amounts_in","price_struct","creditunits_requested","currency_amount","getCurrencyPosition","currencyposition","tokenamountmax","buyEthOnOutput","amountstring","undefined","_amountstring","index","indexOf","isNaN","split","multiplier","amountnumberstring","integerstring","substr","options","_inputamountstring","integerpart","leading","showdecimals","decimalsshown","_formatAmount","erc20contrat","_synchronizeERC20TokenContract","getDecimals","getSymbol","_formatMonetaryAmount","_unformatAmount","tokenamountstring","Number","isInteger","formatAmount","isFloat","n","_options","currencyamountstring","window","GlobalClass","_GlobalClass","simplestore","Global","getGlobalObject","registerModuleObject","registerModuleDepency"],"sources":["../../../../../../../imports/app/includes/mvc-api/module.js"],"sourcesContent":["'use strict';\n\n\nvar Module = class {\n\t\n\tconstructor() {\n\t\tthis.name = 'mvc-currencies';\n\t\tthis.current_version = \"0.30.10.2021.06.30\";\n\t\t\n\t\tthis.global = null; // put by global on registration\n\t\tthis.app = null;\n\t\t\n\t\tthis.controllers = null;\n\n\t\tthis.isready = false;\n\t\tthis.isloading = false;\n\n\t\tthis.clientapicontrollers = null; // API gateway\n\t\tthis.currenciesapicontrollers = null; // API gateway\n\t}\n\t\n\tinit() {\n\t\tconsole.log('module init called for ' + this.name);\n\n\t\tvar global = this.global;\n\t\t\n\t\tthis.isready = true;\n\t}\n\t\n\t// compulsory  module functions\n\tloadModule(parentscriptloader, callback) {\n\t\tconsole.log('loadModule called for module ' + this.name);\n\t\t\n\t\tif (this.isloading)\n\t\t\treturn;\n\t\t\t\n\t\tthis.isloading = true;\n\n\t\tvar self = this;\n\n\t\tvar modulescriptloader = parentscriptloader.getChildLoader('mvccurrenciesloader');\n\n\t\tmodulescriptloader.load_scripts(function() { self.init(); if (callback) callback(null, self); });\n\n\t\treturn modulescriptloader;\t\n\t}\n\t\n\tisReady() {\n\t\treturn this.isready;\n\t}\n\n\thasLoadStarted() {\n\t\treturn this.isloading;\n\t}\n\n\t// optional module functions\n\tregisterHooks() {\n\t\tconsole.log('module registerHooks called for ' + this.name);\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\t// hooks\n\n\t\t// signal module is ready\n\t\tvar rootscriptloader = global.getRootScriptLoader();\n\t\trootscriptloader.signalEvent('on_mvc_currencies_module_ready');\n\t}\n\t\n\tpostRegisterModule() {\n\t\tconsole.log('postRegisterModule called for ' + this.name);\n\t\tif (!this.isloading) {\n\t\t\tvar global = this.global;\n\t\t\tvar self = this;\n\t\t\tvar rootscriptloader = global.getRootScriptLoader();\n\t\t\t\n\t\t\tthis.loadModule(rootscriptloader, function() {\n\t\t\t\tif (self.registerHooks)\n\t\t\t\tself.registerHooks();\n\t\t\t});\n\t\t}\n\t}\n\t\n\t_getClientAPI() {\n\t\tif (this.clientapicontrollers)\n\t\t\treturn this.clientapicontrollers;\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\t\n\t\tthis.clientapicontrollers = mvcclientwalletmodule._getClientAPI();\n\t\t\n\t\treturn  this.clientapicontrollers;\n\t}\n\n\t_getCurrenciesAPI() {\n\t\tif (this.currenciesapicontrollers)\n\t\t\treturn this.currenciesapicontrollers;\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tvar currenciesmodules = global.getModuleObject('currenciesmodules');\n\t\t\n\t\tthis.currenciesapicontrollers = currenciesmodules.getControllersObject();\n\t\t\n\t\treturn  this.currenciesapicontrollers;\n\t}\n\n\t//\n\t// hooks\n\t//\n\t\n\n\t//\n\t// API\n\t//\n\n\n\t//\n\t// Ethnode\n\t//\n\n\t_canWalletHandleScheme(wallet, scheme) {\n\t\tif (!wallet || !scheme)\n\t\t\treturn false;\n\n\t\tif (scheme.isRemote()) {\n\t\t\tvar walletschemeuuid = wallet.getSchemeUUID();\n\n\t\t\t// TODO: we could look if authserver are the same\n\t\t\tif (walletschemeuuid && (walletschemeuuid === scheme.getSchemeUUID()))\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\n\t}\n\n\tasync _createMonitoredEthereumTransaction(wallet, card, session, fromaccount) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\t\n\t\tvar transaction = _apicontrollers.createEthereumTransaction(session, fromaccount);\n\n\t\treturn transaction;\n\t}\n\n\t//\n\t// Scheme functions\n\t//\n\n\tasync _getChildSessionOnScheme(parentsession, scheme) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tif (!parentsession)\n\t\t\treturn Promise.reject('could not find create child of null session');\n\n\t\tvar schemesessionmap = parentsession.getSessionVariable('schemesessionmap');\n\t\t\n\t\tif (!schemesessionmap) {\n\t\t\tschemesessionmap = Object.create(null);\n\t\t\tparentsession.setSessionVariable('schemesessionmap', schemesessionmap);\n\t\t}\n\t\t\n\t\t// we could look if a pre-existing session with corresponding web3providerurl could be re-used\n\t\tvar schemeuuid = scheme.getSchemeUUID();\n\n\t\tif (schemesessionmap[schemeuuid])\n\t\t\treturn schemesessionmap[schemeuuid];\n\n\t\t// else we create one and set it\n\t\tvar childsession = await _apicontrollers.createChildSessionObject(parentsession);\n\t\tchildsession.MYQUOTE = this.current_version;\n\n\t\tif (!parentsession.MYQUOTE_ROOT)\n\t\t\tparentsession.MYQUOTE_ROOT = this.current_version;\n\n\t\tvar networkconfig = scheme.getNetworkConfig();\n\n\t\tawait _apicontrollers.setSessionNetworkConfig(childsession, networkconfig);\n\n\t\tschemesessionmap[schemeuuid] = childsession;\n\n\t\treturn childsession;\n\t}\n\n\n\tasync _getMonitoredSchemeSession(session, wallet, scheme) {\n\t\tvar fetchsession;\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('scheme is not defined');\n\n\t\tif (scheme.isRemote()) {\n\t\t\tif (wallet) {\n\t\t\t\tvar walletschemeuuid = wallet.getSchemeUUID();\n\t\t\t\tvar schemeuuid = scheme.getSchemeUUID();\n\t\n\t\t\t\tif (this._canWalletHandleScheme(wallet, scheme)) {\n\t\t\t\t\t// use wallet session\n\t\t\t\t\tfetchsession = wallet._getSession();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (wallet) {\n\t\t\t\tvar walletsession = wallet._getSession();\n\t\t\t\tfetchsession = await this._getChildSessionOnScheme(walletsession, scheme);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfetchsession = await this._getChildSessionOnScheme(session, scheme);\n\t\t\t}\n\t\t}\n\n\t\treturn fetchsession;\n\t}\n\n\n\n\t//\n\t// Card functions\n\t//\n\n\t// TODO: replace by _apicontrollers.__makeWalletCard for version >= 0.20.18\n\tasync __makeWalletCard(session, wallet, scheme, authname, password, address) {\n\t\t// to create a remote card on a remote wallet, with different schemes\n\t\tvar global = this.global;\n\t\tvar Card = global.getModuleClass('wallet', 'Card');;\n\n\t\tvar cardjson = {};\n\t\tcardjson.authname = authname;\n\t\tcardjson.address = address;\n\t\tcardjson.password = password;\n\n\t\tcardjson.uuid = session.guid();\n\t\tcardjson.label = authname;\n\n\t\tconst card_new =  Card.readFromJson(wallet, scheme, cardjson);\n\n\t\tif (card_new) {\n\t\t\tawait card_new.init();\n\n\t\t\tif (card_new.isLocked()) {\n\t\t\t\tawait card_new.unlock();\n\t\t\t}\n\n\t\t\treturn card_new;\n\t\t}\n\t\telse\n\t\t\tthrow new Error('could not create card');\n\n\t}\n\t\n\tasync _makeWalletCard(session, wallet, scheme, privatekey) {\n\t\t// we make client or remote wallets, depending on the scheme\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('wallet is not defined');\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('scheme is not defined');\n\n\n\t\tvar sessionaccount;\n\n\t\tif (privatekey) {\n\t\t\t// create a session account from private key\n\t\t\tif (_apicontrollers.isValidPrivateKey(session, privatekey)) {\n\t\t\t\tsessionaccount = await _apicontrollers.getSessionAccountFromPrivateKey(session, wallet, privatekey);\n\t\t\t}\n\t\n\t\t\tif (!sessionaccount)\n\t\t\t\treturn Promise.reject('not a valid private key');\n\t\n\t\t}\n\t\telse {\n\t\t\t// we generate a key\n\t\t\tvar _privatekey = _apicontrollers.generatePrivateKey();\n\t\t\t\n\t\t\tsessionaccount = await _apicontrollers.getSessionAccountFromPrivateKey(session, wallet, _privatekey);\n\t\n\t\t\tif (!sessionaccount)\n\t\t\t\treturn Promise.reject('could not generate a private key');\n\t\t}\n\n\t\tvar walletsession = wallet._getSession();\n\t\tvar walletuser = walletsession.getSessionUserObject();\n\n\t\tif (!walletuser)\n\t\t\treturn Promise.reject('wallet needs to be unlocked');\n\n\t\t\n\t\tvar address = sessionaccount.getAddress();\n\t\tvar authname = walletuser.getUserName();\n\t\tvar password = null;\n\n\t\t// TODO: replace by _apicontrollers.makeWalletCard for version >= 0.20.18\n\t\t//const card_new =  await _apicontrollers.makeWalletCard(session, wallet, scheme, authname, password, address)\n\t\tconst card_new =  await this.__makeWalletCard(session, wallet, scheme, authname, password, address)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in _makeWalletCard: ' + err);\n\t\t});\n\n\t\tif (card_new) {\n\t\t\tawait card_new.init();\n\n\t\t\tif (card_new.isLocked()) {\n\t\t\t\tawait card_new.unlock();\n\t\t\t}\n\n\t\t\treturn card_new;\n\t\t}\n\t\telse\n\t\t\tthrow new Error('could not create card');\n\t}\n\n\n\t// TODO: replace by _apicontrollers.createWalletCard for version >= 0.20.18\n\tasync _createWalletCard(session, wallet, scheme, privatekey) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tif (scheme.isRemote() === false)  {\n\t\t\treturn _apicontrollers.createWalletCard(session, wallet, scheme, privatekey);\n\t\t}\n\t\telse {\n\t\t\tvar wallettype = wallet.getWalletType();\n\n\t\t\tswitch(wallettype) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\t\t\t\tcase 1:\n\t\t\t\t\tvar walletschemeuuid = wallet.getSchemeUUID();\n\n\t\t\t\t\tif (this._canWalletHandleScheme(wallet, scheme))\n\t\t\t\t\t\treturn this._makeWalletCard(session, wallet, scheme, privatekey);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\t\t\t\tdefault:\n\t\t\t\t\treturn Promise.reject('wrong wallet type: ' + wallettype);\n\t\t\t}\n\t\n\t\t}\n\n\t}\n\n\n\t//\n\t// Currency functions\n\t//\n\n\t_getAverageTransactionFee(scheme) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\treturn mvcclientwalletmodule._getAverageTransactionFee(scheme);\n\t}\n\n\n\tasync _createCurrencyAmount(session, currency, position) {\n\t\tvar global = this.global;\n\t\tvar _apicurrencies = this._getCurrenciesAPI();\n\t\treturn _apicurrencies.createCurrencyAmount(session, currency, position);\n\t}\n\n\tasync _createDecimalAmount(session, amount, decimals) {\n\t\tvar global = this.global;\n\t\tvar _apicurrencies = this._getCurrenciesAPI();\n\t\treturn _apicurrencies.createDecimalAmount(session, amount, decimals);\n\t}\n\n\tasync transferCurrencyAmount(sessionuuid, walletuuid, cardfromuuid, cardtouuid, currencyuuid, currencyamount, feelevel = null) {\n\t\tvar global = this.global;\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!cardfromuuid)\n\t\t\treturn Promise.reject('from card uuid is undefined');\n\t\t\n\t\tif (!cardtouuid)\n\t\t\treturn Promise.reject('to card uuid is undefined');\n\n\t\tvar CurrencyAmountClass = global.getModuleClass('currencies', 'CurrencyAmount');\n\t\tif ((currencyamount instanceof CurrencyAmountClass) !== true)\n\t\t\treturn Promise.reject('wrong currency amount type');\n\n\t\tvar amount = await currencyamount.toString();\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\n\t\tvar fromcard = await wallet.getCardFromUUID(cardfromuuid);\n\t\t\n\t\tif (!fromcard)\n\t\t\treturn Promise.reject('could not find card ' + cardfromuuid);\n\n\t\tvar tocard = await wallet.getCardFromUUID(cardtouuid);\n\t\n\t\tif (!tocard)\n\t\t\treturn Promise.reject('could not find card ' + cardtouuid);\n\t\n\t\n\t\tvar fromaccount = fromcard._getSessionAccountObject();\n\n\t\tif (!fromaccount)\n\t\t\treturn Promise.reject('card has no private key ' + cardfromuuid);\n\t\t\n\t\tvar cardsession = await this._getMonitoredCardSession(session, wallet, fromcard);\n\t\tvar from_card_scheme = fromcard.getScheme();\n\n\t\t// transfer parameters\n\t\tvar toaddress = tocard.getAddress();\n\t\tvar tokenaddress = currency.address;\n\t\tvar tokenamount = amount;\n\t\n\t\t// using token account to make transfer\n/* \t\t\n\t\tvar tokenaccount = await this._getTokenAccountFromAddress(cardsession, fromcard, tokenaddress).catch(err => {});\n\n\t\t// create contact from toaddress\n\t\tvar name = toaddress;\n\t\tvar contactinfo = {};\n\t\tvar tocontact = await _apicontrollers.createContact(cardsession, name, toaddress, contactinfo).catch(err => {});\n\n\t\tawait tokenaccount.transferTo(contact, tokenamount)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in transferCurrencyAmount: ' + err);\n\t\t});\n */\n\n\t\t// using direct call to ERC20 to speed up call\n\t\tvar providerurl = await this._getCurrencyWeb3ProviderUrl(cardsession, currency);\n\t\tvar senderprivatekey = fromaccount.getPrivateKey();\n\t\tvar recipientaddress = toaddress;\n\t\tvar fee  = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\n\t\tvar txhash = await _apicontrollers.sendERC20Tokens(cardsession, providerurl, tokenaddress, senderprivatekey, recipientaddress, tokenamount, fee)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in transferCurrencyAmount: ' + err);\n\t\t});\n\n\t\tif (!txhash)\n\t\t\treturn Promise.reject('could not send currency tokens');\n\n\t\treturn txhash;\n\t}\n\n\tasync _getCurrencyProvider(session, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\t\t\n\t\tvar global = this.global;\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\treturn currenciesmodule.getCurrencyProvider(session, currency.uuid);\n\t}\n\n\tasync _getCurrencyOps(session, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\t\t\n\n\t\t// we look if the currency has a provider specified\n\t\tvar currency_provider = await this._getCurrencyProvider(session, currency);\n\n\t\tif (currency_provider)\n\t\t\treturn currency_provider.getOps();\n\t\telse\n\t\t\treturn {canpay: false};\n\n\t}\n\n\t// TODO: use currenciesmodule.getCurrencyScheme\n\tasync _getCurrencyScheme(session, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\t// we look if the currency has a trade scheme specified\n\t\tvar currencyschemeuuid = (currency.scheme_uuid ? currency.scheme_uuid : null );\n\t\tvar scheme;\n\n\t\tif (currencyschemeuuid) {\n\t\t\t// a built-in scheme has been specified in currency definition\n\t\t\tscheme = await _apicontrollers.getSchemeFromUUID(session, currencyschemeuuid)\n\t\t\t.catch(err => {});\n\t\t}\n\t\telse {\n\t\t\t// scheme has probably already been created with web3providerurl\n\t\t\tvar web3url = currency.web3providerurl;\n\t\t\tscheme = await _apicontrollers.getSchemeFromWeb3Url(session, web3url)\n\t\t\t.catch(err => {});\n\n\t\t\tif (!scheme) {\n\t\t\t\t// if not, we create a local scheme now and save it\n\t\t\t\tvar defaultlocalscheme = await _apicontrollers.getDefaultScheme(session, 0);\n\t\t\t\tscheme = await defaultlocalscheme.cloneOnWeb3ProviderUrl(web3url)\n\t\t\t\t.catch(err => {});\n\t\t\t}\n\t\t}\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('could not find scheme for currency ' + currency.uuid);\n\n\t\n\t\treturn scheme;\n\t}\n\n\t// TODO: use currenciesmodule.getCurrencyWeb3ProviderUrl\n\tasync _getCurrencyWeb3ProviderUrl(session, currency) {\n\t\tif (currency.web3providerurl)\n\t\t\treturn currency.web3providerurl;\n\t\telse {\n\t\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\t\tif (scheme)\n\t\t\t\treturn scheme.getWeb3ProviderUrl();\n\t\t\telse\n\t\t\t\tconsole.log('currency is badly configured ' + currency.uuid);\n\t\t}\n\t}\n\t\n\t_compareUrl(url1, url2) {\n\t\tvar _url1 = (url1 && url1.endsWith('/') ? url1.substring(0, url1.length - 1 ) : url1);\n\t\tvar _url2 = (url2 && url2.endsWith('/') ? url2.substring(0, url2.length - 1 ) : url2);\n\n\t\tif (_url1 && _url2 && (_url1 == _url2))\n\t\treturn true;\n\t\telse\n\t\treturn false;\n\t}\n\n\tasync _findCurrencyFromWeb3ProviderUrl(sessionuuid, web3providerurl) {\n\t\t// we retun the first one, it is unsafe and \n\t\t// direct use of currencyuuidis recommended\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\n\t\tvar currencies = await this.getCurrencies(sessionuuid);\n\n\t\tfor (var i = 0; i < currencies.length; i++) {\n\t\t\tvar currency = currencies[i];\n\n\t\t\tif (currency.web3providerurl) {\n\t\t\t\tif (this._compareUrl(currency.web3providerurl, web3providerurl))\n\t\t\t\treturn currency\n\t\t\t}\n\t\t\telse if (currency.scheme_uuid) {\n\t\t\t\tvar scheme = await _apicontrollers.getSchemeFromUUID(session, currency.scheme_uuid)\n\n\t\t\t\tif ((scheme) && (scheme.getWeb3ProviderUrl() == web3providerurl))\n\t\t\t\t\treturn currency;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('currency is badly configured ' + currency.uuid);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _getPretradeScheme(session, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\t\t\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\t// we look if the currency has a pretrade scheme specified\n\t\tvar sessionuuid = session.getSessionUUID();\n\t\tvar pretradeschemeuuid = (currency.pretrade_scheme_uuid ? currency.pretrade_scheme_uuid : null );\n\n\t\tvar scheme = await _apicontrollers.getSchemeFromUUID(session, pretradeschemeuuid)\n\t\t.catch(err => {});\n\n\t\tif (scheme)\n\t\treturn scheme;\n\n\t\t// we return local scheme named firenze as a default, if we can find it\n\t\tvar clientmodule = global.getModuleObject('webclient');\n\n\t\tif (clientmodule.getBuiltinLocalSchemes) {\n\t\t\tvar builtin_local_schemes = clientmodule.getBuiltinLocalSchemes();\n\t\n\t\t\tvar prestradescheme = builtin_local_schemes.firenze;\n\t\t\n\t\t\tif (prestradescheme)\n\t\t\tscheme = await _apicontrollers.getSchemeFromUUID(session, prestradescheme.uuid);\n\t\t}\n\n\n\t\treturn scheme;\n\t}\n\n\tasync _filterCurrencies(session, currencies, walletuuid) {\n\t\tvar _currencies = [];\n\n\t\tfor (var i = 0; i < (currencies ? currencies.length : 0); i++) {\n\t\t\t_currencies.push(currencies[i]);\n\t\t}\n\n\t\tif (walletuuid) {\n\t\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\n\t\t\tif (wallet) {\n\t\t\t\tvar walletschemeuuid = wallet.getSchemeUUID();\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor (var i = 0; i < (currencies ? currencies.length : 0); i++) {\n\t\t\t\t\tvar currency = currencies[i];\n\n\t\t\t\t\t// if currency has a scheme, check if it is remote and it matches the wallet\n\t\t\t\t\tvar currencyscheme = await this._getCurrencyScheme(session, currency).catch(err => {});\n\n\t\t\t\t\tif (!currencyscheme) continue;\n\t\t\t\t\t\n\t\t\t\t\tif (currencyscheme && (currencyscheme.isRemote())) {\n\t\t\t\t\t\tvar currencyschemeuuid = currencyscheme.getSchemeUUID();\n\t\t\t\t\t\tif (this._canWalletHandleScheme(wallet, currencyscheme)) {\n\t\t\t\t\t\t\tarray.push(currencies[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tarray.push(currencies[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t\n\t\t\t\t_currencies = array;\n\t\t\t}\n\n\t\t}\n\n\t\treturn _currencies;\n\t}\n\n \tasync readLocalCurrencies(sessionuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar _apicurrencies = this._getCurrenciesAPI();\n\n\t\treturn _apicurrencies.readLocalCurrencies(session);\n\t}\n\n\tasync saveLocalCurrencies(sessionuuid, currencies) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar _apicurrencies = this._getCurrenciesAPI();\n\n\t\treturn _apicurrencies.saveLocalCurrencies(session, currencies);\t\n\t}\n\n\tasync saveLocalCurrency(sessionuuid, currency) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar _apicurrencies = this._getCurrenciesAPI();\n\n\t\treturn _apicurrencies.saveLocalCurrency(session, currency);\t\n\t}\n\n \n\n\tasync getCurrencies(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\t\tvar current_currencies_timestamp = currenciesmodule.getCurrenciesTimeStamp();\n\n\t\t// look if already stored in the session variables\n\t\tvar currencies = session.getSessionVariable('currencies');\n\n\t\tif (currencies) {\n\t\t\t// verify version is up-to-date\n\t\t\tvar currencies_timestamp = session.getSessionVariable('currencies-timestamp');\n\n\t\t\tif (currencies_timestamp === current_currencies_timestamp) {\n\t\t\t\t// send back copy from cached list\n\t\t\t\tvar _currencies = await this._filterCurrencies(session, currencies, walletuuid);\n\n\t\t\t\treturn _currencies;\n\t\t\t}\n\t\t}\n\t\n\t\t// otherwise retrieve the list of currencies\n\t\tvar global = this.global;\n\n\t\tvar currencies = currenciesmodule.getCurrencies();\n\n\t\tvar array = Object.values(currencies);\n\n\t\t// fill complementary info\n\t\tfor (var i = 0; i < (array ? array.length : 0); i++) {\n\t\t\t// ops\n\t\t\tarray[i].ops = await this._getCurrencyOps(session, array[i])\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t\t// pretrade_explorer_url\n\t\t\tvar currency_pretrade_scheme = await this._getPretradeScheme(session, array[i]).catch(e=>{});\n\t\t\tvar currency_pretrade_ethnode_conf = (currency_pretrade_scheme ? currency_pretrade_scheme.getEthNodeServerConfig() : null);\n\n\t\t\tarray[i].pretrade_web3_provider_url = (currency_pretrade_ethnode_conf ? currency_pretrade_ethnode_conf.web3_provider_url : null)\n\t\t\tarray[i].pretrade_explorer_url = (currency_pretrade_ethnode_conf ? currency_pretrade_ethnode_conf.explorerurl : null)\n\t\t}\n\n\t\t// store in session\n\t\tsession.setSessionVariable('currencies', array);\n\t\tsession.setSessionVariable('currencies-timestamp', current_currencies_timestamp);\n\n\t\t// send back a copy\n\t\tvar _currencies = await this._filterCurrencies(session, array, walletuuid);\n\n\t\treturn _currencies;\n\t}\n\t\n\n\tasync getCurrencyFromUUID(sessionuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar currencies = await this.getCurrencies(sessionuuid); // all currencies\n\n\t\tfor (var i = 0; i < currencies.length; i++) {\n\t\t\tif (currencies[i].uuid === currencyuuid) {\n\t\t\t\treturn currencies[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getAllCurrenciesWithAddress(sessionuuid, walletuuid, address) {\n\t\tvar currencies = await this.getCurrencies(sessionuuid, walletuuid);\n\n\t\tvar arr = [];\n\t\tvar tokenaddress = (address ? address.trim().toLowerCase() : null);\n\n\t\tfor (var i = 0; i < (currencies ? currencies.length : 0); i++) {\n\t\t\tlet _currencyaddress = (currencies[i].address ? currencies[i].address.trim().toLowerCase() : null);\n\t\t\tif (_currencyaddress == tokenaddress)\n\t\t\tarr.push(currencies[i]);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tasync synchronizeCurrency(sessionuuid, walletuuid, currency) {\n\t\t// to fetch name, symbol,... if it went bad during the first import\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\t\t\n\t\tif (!currency.address)\n\t\t\treturn Promise.reject('currency has not token address');\n\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\tvar currencyscheme = await currenciesmodule.getCurrencyScheme(session, currency);\n\t\n\t\tif (!currencyscheme)\n\t\t\treturn Promise.reject('could not find scheme of currency ' + currency.uuid);\n\t\t\n\t\tvar childsession = await this._getMonitoredSchemeSession(session, wallet, currencyscheme);\n\n\t\t// get erc20 token contract\n\t\tvar erc20token_contract = await _apicontrollers.importERC20Token(childsession, currency.address);\n\n\t\t// re-fetch main elements\n\t\tcurrency.name = await erc20token_contract.getChainName();\n\t\tcurrency.symbol = await erc20token_contract.getChainSymbol();\n\t\tcurrency.decimals = await erc20token_contract.getChainDecimals();\n\n\t\t// then save currency\n\t\tawait currenciesmodule.saveLocalCurrency(session, currency);\n\n\t\treturn currency;\n\t}\n\n\tasync setCurrencyDescription(sessionuuid, walletuuid, currencyuuid, description) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\t// set description\n\t\tcurrency.description = description;\n\t\t\n\t\t// then save currency\n\t\tawait currenciesmodule.saveLocalCurrency(session, currency);\n\n\t\treturn currency;\n\t}\n\n\tasync getCurrenciesFromAddress(sessionuuid, walletuuid, schemeuuid, address) {\n\t\tvar currencies = await this.getCurrencies(sessionuuid, walletuuid);\n\n\t\tvar arr = [];\n\t\tvar tokenaddress = (address ? address.trim().toLowerCase() : null);\n\n\t\tfor (var i = 0; i < (currencies ? currencies.length : 0); i++) {\n\t\t\tlet _currencyaddress = (currencies[i].address ? currencies[i].address.trim().toLowerCase() : null);\n\t\t\tif ((currencies[i].scheme_uuid == schemeuuid) && (_currencyaddress == tokenaddress))\n\t\t\tarr.push(currencies[i]);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tasync getTokenCardList(sessionuuid, walletuuid, web3providerurl, tokenaddress) {\n\t\tif (!web3providerurl || !tokenaddress)\n\t\treturn [];\n\n\t\tvar currencies = await this.getCurrencies(sessionuuid, walletuuid);\n\t\tvar _web3providerurl = (web3providerurl.endsWith('/') ? web3providerurl.substring(0, web3providerurl.length - 1 ) : web3providerurl);\n\n\t\t// list of currencies\n\t\tvar arr = [];\n\n\t\tfor (var i = 0; i < (currencies ? currencies.length : 0); i++) {\n\t\t\tvar _currency = currencies[i];\n\t\t\tvar _currency_scheme = await this.getCurrencyScheme(sessionuuid, walletuuid, _currency.uuid).catch(err => {});\n\n\t\t\tvar _web3_provider_url = ( _currency_scheme && _currency_scheme.network && _currency_scheme.network.ethnodeserver ? _currency_scheme.network.ethnodeserver.web3_provider_url : null);\n\t\t\t_web3_provider_url = (_web3_provider_url && _web3_provider_url.endsWith('/') ? _web3_provider_url.substring(0, _web3_provider_url.length - 1 ) : _web3_provider_url);\n\t\t\t\n\t\t\tif (_web3_provider_url && (this._compareUrl(_web3_provider_url, _web3providerurl)) && (_currency.address == tokenaddress))\n\t\t\tarr.push(currencies[i]);\n\t\t}\n\n\t\t// get list of all cards\n\t\tvar cards = [];\n\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tvar _currency = arr[i];\n\t\t\tvar _currency_cards = await this.getCurrencyCardList(sessionuuid, walletuuid, _currency.uuid).catch(err => {});\n\n\t\t\tif (_currency_cards)\n\t\t\tcards = cards.concat(_currency_cards);\n\t\t}\n\n\t\treturn cards;\n\t}\n\n\n\tasync _getCurrencyCardList(session, wallet, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('wallet is undefined');\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\tvar cards = await wallet.getCardList(true);\n\n\t\tvar array = [];\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency).catch(err => {});\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('could not find scheme for currency ' + currency.uuid);\n\n\t\tvar schemeuuid = scheme.getSchemeUUID();\n\t\tvar currencyuuid = currency.uuid;\n\n\t\tfor (var i = 0; i < (cards ? cards.length : 0); i++) {\n\t\t\tvar _crdschemeuuid = cards[i].getSchemeUUID();\n\n\t\t\tif (_crdschemeuuid == schemeuuid) {\n\t\t\t\t// check it is not associated to\n\t\t\t\t// another currency on same schemeuuid\n\t\t\t\t// looking at XtraData\n\t\t\t\tlet xtradata = cards[i].getXtraData('myquote');\n\n\t\t\t\txtradata = (xtradata ? xtradata : {});\n\t\t\t\tlet _crdcurrencyuuid = xtradata.currencyuuid;\n\n\t\t\t\tif (_crdcurrencyuuid && (_crdcurrencyuuid == currencyuuid))\n\t\t\t\tarray.push(cards[i]);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn array;\n\t}\n\n\tasync _getCurrencyCard(session, wallet, currency) {\n\t\tif (!session)\n\t\t\treturn Promise.reject('session is undefined');\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('wallet is undefined');\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is undefined');\n\n\t\tvar cards = await this._getCurrencyCardList(session, wallet, currency).catch(err => {});\n\t\tvar card;\n\n\t\tif (cards && cards.length) {\n\t\t\t// look if a card is marked as main card\n\t\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\t\tvar crd = cards[i];\n\n\t\t\t\tvar xtra = crd.getXtraData('myquote');\n\n\t\t\t\tif (xtra && (xtra.maincard === true)) {\n\t\t\t\t\tcard = crd;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn card;\n\t}\n\n\tasync getCurrencyScheme(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\tvar scheme = await currenciesmodule.getCurrencyScheme(session, currency);\n\n\t\tvar mvcclienwallet = global.getModuleObject('mvc-client-wallet');\n\n\t\tvar schemeinfo = {uuid: scheme.getSchemeUUID()};\n\n\t\tmvcclienwallet._fillSchemeInfoFromScheme(schemeinfo, scheme);\n\n\t\treturn schemeinfo;\n\t}\n\n\tasync findCardCurrency(sessionuuid, walletuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tlet xtradata = card.getXtraData('myquote');\n\n\t\tif (xtradata && xtradata.currencyuuid) {\n\t\t\tlet currency = await this.getCurrencyFromUUID(sessionuuid, xtradata.currencyuuid);\n\n\t\t\treturn currency;\n\t\t}\n\n\t}\n\n\tasync getCurrencyCard(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\n\t\tvar card = await this._getCurrencyCard(session, wallet, currency);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find currency card for wallet ' + walletuuid);\n\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\tvar cardinfo = {uuid: card.getCardUUID()};\n\n\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\n\t\treturn cardinfo;\n\t}\n\n\tasync setCurrencyCard(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t// sift through cards for currency to set the maincard flag accordingly\n\t\tvar currencycards = await this._getCurrencyCardList(session, wallet, currency).catch(err => {});\n\n\t\tfor (var i = 0; i < (currencycards ? currencycards.length : 0); i++) {\n\t\t\tlet currencycard = currencycards[i];\n\t\t\tlet xtradata = currencycard.getXtraData('myquote');\n\n\t\t\tif (xtradata && (xtradata.maincard === true)) {\n\t\t\t\t// remove flag\n\t\t\t\txtradata.maincard = false;\n\n\t\t\t\tcurrencycard.putXtraData('myquote', xtradata);\n\n\t\t\t\tif (currencycard.isLocked()) {\n\t\t\t\t\tawait currencycard.unlock();\n\t\t\t\t}\n\t\t\n\t\t\t\tawait currencycard.save();\n\t\t\t}\n\n\t\t\tif (currencycard.getCardUUID() === carduuid) {\n\t\t\t\txtradata = (xtradata ? xtradata : {});\n\t\t\t\txtradata.maincard = true;\n\n\t\t\t\tcurrencycard.putXtraData('myquote', xtradata);\n\n\t\t\t\tif (currencycard.isLocked()) {\n\t\t\t\t\tawait currencycard.unlock();\n\t\t\t\t}\n\n\t\t\t\tawait currencycard.save();\n\t\t\t}\n\n\t\t}\n\t\n\t}\n\n\n\tasync createCurrencyCard(sessionuuid, walletuuid, currencyuuid, privatekey) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t// note: wallet.importCard uses getFirstCardWithAddress which replaces\n\t\t// a pre-existing currency card\n\n\t\tvar sessionaccount = await _apicontrollers.getSessionAccountFromPrivateKey(session, wallet, privatekey);\n\t\tvar card_address = sessionaccount.getAddress();\n\n\t\tvar sibling_cards = await wallet.getCardsWithAddress(card_address).catch(err => {});\n\t\tsibling_cards = (sibling_cards ? sibling_cards : []);\n\n\t\t// TODO: replace by _apicontrollers.createWalletCard for version >= 0.20.18\n\t\tconst card = await this._createWalletCard(session, wallet, scheme, privatekey); \n\t\t//const card = await _apicontrollers.createWalletCard(session, wallet, scheme, privatekey);\n\n\n\t\tif (sibling_cards.length > 0) {\n\t\t\ttry {\n\t\t\t\t// we already had a currency card with same address\n\t\t\t\tlet _xtradata = card.getXtraData('myquote');\n\n\t\t\t\t_xtradata = (_xtradata ? _xtradata : {});\n\t\t\t\tlet _currencyuuid = _xtradata.currencyuuid;\n\n\t\t\t\tif (_currencyuuid != currencyuuid) {\n\t\t\t\t\t// we re-insert the card that has been replaced\n\t\t\t\t\tlet _old_card = await wallet.cloneCard(card, scheme).catch(err => {});\n\n\t\t\t\t\tif (_old_card) {\n\t\t\t\t\t\t// re-initialize\n\t\t\t\t\t\tif (_old_card.isLocked()) {\n\t\t\t\t\t\t\tawait _old_card.unlock();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet _old_xtradata = Object.assign({}, _xtradata);\n\n\t\t\t\t\t\txtradata = (xtradata ? xtradata : {});\n\t\t\t\t\t\t_old_xtradata.currencyuuid = _currencyuuid;\n\t\t\t\t\n\t\t\t\t\t\t_old_card.putXtraData('myquote', _old_xtradata);\n\n\t\t\t\t\t\tawait _old_card.save()\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tconsole.log('could not re-insert pre-existing currency card: ' + card_address);\n\t\t\t};\n\n\t\t}\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not create card');\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\t// set it's associated to currencyuuid in XtraData\n\t\tlet xtradata = card.getXtraData('myquote');\n\n\t\txtradata = (xtradata ? xtradata : {});\n\t\txtradata.currencyuuid = currencyuuid;\n\n\t\tcard.putXtraData('myquote', xtradata);\n\n\t\t// save\n\t\tconst bSave = await card.save();\n\n\t\tif (!bSave)\n\t\t\treturn Promise.reject('could not save card');\n\n\t\t// set as maincard if it is the first card created\n\t\tvar currencycards = await this._getCurrencyCardList(session, wallet, currency).catch(err => {});\n\n\t\tif (!currencycards || (currencycards.length == 1)) {\n\t\t\tawait this.setCurrencyCard(sessionuuid, walletuuid, currencyuuid, card.uuid);\n\t\t}\n\n\t\t// return cardinfo\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar cardinfo = {};\n\n\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\t\t\n\t\treturn cardinfo;\n\t}\n\n\tasync makeCurrencyCard(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\t// set it's associated to currencyuuid in XtraData\n\t\tlet xtradata = card.getXtraData('myquote');\n\n\t\txtradata = (xtradata ? xtradata : {});\n\t\txtradata.currencyuuid = currencyuuid;\n\n\t\tcard.putXtraData('myquote', xtradata);\n\n\t\t// save\n\t\tconst bSave = await card.save();\n\n\t\tif (!bSave)\n\t\t\treturn Promise.reject('could not save card');\n\n\t\t// set as maincard if it is the first card created\n\t\tvar currencycards = await this._getCurrencyCardList(session, wallet, currency).catch(err => {});\n\n\t\tif (!currencycards || (currencycards.length == 1)) {\n\t\t\tawait this.setCurrencyCard(sessionuuid, walletuuid, currencyuuid, card.uuid);\n\t\t}\n\n\t\t// return cardinfo\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar cardinfo = {};\n\n\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\t\t\n\t\treturn cardinfo;\n\t}\n\n\tasync getCurrencyCardWithAddress(sessionuuid, walletuuid, currencyuuid, address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t// look if we have a card with this address for this currency\n\t\tvar card;\n\t\tvar cardarray = await wallet.getCardsWithAddress(address);\n\n\t\tfor (var i = 0; i < (cardarray ? cardarray.length : 0); i++) {\n\t\t\tlet xtradata = cardarray[i].getXtraData('myquote');\n\n\t\t\txtradata = (xtradata ? xtradata : {});\n\t\t\t\n\t\t\tif (xtradata.currencyuuid == currencyuuid) {\n\t\t\t\tcard = cardarray[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (card) {\n\t\t\t// return cardinfo\n\t\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\t\tvar cardinfo = {};\n\n\t\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\t\t\t\n\t\t\treturn cardinfo;\t\n\t\t}\n\t\telse {\n\t\t\t// we create a read-only card\n\t\t\treturn this.createReadOnlyCurrencyCard(sessionuuid, walletuuid, currencyuuid, address);\n\t\t}\n\t}\n\n\n\tasync createReadOnlyCurrencyCard(sessionuuid, walletuuid, currencyuuid, address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tlet authname;\n\t\tlet password;\n\n\t\tconst card = await wallet.createCard(scheme, authname, password, address);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not create card');\n\n\t\tvar cardsession = card._getSession();\n\n\t\tif (!cardsession) {\n\t\t\tawait card.init();\n\t\t}\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\t// set it's associated to currencyuuid in XtraData\n\t\tlet xtradata = card.getXtraData('myquote');\n\n\t\txtradata = (xtradata ? xtradata : {});\n\t\txtradata.currencyuuid = currencyuuid;\n\n\t\tcard.putXtraData('myquote', xtradata);\n\n\t\t// save\n\t\tconst bSave = await card.save();\n\n\t\tif (!bSave)\n\t\t\treturn Promise.reject('could not save card');\n\n\t\t// return cardinfo\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar cardinfo = {};\n\n\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\t\t\n\t\treturn cardinfo;\t\n\t}\n\n\tasync generateCurrencyCard(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t// we generate a key\n\t\tvar _privatekey = _apicontrollers.generatePrivateKey(session);\n\n\t\treturn this.createCurrencyCard(sessionuuid, walletuuid, currencyuuid, _privatekey);\n\t}\n\n\tasync _getTokenAccountFromAddress(session, card, tokenaddress) {\n\t\tvar tokenaccount = await card.getTokenAccountFromAddress(tokenaddress).catch(err => {});\n\n\t\tif (!tokenaccount) {\n\t\t\tvar token = card.getTokenObject(tokenaddress);\n\n\t\t\tif (card.isLocked()) {\n\t\t\t\tawait card.unlock();\n\t\t\t}\n\n\t\t\ttokenaccount = await card.createTokenAccount(token);\n\t\t\tawait tokenaccount.init();\n\n\t\t\tawait tokenaccount._synchronizeWithERC20TokenContract(session); // saves tokenaccount\n\t\t\t\n\t\t\t// var description = 'my quote token account';\n\t\t\t//tokenaccount.setLabel(description);\n\t\t\t//await tokenaccount.save();\n\t\t}\n\n\t\treturn tokenaccount;\n\t}\n\n\tasync getCurrencyPosition(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar tokenaddress = currency.address;\n\n\t\t// using token account to get position\n/* \t\tvar card = await this._getCurrencyCard(session, wallet, currency).catch(err => {});\n\n\t\tvar tokenaccount = await this._getTokenAccountFromAddress(session, card, tokenaddress).catch(err => {});\n\n\t\tconst position = (tokenaccount ? await tokenaccount.getPosition().catch(err => {}) : 0);\n */\n\n\t\t// using direct call to ERC20 to speed up result\n\t\tvar cardinfo ;\n\t\t\n\t\tif (!carduuid) {\n\t\t\t// main card\n\t\t\tcardinfo = await this.getCurrencyCard(sessionuuid, walletuuid, currencyuuid);\n\t\t}\n\t\telse {\n\t\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\t\tcardinfo = await mvcclientwalletmodule. getCardInfo(sessionuuid, walletuuid, carduuid);\n\t\t}\n\t\t\n\t\t\n\t\tvar cardaddress = cardinfo.address;\n\t\t\n\t\t// get a childsession on currency scheme\n\t\tvar valuescheme = await this._getCurrencyScheme(session, currency);\n\t\tvar childsession = await this._getMonitoredSchemeSession(session, wallet, valuescheme);\n\n\t\tconst position = await _apicontrollers.getAddressERC20Position(childsession, null, tokenaddress, cardaddress)\n\t\t.catch((err) => {\n\t\t\tposition = 0;\n\t\t});\n\n\t\treturn this._createCurrencyAmount(childsession, currency, position);\n\t}\n\n\tasync getCurrencyCardCredits(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\n\t\tvar card = await this._getCurrencyCard(session, wallet, currency);\n\t\tvar carduuid = card.getCardUUID();\n\t\tvar schemeuuid = card.getSchemeUUID();\n\n\t\tvar credits = await mvcclientwalletmodule.getCreditBalance(sessionuuid, walletuuid, carduuid);\n\n\t\tcredits.threshold = await mvcclientwalletmodule.getSchemeTransactionUnitsThreshold(sessionuuid, schemeuuid);\n\n\t\treturn credits;\n\t}\n\n\tasync _getMonitoredCardSession(session, wallet, card) {\n\t\tvar cardsession = card._getSession();\n\n/* \t\tvar scheme = card.getScheme();\n\n\t\tif (scheme.isRemote()) {\n\t\t\tif (wallet) {\n\t\t\t\tvar walletschemeuuid = wallet.getSchemeUUID();\n\t\t\t\tvar schemeuuid = scheme.getSchemeUUID();\n\t\n\t\t\t\tif (this._canWalletHandleScheme(wallet, scheme)) {\n\t\t\t\t\t// use wallet session\n\t\t\t\t\tcardsession = wallet._getSession();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n */\n\t\treturn cardsession;\n\t}\n\n\tasync canPayAmount(sessionuuid, walletuuid, carduuid, toaddress, currencyuuid, amount, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find a card for currency ' + currencyuuid);\n\t}\n\n\n\tasync payAmount(sessionuuid, walletuuid, carduuid, toaddress, currencyuuid, amount, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find a card for currency ' + currencyuuid);\n\t\n\t\t// we top up card to be sure to be able sending a transaction\n\t\t// (if we need to have credit units)\n\t\tvar ops = await this._getCurrencyOps(session, currency);\n\n\t\tif ((ops.cantxfree !== true) && (ops.cantopup === true)) {\n\t\t\tconst topupinfo = await mvcclientwalletmodule.topUpCard(sessionuuid, walletuuid, carduuid)\t\t\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in payAndReport: ' + err);\n\t\t\t});\n\t\n\t\t\tif ((!topupinfo) || (!topupinfo.top) ) {\n\t\t\t\tconsole.log('no top up for card ' + carduuid);\n\t\t\t}\n\t\t}\n\n\n\t\t// transfer parameters\n\t\tvar tokenaddress = currency.address;\n\t\tvar tokenamount = amount;\n\t\tvar tokenamount_string = tokenamount.toString(); // use string to avoid \"fault='overflow', operation='BigNumber.from'\"\n\n\t\n\t\t// using token account to make transfer\n/* \t\t\n\t\tvar tokenaccount = await this._getTokenAccountFromAddress(session, card, tokenaddress).catch(err => {});\n\n\t\t// create contact from toaddress\n\t\tvar name = toaddress;\n\t\tvar contactinfo = {};\n\t\tvar tocontact = await _apicontrollers.createContact(session, name, toaddress, contactinfo).catch(err => {});\n\n\t\tawait tokenaccount.transferTo(contact, tokenamount_string);\n */\n\n\t\t// using direct call to ERC20 to speed up call\n\t\tvar cardsession = await this._getMonitoredCardSession(session, wallet, card);\n\t\tvar fromaccount = card._getSessionAccountObject();\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\tvar providerurl = await this._getCurrencyWeb3ProviderUrl(session, currency);\n\t\tvar fee  = await _apicontrollers.createSchemeFee(scheme, feelevel);\n\t\tvar value = 0;\n\n\t\tconst credits = await mvcclientwalletmodule.getCreditBalance(sessionuuid, walletuuid, carduuid)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in payAmount: ' + err);\n\t\t});\n\n\t\tconsole.log('sending tokens with gasLimit ' + fee.gaslimit + ' and gas price ' + fee.gasPrice);\n\t\tconsole.log('(fee.gaslimit * fee.gasPrice + value) is ' + (fee.gaslimit * fee.gasPrice + value));\n\t\tconsole.log('transaction credit before transfer is ' + (credits ? credits.transactioncredits : 'unknown'));\n\n\t\tif (credits && (credits.transactioncredits < (fee.gaslimit * fee.gasPrice + value))) {\n\t\t\tconsole.log('WARNING: transaction credit is lower than (fee.gaslimit * fee.gasPrice + value). You should raise transaction_units_min for corresponding scheme');\n\t\t}\n\n/* \t\t\n\t\tvar senderprivatekey = fromaccount.getPrivateKey();\n\t\tvar recipientaddress = toaddress;\n\n\t\tvar txhash = await _apicontrollers.sendERC20Tokens(cardsession, providerurl, tokenaddress, senderprivatekey, recipientaddress, tokenamount, fee);\n\n */\t\t\n\t\t// using transferERC20Tokens instead of sendERC20Tokens\n\t\t//var ethtx = _apicontrollers.createEthereumTransaction(cardsession, fromaccount);\n\t\tvar ethtx = await this._createMonitoredEthereumTransaction(wallet, card, cardsession, fromaccount);\n\t\t\t\n\t\tethtx.setToAddress(toaddress);\n\t\tethtx.setGas(fee.gaslimit);\n\t\tethtx.setGasPrice(fee.gasPrice);\n\n\t\tethtx.setValue(value);\n\n\t\tvar txhash = await _apicontrollers.transferERC20Tokens(cardsession, providerurl, tokenaddress, tokenamount_string, ethtx);\n\n\t\treturn txhash;\n\t}\n\n\tasync payAndReport(sessionuuid, walletuuid, toaddress, currencyuuid, amount) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar cardinfo = await this.getCurrencyCard(sessionuuid, walletuuid, currencyuuid);\n\n\t\tif (!cardinfo)\n\t\t\treturn Promise.reject('could not find a card for currency ' + currencyuuid);\n\n\t\tvar txhash = await this.payAmount(sessionuuid, walletuuid, cardinfo.uuid, toaddress, currencyuuid, amount);\n\n\t\t// we ask provider to make a payment url\n\t\tvar currency_provider = await this._getCurrencyProvider(session, currency);\n\n\t\tif (!currency_provider)\n\t\t\treturn Promise.reject('currency has no provider');\n\n\t\tvar paymenturl = currency_provider.getPaymentUrl(txhash);\n\n\t\treturn paymenturl;\n\t}\n\n\tasync getCurrencyTotalSupply(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\tvar currencyscheme = await currenciesmodule.getCurrencyScheme(session, currency);\n\t\tvar childsession = await this._getMonitoredSchemeSession(session, wallet, currencyscheme);\n\n\n\t\tvar tokenaddress = currency.address;\n\n\t\tvar erc20token = await _apicontrollers.importERC20Token(childsession, tokenaddress);\n\n\t\treturn erc20token.getChainTotalSupply();\n\t}\n\n\tasync _getAddressFromTokenUUID(session, wallet, card, tokenuuid) {\n\t\tvar global = this.global;\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\tvar erc20tokenaccount = await card.importTokenAccount(tokenuuid);\n\t\t// this creates a token account associated to carduuid\n\n\t\tif (!erc20tokenaccount)\n\t\t\treturn Promise.reject('could not find token ' + tokenuuid);\n\n\t\tvar token = erc20tokenaccount.getToken();\n\n\t\tvar tokenaccountsession = erc20tokenaccount._getSession();\n\n\t\tvar erc20tokencontract = token._getERC20TokenContract(tokenaccountsession);\n\t\tvar contractinterface = erc20tokencontract.getContractInterface();\n\t\tvar contractinstance = contractinterface.getContractInstance();\n\n\t\t// TODO: remove once EthereumNodeAccessInstance._findTransactionFromUUID(transactionuuid) is fixed\n\t\tvar ethereumnodeaccessinstance = contractinstance.getEthereumNodeAccessInstance();\n\n\t\tethereumnodeaccessinstance.MYWIDGET_OVERLOAD = Date.now();\n\t\tethereumnodeaccessinstance._findTransactionFromUUID = (transactionuuid) => {\n\t\t\tvar self = ethereumnodeaccessinstance;\n\n\t\t\t// get local list\n\t\t\tvar jsonarray = self._readTransactionLogs();\n\n\t\t\tfor (var i = 0; i < (jsonarray ? jsonarray.length : 0); i++) {\n\t\t\t\tvar tx_log = jsonarray[i];\n\t\t\t\tif (tx_log.transactionuuid == transactionuuid)\n\t\t\t\treturn tx_log.transactionHash;\n\t\t\t}\n\n\t\t};\n\n\t\t// END\n\n\t\tvar tokenaddress = await contractinterface.getAddressFromTransactionUUID(tokenuuid);\n\n\t\treturn tokenaddress;\n\t}\n\n\tasync importCurrencyFromTokenUUID(sessionuuid, walletuuid, carduuid, tokenuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tvar tokenaddress = await this._getAddressFromTokenUUID(session, wallet, card, tokenuuid);\n\n\t\tif (!tokenaddress)\t\t\t\n\t\t\treturn Promise.reject('could not find address for token ' + tokenuuid);\n\n\t\treturn this.importCurrencyFromTokenAddress(sessionuuid, walletuuid, carduuid, tokenaddress);\n\t}\n\n\tasync importCurrencyFromTokenAddress(sessionuuid, walletuuid, carduuid, tokenaddress) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tvar cardsession = await this._getMonitoredCardSession(session, wallet, card);\n\n\n\t\t// get erc20 token contract\n\t\tvar erc20token_contract = await _apicontrollers.importERC20Token(cardsession, tokenaddress);\n\n\t\tvar currency = {uuid: session.guid(), address: tokenaddress, xtra_data: {origin: 'import-from-token-address'}};\n\n\t\tcurrency.name = await erc20token_contract.getChainName();\n\t\tcurrency.symbol = await erc20token_contract.getChainSymbol();\n\t\tcurrency.decimals = await erc20token_contract.getChainDecimals();\n\n\t\tcurrency.scheme_uuid = card.getSchemeUUID();\n\t\tcurrency.ops = {canpay: true};\n\t\tcurrency.provider = 'provider.js';\n\n\t\t// save currency\n\t\tawait this.saveLocalCurrency(sessionuuid, currency);\n\n\t\t// make card as a currency card for this new currency\n\t\tvar currencyuuid = currency.uuid;\n\n\t\tawait this.makeCurrencyCard(sessionuuid, walletuuid, currencyuuid, carduuid);\n\n\t\treturn currency;\n\t}\n\n\n\t_getSchemeNetworkConfig(scheme) {\n\t\tvar network = scheme.getNetworkConfig();\n\n\t\treturn network;\n\t}\n\n\n\tasync getCurrencyCardList(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar cards = await this._getCurrencyCardList(session, wallet, currency).catch(err => {});\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar array = [];\n\t\t\t\t\n\t\tfor (var i = 0; i < (cards ? cards.length : 0); i++) {\n\t\t\tvar carduuid = cards[i].getCardUUID();\n\t\t\tvar cardinfo = {uuid: carduuid};\n\t\t\t\n\t\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, cards[i]);\n\t\t\t\n\t\t\tarray.push(cardinfo);\n\t\t}\n\t\t\n\t\treturn array;\n\t}\n\n\tasync getCurrencySchemeInfo(sessionuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar global = this.global;\n\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\tvar schemeinfo = {uuid: scheme.getSchemeUUID()};\n\t\t\n\t\tmvcclientwalletmodule._fillSchemeInfoFromScheme(schemeinfo, scheme);\n\n\t\treturn schemeinfo;\n\t}\n\n\tasync getPretradeSchemeInfo(sessionuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar global = this.global;\n\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\n\t\tvar pretradescheme = await this._getPretradeScheme(session, currency);\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\tvar pretradeschemeinfo = {uuid: pretradescheme.getSchemeUUID()};\n\t\t\n\t\tmvcclientwalletmodule._fillSchemeInfoFromScheme(pretradeschemeinfo, pretradescheme);\n\n\t\treturn pretradeschemeinfo;\n\t}\n\n\tasync getPretradeWeb3Url(sessionuuid, currencyuuid) {\n\t\tvar pretrade_schemeinfo = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\t\n\t\tvar pretrade_web3providerurl = pretrade_schemeinfo.network.ethnodeserver.web3_provider_url;\n\n\t\treturn pretrade_web3providerurl;\n\t}\n\n\tasync _getCardsOnScheme(wallet, scheme, bRefresh = true) {\n\t\tvar schemeuuid = scheme.getSchemeUUID();\n\t\tvar cardlist = await wallet.getCardList(bRefresh);\n\n\t\tvar array = [];\n\n\t\tfor (var i = 0; i < (cardlist ? cardlist.length : 0); i++) {\n\t\t\tvar card = cardlist[i];\n\n\t\t\tif (card.getSchemeUUID() === schemeuuid)\n\t\t\t\tarray.push(card);\n\t\t}\n\n\t\treturn array;\n\t}\n\n\tasync getPretradeCard(sessionuuid, walletuuid, carduuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid).catch(err => {});\n\t\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar pretradecardinfo;\n\n\t\t// for the moment we usually return a card on firenze\n\t\tvar pretradescheme = await this._getPretradeScheme(session, currency);\n\t\t\n\t\tvar cards = await this._getCardsOnScheme(wallet, pretradescheme, true)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in getPretradeCard: ' + err);\n\t\t});\n\n\t\tif (cards) {\n\t\t\tfor (var i = 0; i < cards.length; i++) { \n\t\t\t\tlet pretradecard = cards[i];\n\n\t\t\t\tif (pretradecard.isLocked()) {\n\t\t\t\t\tawait pretradecard.unlock();\n\t\t\t\t}\n\n\t\t\t\tvar canPretradeCardSign = await pretradecard.canSign();\n\n\t\t\t\tif (canPretradeCardSign === true) {\n\t\t\t\t\tpretradecardinfo = await mvcclientwalletmodule.getCardInfo(sessionuuid, walletuuid, pretradecard.getCardUUID());\n\t\t\t\t\tbreak;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n/* \t\tvar pretradeschemeuuid = pretradescheme.getSchemeUUID();\n\t\t\n\t\tvar cardinfos = await mvcclientwalletmodule.getCardList(sessionuuid, walletuuid, true)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in getPretradeCard: ' + err);\n\t\t});\n\n\t\tif (cardinfos) {\n\t\t\tfor (var i = 0; i < cardinfos.length; i++) {\n\n\t\t\t\tif (pretradeschemeuuid === cardinfos[i].schemeuuid) {\n\t\t\t\t\t// check card can sign\n\t\t\t\t\tlet pretradecard = await wallet.getCardFromUUID(cardinfos[i].uuid).catch(err => {});\n\n\t\t\t\t\tif (pretradecard) {\t\t\t\n\t\t\t\t\t\tif (pretradecard.isLocked()) {\n\t\t\t\t\t\t\tawait pretradecard.unlock();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar canPretradeCardSign = await pretradecard.canSign();\n\n\t\t\t\t\t\tif (canPretradeCardSign === true) {\n\t\t\t\t\t\t\tpretradecardinfo = cardinfos[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} */\n\n\t\t\n\n\t\tif (!pretradecardinfo) {\n\t\t\tif (card.isLocked()) {\n\t\t\t\tawait card.unlock();\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tlet canCardSign = await card.canSign();\n\t\t\tlet pretradecard;\n\n\t\t\tif (canCardSign === true) {\n\t\t\t\tvar pretrade_schemeinfo = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\n\t\t\t\tif (pretrade_schemeinfo.uuid != card.getSchemeUUID()) {\n\t\t\t\t\t// we clone card on pretrade scheme\n\t\t\t\t\tpretradecardinfo = await mvcclientwalletmodule.cloneCard(sessionuuid, walletuuid, carduuid, pretrade_schemeinfo.uuid);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// we return the card it self\n\t\t\t\t\tpretradecardinfo = await mvcclientwalletmodule.getCardInfo(sessionuuid, walletuuid, carduuid);\n\t\t\t\t}\n\n\t\t\t\tif (!pretradecardinfo)\n\t\t\t\t\treturn Promise.reject('could not clone or pick the main card for pretrade use');\n\n\t\t\t\tpretradecard = await wallet.getCardFromUUID(pretradecardinfo.uuid);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// main card is read-only, we can not use a clone or the card itself\n\t\t\t\t//return Promise.reject('card is read-only, can not create corresponding pretrade card');\n\n\t\t\t\t// let's create a card on the fly\n\t\t\t\tvar _privatekey = _apicontrollers.generatePrivateKey(session);\n\n\t\t\t\tpretradecard = await _apicontrollers.createWalletCard(session, wallet, pretradescheme, _privatekey);\n\n\t\t\t\tif (!pretradecard)\n\t\t\t\t\treturn Promise.reject('could not generate a pretrade card');\n\n\t\t\t}\n\n\t\t\tif (!pretradecard)\n\t\t\t\treturn Promise.reject('could not create a pretrade card');\n\n\t\t\t// mark as pretrade card\n\t\t\tawait this.setPretradeCard(sessionuuid, walletuuid, currencyuuid, pretradecard.uuid);\n\n\t\t\tpretradecardinfo = await mvcclientwalletmodule.getCardInfo(sessionuuid, walletuuid, pretradecard.uuid);\n\n\t\t}\n\n\t\tif (!pretradecardinfo)\n\t\t\treturn Promise.reject('could not find a card to register transactions');\n\n\t\treturn pretradecardinfo;\n\t}\n\n\n\tasync setPretradeCard(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t// sift through cards for currency to set the pretradecard flag accordingly\n\t\tvar pretradescheme = await this._getPretradeScheme(session, currency);\n\t\t\n\t\tvar cards = await this._getCardsOnScheme(wallet, pretradescheme, true)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in getPretradeCard: ' + err);\n\t\t});\n\n\t\tif (cards) {\n\t\t\tfor (var i = 0; i < (cards ? cards.length : 0); i++) {\n\t\t\t\tlet card = cards[i];\n\t\t\t\tlet xtradata = card.getXtraData('myquote');\n\t\n\t\t\t\tif (xtradata && (xtradata.pretradecard === true)) {\n\t\t\t\t\t// remove flag\n\t\t\t\t\txtradata.pretradecard = false;\n\t\n\t\t\t\t\tcard.putXtraData('myquote', xtradata);\n\t\n\t\t\t\t\tif (card.isLocked()) {\n\t\t\t\t\t\tawait card.unlock();\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tawait card.save();\n\t\t\t\t}\n\t\n\t\t\t\tif (card.getCardUUID() === carduuid) {\n\t\t\t\t\txtradata = (xtradata ? xtradata : {});\n\t\t\t\t\txtradata.pretradecard = true;\n\t\n\t\t\t\t\tcard.putXtraData('myquote', xtradata);\n\t\n\t\t\t\t\tif (card.isLocked()) {\n\t\t\t\t\t\tawait card.unlock();\n\t\t\t\t\t}\n\t\n\t\t\t\t\tawait card.save();\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t}\n\t\n\t}\n\n\n\n\t//\n\t// uniswap\n\t//\n\tasync getPriceForCreditUnits(sessionuuid, currencyuuid, creditunits) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar swapmodule = global.getModuleObject('uniswap');\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\t// compute corresponding ethereum credits\n\t\tvar ethnodemodule = global.getModuleObject('ethnode');\n\n\t\tvar avg_transaction_fee = this._getAverageTransactionFee(scheme)\n\n\t\tvar weiamount = ethnodemodule.getWeiFromEther(avg_transaction_fee);\n\t\tvar ethamount = await this._createDecimalAmount(session, weiamount, 18);\n\t\tethamount.multiply(creditunits);\n\t\t\n\t\tvar ethcredit = await ethamount.toInteger();\n\n\t\t// token info\n\t\tvar uniswap_v2 = currency.uniswap_v2;\n\t\tuniswap_v2.version = 'uniswap_v2';\n\n\t\tvar token = {};\n\t\ttoken.name = currency.name;\n\t\ttoken.address = currency.address;\n\t\ttoken.symbol = currency.symbol;\n\t\ttoken.decimals = currency.decimals;\n\n\t\tvar weth = {};\n\t\tweth.name = uniswap_v2.gas_name;\n\t\tweth.address = uniswap_v2.gas_address;\n\t\tweth.symbol = uniswap_v2.gas_symbol;\n\t\tweth.decimals = uniswap_v2.gas_decimals;\n\n\t\tvar pricing = await swapmodule.getPriceForOutput(session, scheme, token, weth, ethcredit, uniswap_v2);\n\n\t\tvar priceamount = (pricing.amounts_in ? pricing.amounts_in[0] : null)\n\n\t\tvar price_struct = {};\n\n\t\tprice_struct.creditunits_requested = creditunits;\n\t\tprice_struct.currency_amount = await this._createCurrencyAmount(session, currency, (priceamount ? priceamount : -1));\n\n\t\treturn price_struct;\n\t}\n\n\tasync buyCreditUnits(sessionuuid, walletuuid, carduuid, currencyuuid, creditunits, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\treturn Promise.reject('wallet uuid is undefined');\n\t\n\t\tif (!carduuid)\n\t\treturn Promise.reject('card uuid is undefined');\n\t\n\t\tif (!currencyuuid)\n\t\treturn Promise.reject('currency uuid is undefined');\n\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar swapmodule = global.getModuleObject('uniswap');\n\n\t\tvar scheme = await this._getCurrencyScheme(session, currency);\n\n\t\tvar cardsession = await this._getMonitoredCardSession(session, wallet, card);\n\t\tvar fromaccount = card._getSessionAccountObject();\n\n\t\t// compute corresponding ethereum credits\n\t\tvar ethnodemodule = global.getModuleObject('ethnode');\n\n\t\tvar avg_transaction_fee = this._getAverageTransactionFee(scheme)\n\n\t\tvar weiamount = ethnodemodule.getWeiFromEther(avg_transaction_fee);\n\t\tvar ethamount = await this._createDecimalAmount(session, weiamount, 18);\n\t\tethamount.multiply(creditunits);\n\t\t\n\t\tvar ethcredit = await ethamount.toInteger();\n\n\t\t// token info\n\t\tvar uniswap_v2 = currency.uniswap_v2;\n\t\tuniswap_v2.version = 'uniswap_v2';\n\n\t\tvar token = {};\n\t\ttoken.name = currency.name;\n\t\ttoken.address = currency.address;\n\t\ttoken.symbol = currency.symbol;\n\t\ttoken.decimals = currency.decimals;\n\n\t\tvar currencyposition = await this.getCurrencyPosition(sessionuuid, walletuuid, currencyuuid, carduuid);\n\t\tvar tokenamountmax = await currencyposition.toInteger();\n\n\t\tvar weth = {};\n\t\tweth.name = uniswap_v2.gas_name;\n\t\tweth.address = uniswap_v2.gas_address;\n\t\tweth.symbol = uniswap_v2.gas_symbol;\n\t\tweth.decimals = uniswap_v2.gas_decimals;\n\n\t\t// create ethereum transaction object\n\t\t//var ethtx = _apicontrollers.createEthereumTransaction(cardsession, fromaccount);\n\t\tvar ethtx = await this._createMonitoredEthereumTransaction(wallet, card, cardsession, fromaccount);\n\n\t\tethtx.setToAddress(fromaccount.getAddress()); // ask to send credits to card\n\n\t\t// fee\n\t\tvar fee = await _apicontrollers.createSchemeFee(scheme, feelevel);\n\t\t\t\n\t\tethtx.setGas(fee.gaslimit);\n\t\tethtx.setGasPrice(fee.gasPrice);\n\n\t\t// send swap request\n\t\treturn swapmodule.buyEthOnOutput(cardsession, scheme, token, tokenamountmax, weth, ethcredit, uniswap_v2, ethtx);\n\t}\n\n\t//\n\t// utils\n\t//\n\tasync _unformatAmount(session, amountstring, decimals) {\n\t\tif (amountstring === undefined)\n\t\t\treturn;\n\t\t\n\t\tvar _amountstring = amountstring.trim();\n\n\t\t// remove trailing symbol if some\n  \t\tvar index = _amountstring.indexOf(' ');\n\t\tif ( index > 0)\n\t\t_amountstring = _amountstring.substring(0, index);\n\n\t\tif ((!_amountstring) || isNaN(_amountstring))\n\t\t\treturn -1;\n\t\t\n\t\t\n\t\tvar split = amountstring.toString().split(\".\");\n\t\tvar amountnumberstring;\n\t\t\n\t\tif (typeof split[1] === 'undefined') {\n\t\t\t// no decimal\n\t\t\tvar multiplier = '';\n\t\t\tfor (var i = 0; i < decimals; i++) multiplier += '0';\n\t\n\t\t\tamountnumberstring = _amountstring + multiplier;\n\t\t}\n\t\telse {\n\t\t\tvar integerstring = split[0];\n\t\t\t\n\t\t\tif (split[1].length < decimals) {\n\t\t\t\tintegerstring += split[1];\n\t\t\t\t// fill with trailing zeros\n\t\t\t\tfor (var i = 0; i < (decimals - split[1].length); i++)\n\t\t\t\t\tintegerstring += '0';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tintegerstring += split[1].substr(0, decimals);\n\t\t\t}\n\t\t\t\n\t\t\tamountnumberstring = integerstring;\n\t\t}\n\t\t\n\t\treturn amountnumberstring;\n\t}\n\n\tasync _formatAmount(session, amount, decimals, options) {\n\t\tif (amount === undefined)\n\t\t\treturn;\n\t\t\n\t\tvar _inputamountstring = amount.toString();\n\t\tvar amountstring;\n\t\t\n\t\tif (_inputamountstring.length > decimals) {\n\t\t\t// integer part\n\t\t\tvar integerpart = _inputamountstring.substring(0, _inputamountstring.length - decimals);\n\n\t\t\tamountstring = integerpart + '.' + _inputamountstring.substring(_inputamountstring.length - decimals);\n\t\t}\n\t\telse {\n\t\t\tvar leading = '';\n\t\t\tfor (var i = 0; i < (decimals -_inputamountstring.length) ; i++) leading += '0';\n\t\t\tamountstring = '0.' + leading + _inputamountstring;\n\t\t}\n\n\t\tif (options) {\n\t\t\tif (typeof options.showdecimals !== 'undefined') {\n\t\t\t\tif (options.showdecimals === false) {\n\t\t\t\t\t// we remove . and after\n\t\t\t\t\tamountstring = amountstring.substring(0, amountstring.indexOf('.'));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar decimalsshown = (options.decimalsshown ? options.decimalsshown : decimals);\n\t\t\t\t\tamountstring = amountstring.substring(0, amountstring.indexOf('.') + 1 + decimalsshown);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn amountstring;\n\t}\n\t\n\n\tasync _formatMonetaryAmount(session, amount, symbol, decimals, options) {\n\t\tvar amountstring = await this._formatAmount(session, amount, decimals, options);\n\t\t\n\t\treturn amountstring + ' ' + symbol;\n\t}\n\n\tasync _formatTokenAmount(session, tokenamount, token, options) {\n\t\t// TODO: unsupported calls that would need to be\n\t\t// wrapped up in a token.init function\n\t\tvar erc20contrat = token._getERC20TokenContract(session); // necessary for _synchronize\n\t\tawait token._synchronizeERC20TokenContract(session);\n\t\t// TODO: end\n\t\t\n\t\tvar decimals = token.getDecimals();\n\t\tvar symbol = token.getSymbol();\n\t\t\n\t\tvar amountstring = await this._formatMonetaryAmount(session, tokenamount, symbol, decimals, options);\n\t\t\n\t\treturn amountstring;\n\t}\n\n\tasync getDecimalAmount(sessionuuid, amount, decimals = 18) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\treturn this._createDecimalAmount(session, amount, decimals);\n\t}\n\n\tasync getCurrencyAmount(sessionuuid, currencyuuid, amount) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet')\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar decimals = currency.decimals;\n\t\tlet tokenamountstring;\n\t\t\n\t\tif (typeof amount === 'string'){\n\t\t\ttokenamountstring = await this._unformatAmount(session, amount, decimals);\n\t\t}\n\t\telse if (Number.isInteger(amount)) {\n\t\t\ttokenamountstring = mvcclientwalletmodule.formatAmount(amount, decimals)\n\t\t} \n\t\telse {\n\t\t\tlet isFloat = (n) => {\n\t\t\t\treturn Number(n) === n && n % 1 !== 0;\n\t\t\t};\n\n\t\t\tif (isFloat(amount)) {\n\t\t\t\tlet amountstring = amount.toString();\n\t\t\t\ttokenamountstring = await this._unformatAmount(session, amountstring, decimals);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Promise.reject('amount is not correct: ' + amount);\n\t\t\t}\n\t\t}\n\n\t\treturn this._createCurrencyAmount(session, currency, tokenamountstring);\n\t}\n\t\n\tasync formatCurrencyAmount(sessionuuid, currencyuuid, currencyamount, options) {\n\t\tvar global = this.global;\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\n\t\tvar CurrencyAmountClass = global.getModuleClass('currencies', 'CurrencyAmount');\t\t\n\t\tif ((currencyamount instanceof CurrencyAmountClass) !== true)\n\t\treturn Promise.reject('wrong currency amount type');\n\t\t\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar _options = (options ? options : {showdecimals: true, decimalsshown: 2});\n\n\t\t// TEST\n/* \t\tvar currencyscheme = await this._getCurrencyScheme(session, currency);\n\t\tvar tokenaddress = currency.address;\n\n\t\tvar token = await currencyscheme.getTokenObject(tokenaddress);\n\t\t\n\t\tvar currencyamountstring = await this._formatTokenAmount(session, tokenamount, token, _options);\n */\t\t// TEST: end\n\n \t\tvar tokenamountstring = await currencyamount.toString();\n\t\tvar currencyamountstring = await this._formatMonetaryAmount(session, tokenamountstring, currency.symbol, currency.decimals, _options);\n\n\t\treturn currencyamountstring;\n\t}\n}\n\nif ( typeof window !== 'undefined' && typeof window.GlobalClass !== 'undefined' && window.GlobalClass ) {\n\tvar _GlobalClass = window.GlobalClass;\n}\nelse if (typeof window !== 'undefined') {\n\tvar _GlobalClass = ( window && window.simplestore && window.simplestore.Global ? window.simplestore.Global : null);\n}\nelse if (typeof global !== 'undefined') {\n\t// we are in node js\n\tvar _GlobalClass = ( global && global.simplestore && global.simplestore.Global ? global.simplestore.Global : null);\n}\n\n_GlobalClass.getGlobalObject().registerModuleObject(new Module());\n\n//dependencies\n_GlobalClass.getGlobalObject().registerModuleDepency('mvc-currencies', 'common');\n\n\n"],"mappings":"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"}