{"version":3,"file":"web-client.js","names":["console","log","WebClient","name","global","isready","isloading","globalscope","window","execution_env","EXEC_ENV","WebClientConfig","require","WebClientControllers","webclientcontrollers","getObject","module","namespace","currencies","simplestore","jQuery","jsonfile","_$","_getJQueryClass","Promise","resolve","reject","getJSON","res","err","data","configname","_loadExternalJSON","config_json","_globalscope","init","webclientcontrollers_init","Bootstrap","ScriptLoader","bootstrapobject","getBootstrapObject","rootscriptloader","getRootScriptLoader","clientglobal","Global","getGlobalObject","registerModuleObject","CoreConfig","Config","XtraConfig","instance","clientapicontrollers","getClientAPI","session","getCurrentSessionObject","loadConfig","webclient_config_dev","Object","assign","setExecutionEnvironment","_initdev","xtraconfigmodule","getModuleObject","xtraconfigmodule_activate","activation","xtraconfigmodule_ethnode_activate","overloadEthereumNodeAccess","xtraconfigmodule_storage_activate","overloadStorageAccess","authkeymodule","authkeymodule_activate","oauth2module","oauth2module_activate","getCurrencies","webapp_currencies","array","keys","i","length","key","currency","currenciesmodule","readLocalCurrencies","local_currencies","uuid","initdev","echotest","currencies_array","values","addCurrency","signalEvent","bForce","webapp_schemes","network_list","prodnetwork","xtra_data","origin","createScheme","scheme","builtin_scheme_list_servers","scheme_server","http_get_json","url","jsonarray","j","_builtin_local_schemes","getBuiltinLocalSchemes","_builtin_remote_schemes","getBuiltinRemoteSchemes","dev_currencies","dev_schemes","error","_clearWebLocalStorage","remoteschemes","importurl","importScheme","imported","testnetworks","testnetwork","accountarray","testaccounts","accnt","address","description","label","contactinfo","createContact","contact","creations","testvaults","vaultname","passphrase","createVault","creation","vaultsession","createBlankSessionObject","vaultnetworkconfig","getDefaultSchemeConfig","setSessionNetworkConfig","openVault","vault","impersonateVault","tokenarray","testtokens","tkn","tokenaddress","web3providerurl","tokenuuid","token","importERC20Token","setWeb3ProviderUrl","setLocalDescription","saveERC20Token","privatekey","private_key","account","createAccountObject","setDescription","addAccountObject","saveAccountObject","disconnectVault","userarray","testusers","value","putInVault","localwallets","walletname","createWallet","openWallet","wallet","walletsession","_getSession","user","localtestaccounts","getSchemeFromUUID","isRemote","testaccount","_cardname","_cardlabel","getName","_address","createCard","card","setLabel","save","k","localtesttokens","getTokenObject","createTokenAccount","tokenaccount","remotetestusers","default_address","networkconfig","getNetworkConfig","usercredentials","createNetworkSession","blanksession","authenticate","username","password","canauthenticate","getSessionAccountObjects","sessionaccounts","getAddress","getCardList","cards","isLocked","unlock","getTokenList","closeWallet","remotewallets","importWallet","stack","parentscriptloader","callback","self","modulescriptloader","getChildLoader","load_scripts","registerHook","cleanSessionContext_hook","getDefaultSchemeConfig_hook","loadModule","registerHooks","result","params","schemeconfig","flag","default_config","default_remote_network_config","restserver","activate","rest_server_url","rest_server_api_path","authserver","keyserver","push","handled","cleanChildSessionObjects","getClientControllers","getBuiltinCurrencies","currencyuuid","getCurrency","provider","Provider","builtin_local_schemes","builtin_remote_schemes","builtin_local_networks","builtin_remote_networks","localStorage","clear","string","getExecutionEnvironment","echotestdev","topsession","echo","getSessionUUID","localsession","createChildSessionObject","remotesession","networkuuid","networks","network","isAnonymous","getERC20TokenList","readCurrentBlockNumber","blocknumber","testtransactions","txhash","hash","readTransaction","tx","input_decoded_utf8","getTransactionReceiptData","data2","blockNumber","datastring","JSON","stringify","getEthereumTransaction","tx2","data_decoded_utf8","getEthereumTransactionReceipt","getEthAddressBalance","balance","providerurl","getAddressERC20Position","position","webclient"],"sources":["../../../../../../../imports/app/js/src/web-client.js"],"sourcesContent":["console.log('loading web-client.js');\n\n\nclass WebClient {\n\tconstructor() {\n\t\tthis.name = 'webclient';\n\t\t\n\t\tthis.global = null; // put by global on registration\n\t\tthis.isready = false;\n\t\tthis.isloading = false;\n\n\t\tthis.globalscope = window;\n\t\t\n\t\tthis.execution_env = ( (typeof WebClient.EXEC_ENV !== 'undefined') ? WebClient.EXEC_ENV : 'prod');\n\t\t\n\t\tvar WebClientConfig = require('./webclient-config.js').default;\n\n\t\tif ((WebClientConfig.execution_env == 'dev') || (this.execution_env == 'dev')) {\n\t\t\tthis.execution_env = 'dev';\n\t\t}\n\n\t\tthis.WebClientConfig = WebClientConfig;\n\n\t\tvar WebClientControllers = require('./control/controllers.js').default;\n\t\t\n\t\tthis.webclientcontrollers = WebClientControllers.getObject();\n\t\t\n\t\tthis.webclientcontrollers.module = this;\n\n\t\tthis.namespace = null; // e.g. to load config from sub-folder\n\n\t\tthis.currencies = null;\n\t}\n\n\t_getJQueryClass() {\n\t\tif (typeof window !== 'undefined' && window && (typeof window.simplestore !== 'undefined'))\n\t\t  return window.simplestore.jQuery;\n\t\telse if ((typeof global !== 'undefined') && (typeof global.simplestore !== 'undefined'))\n\t\t\treturn global.simplestore.jQuery;\n\t\telse\n\t\tthrow 'can not find JQuery class!!!';\n\t}\n\n\tasync _loadExternalJSON(jsonfile) {\n\t\t// note: works only for properly formed json files content\n\t\tvar _$ = this._getJQueryClass();\n\n\t\tvar data = await new Promise((resolve, reject) => { \n\t\t\t_$.getJSON(jsonfile, function(res) {\n\t\t\t\tif (res) resolve(res); else reject('no data');\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('exception in _loadExternal: ' + err);\n\t\t\t\treject('no data');\n\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('exception in _loadExternal: ' + err);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tasync setNameSpace(namespace) {\n\t\tthis.namespace = namespace;\n\t}\n\n\tasync loadConfig(configname) {\n\t\tvar jsonfile = './config/' + (this.namespace ? this.namespace + '/'  : '') + configname + '.json';\n\n\t\tvar config_json = await this._loadExternalJSON(jsonfile).catch(err => {});\n\n\t\treturn config_json;\n\t}\n\t\n\tasync init() {\n\t\tconsole.log('WebClient.init called');\n\t\tconsole.log('module init called for ' + this.name);\n\t\t\n\t\ttry {\n\t\t\tvar _globalscope = this.globalscope;\n\n\t\t\tvar webclientcontrollers_init = await this.webclientcontrollers.init()\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log('error initializing web client controllers: ' + err);\n\t\t\t});\n\t\t\t\n\t\t\tconsole.log('webclient controllers initialized');\t\t\t\n\t\t\t\n\t\t\t// end of all initialization\n\t\t\tvar Bootstrap = _globalscope.simplestore.Bootstrap;\n\t\t\tvar ScriptLoader = _globalscope.simplestore.ScriptLoader;\n\n\t\t\tvar bootstrapobject = Bootstrap.getBootstrapObject();\n\t\t\tvar rootscriptloader = ScriptLoader.getRootScriptLoader();\n\t\t\t\n\t\t\t// ethereum_core is now set\n\t\t\tvar clientglobal = _globalscope.simplestore.Global.getGlobalObject();\n\t\t\t\n\t\t\t// register this module\n\t\t\tclientglobal.registerModuleObject(this);\n\n\t\t\t// ethereum_core config\n\t\t\tvar clientglobal = _globalscope.simplestore.Global.getGlobalObject();\n\t\t\tvar CoreConfig = _globalscope.simplestore.Config;\n\t\t\t\n\t\t\tvar XtraConfig = _globalscope.simplestore.Config.XtraConfig;\n\t\t\t\n\t\t\tif (!XtraConfig.instance)\n\t\t\t\tXtraConfig.instance = new XtraConfig();\n\t\t\t\n\t\t\t// client config\n\t\t\tvar WebClientConfig = this.WebClientConfig;\n\t\t\t\n\t\t\t// put in simple store for easier access\n\t\t\t_globalscope.simplestore.WebClientConfig = WebClientConfig;\n\n\t\t\tvar clientapicontrollers = this.getClientAPI();\n\n\t\t\t// get session object\n\t\t\tvar session = clientapicontrollers.getCurrentSessionObject();\n\n\n\t\t\tif (this.execution_env == 'dev') {\n\n\t\t\t\t// loading dev environment config\n\t\t\t\tvar webclient_config_dev = await this.loadConfig('webclient-config-dev').catch(err => {});\n\n\t\t\t\tif (webclient_config_dev) {\n\t\t\t\t\tObject.assign(WebClientConfig, webclient_config_dev);\n\t\t\t\t}\n\n\t\t\t\tclientglobal.setExecutionEnvironment('dev');\n\t\t\t\t\n\t\t\t\t// we call this.webclientcontrollers._initdev to simplify debugging\n\t\t\t\tawait this.webclientcontrollers._initdev();\n\t\t\t}\n\n\t\t\t//\n\t\t\t// memory environment\n\t\t\t//\n\t\n\t\t\t\n\t\t\tvar xtraconfigmodule = clientglobal.getModuleObject('xtraconfig');\n\t\t\t\n\t\t\t// activate/deactivate xtraconfig module\n\t\t\tif (typeof WebClientConfig.xtraconfigmodule_activate !== 'undefined') {\n\t\t\t\txtraconfigmodule.activation(WebClientConfig.xtraconfigmodule_activate);\n\n\t\t\t\t// activate/deactivate overload of access\n\t\t\t\tif (typeof WebClientConfig.xtraconfigmodule_ethnode_activate !== 'undefined')\n\t\t\t\txtraconfigmodule.overloadEthereumNodeAccess(WebClientConfig.xtraconfigmodule_ethnode_activate);\n\t\t\t\tif (typeof WebClientConfig.xtraconfigmodule_storage_activate !== 'undefined')\n\t\t\t\txtraconfigmodule.overloadStorageAccess(WebClientConfig.xtraconfigmodule_storage_activate);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// authkey\n\t\t\tvar authkeymodule = clientglobal.getModuleObject('authkey');\n\t\t\n\t\t\t// activate/deactivate authkey module\n\t\t\tif (typeof WebClientConfig.authkeymodule_activate !== 'undefined')\n\t\t\tauthkeymodule.activation(WebClientConfig.authkeymodule_activate);\n\n\t\t\t// oauth2\n\t\t\tvar oauth2module = clientglobal.getModuleObject('oauth2');\n\t\t\n\t\t\t// activate/deactivate oauth2 module\n\t\t\tif (typeof WebClientConfig.oauth2module_activate !== 'undefined')\n\t\t\toauth2module.activation(WebClientConfig.oauth2module_activate);\n\n\n\t\t\t\n\t\t\t// load currencies\n\t\t\t\n\t\t\tvar currencies = this.getCurrencies(); // built-in\n\n\t\t\t// additional currencies for webapp\n\t\t\tvar webapp_currencies = await this.loadConfig('currencies-webapp')\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('WebClient.init error loading webapp currencies: ' + err);\n\t\t\t});\n\n\t\t\tif (webapp_currencies) {\n\t\t\t\tvar array = Object.keys(webapp_currencies);\n\n\t\t\t\tfor (var i = 0; i < (array ? array.length : 0); i++) {\n\t\t\t\t\tvar key = array[i];\n\t\t\t\t\tvar currency = webapp_currencies[key];\n\n\t\t\t\t\tcurrencies[key] = currency;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// local currencies for the user\n\t\t\tvar currenciesmodule = clientglobal.getModuleObject('currencies');\n\n\t\t\tvar local_currencies = await currenciesmodule.readLocalCurrencies(session)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('WebClient.init error reading local currencies: ' + err);\n\t\t\t});\n\n\t\t\tif (local_currencies) {\n\t\t\t\tfor (var i = 0; i < (local_currencies ? local_currencies.length : 0); i++) {\n\t\t\t\t\tvar key = local_currencies[i].uuid;\n\n\t\t\t\t\tcurrencies[key] = local_currencies[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// if execution env is dev, we setup a testing environment\n\t\t\tif (this.execution_env == 'dev') {\n\t\t\t\tawait this.initdev();\n\t\t\t\tawait this.echotest();\n\t\t\t}\n\n\t\t\t// we fill currencies in the currencies module\n\n\t\t\tif (currenciesmodule) {\n\t\t\t\tvar currencies_array = Object.values(currencies);\n\t\n\t\t\t\tfor (var i = 0; i < currencies_array.length; i++) {\n\t\t\t\t\tcurrenciesmodule.addCurrency(currencies_array[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('Warning: you must load currencies module before calling WebClient.init');\n\t\t\t}\n\t\t\t\n\t\t\t//signal end of mobile load\n\t\t\trootscriptloader.signalEvent('on_mobile_load_end');\n\t\t\t\n\t\t\tthis.isready = true;\t\t\t\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in WebClient.init: ' + e);\n\t\t}\t\n\t}\n\n\tasync initprod(bForce) {\n\t\tconsole.log('WebClient.initprod called');\n\t\t\n\t\t\n\t\ttry {\n\t\t\tvar WebClientConfig = this.WebClientConfig;\n\t\t\t\n\t\t\tconsole.log('WebClient.initprod starting for ' + this.execution_env + 'execution environment');\n\n\t\t\tvar clientapicontrollers = this.getClientAPI();\n\t\t\t\n\t\t\t// get session object\n\t\t\tvar session = clientapicontrollers.getCurrentSessionObject();\n\t\t\t\n\t\t\t//\n\t\t\t// storage (webapp) environment\n\t\t\t//\n\t\t\tvar webapp_schemes = await this.loadConfig('schemes-webapp')\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('WebClient.initprod error loading webapp schemes: ' + err);\n\t\t\t});\n\n\t\t\tif (webapp_schemes) {\n\t\t\t\tvar network_list = Object.values(webapp_schemes);\n\t\t\t\tconsole.log('WebClient.initprod starting adding prod schemes');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-config';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\t//\n\t\t\t// storage (site) environment\n\t\t\t//\n\n\t\t\t// look in https://domain.server.ext/config\n\t\t\t\n\t\t\t//\n\t\t\t// create built-in schemes\n\t\t\t//\n\t\t\t\n\t\t\tconsole.log('WebClient.initprod creating schemes');\n\t\t\t\n\t\t\t//\n\t\t\t// create schemes from built-in networks\n\t\t\t//\n/* \t\t\t\n\t\t\t// local\n\t\t\tvar _builtin_local_networks = this.getBuiltinLocalNetworks();\n\t\t\tif (_builtin_local_networks) {\n\t\t\t\tvar network_list = Object.values(_builtin_local_networks);\n\t\t\t\tconsole.log('WebClient.initprod starting creating schemes from local networks');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-network-built-in';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// remote\n\t\t\tvar _builtin_remote_networks = this.getBuiltinRemoteNetworks()\n\t\t\tif (_builtin_remote_networks) {\n\t\t\t\tvar network_list = Object.values(_builtin_remote_networks);\n\t\t\t\tconsole.log('WebClient.initprod starting creating schemes from remote networks');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-network-built-in';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n */\t\t\t\n\t\t\t\n\t\t\t//\n\t\t\t// import schemes from servers\n\t\t\t//\n\t\t\tif (WebClientConfig.builtin_scheme_list_servers) {\n\t\t\t\tconsole.log('WebClient.initprod starting calling scheme list servers');\n\t\t\t\tfor (var i = 0; i < WebClientConfig.builtin_scheme_list_servers.length; i++) {\n\t\t\t\t\tvar scheme_server = WebClientConfig.builtin_scheme_list_servers[i];\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('WebClient.initprod calling scheme list server: ' + scheme_server.name);\n\t\t\t\t\tvar jsonarray = await clientapicontrollers.http_get_json(session, scheme_server.url)\n\t\t\t\t\t.catch(err => { jsonarray = null;});\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('WebClient.initprod starting calling scheme list servers');\n\t\t\t\t\tvar network_list = (jsonarray && jsonarray.data ? jsonarray.data : null);\n\t\t\t\t\tfor (var j = 0; j < (network_list ? network_list.length : 0); j++) {\n\t\t\t\t\t\tvar prodnetwork = network_list[j];\n\t\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-server-import';\n\t\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\t\t\t// create schemes from built-in schemes\n\t\t\t//\n\n\t\t\t// local schemes\n\t\t\tvar _builtin_local_schemes = this.getBuiltinLocalSchemes()\n\t\t\tif (_builtin_local_schemes) {\n\t\t\t\tvar network_list = Object.values(_builtin_local_schemes);\n\t\t\t\tconsole.log('WebClient.initprod starting creating local schemes');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-local-built-in';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remote schemes\n\t\t\tvar _builtin_remote_schemes = this.getBuiltinRemoteSchemes();\n\t\t\tif (_builtin_remote_schemes) {\n\t\t\t\tvar network_list = Object.values(_builtin_remote_schemes);\n\t\t\t\tconsole.log('WebClient.initprod starting creating remote schemes');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'prod-remote-built-in';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in WebClient.initprod: ' + e);\n\t\t}\n\t}\n\n\t\n\tasync initdev(bForce) {\n\t\tconsole.log('WebClient.initdev called');\n\t\t\n\t\ttry {\n\t\t\tvar WebClientConfig = this.WebClientConfig;\n\t\t\t\n\t\t\tvar clientapicontrollers = this.getClientAPI();\n\t\t\t\n\t\t\t// get session object\n\t\t\tvar session = clientapicontrollers.getCurrentSessionObject();\n\n\n\t\t\t//\n\t\t\t// memory environment\n\t\t\t//\n\n\t\t\t// load additional currencies if any\n\t\t\tvar currencies = this.getCurrencies();\n\n\t\t\t// additional currencies for dev\n\t\t\tvar dev_currencies = await this.loadConfig('currencies-dev')\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('WebClient.initdev error loading dev currencies: ' + err);\n\t\t\t});\n\n\t\t\tif (dev_currencies) {\n\t\t\t\tvar array = Object.keys(dev_currencies);\n\n\t\t\t\tfor (var i = 0; i < (array ? array.length : 0); i++) {\n\t\t\t\t\tvar key = array[i];\n\t\t\t\t\tvar currency = dev_currencies[key];\n\n\t\t\t\t\tcurrencies[key] = currency;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\t// storage (webapp) environment\n\t\t\t//\n\n\t\t\t// add dev schemes to localstorage, if any\n\t\t\tvar dev_schemes = await this.loadConfig('schemes-dev')\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('WebClient.initdev error loading dev schemes: ' + err);\n\t\t\t});\n\n\t\t\tif (dev_schemes) {\n\t\t\t\tvar network_list = Object.values(dev_schemes);\n\t\t\t\tconsole.log('WebClient.initdev starting adding dev schemes');\n\t\t\t\tfor (var i = 0; i < network_list.length; i++) {\n\t\t\t\t\tvar prodnetwork = network_list[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'dev-config';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, prodnetwork);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\t// storage (site) environment\n\t\t\t//\n\n\t\t\t// look in https://domain.server.ext/config\n\n\n\n\n\t\t\t// STOP if init of complete dev storage environment not required\n\n\t\t\tif ((WebClientConfig.initdev !== true) && (bForce !== true))\n\t\t\t\treturn;\n\n\t\t\tconsole.log('WebClient.initdev starting for ' + this.execution_env + ' execution environment');\n\n\t\t\t// clear LocalStorage\n\t\t\tconst error = this._clearWebLocalStorage();\n\t\t\tconsole.log('LocalStorage' + (error ? ' cleared successfully' : ' NOT cleared because of error: ' + error));\n\n\t\t\t//\n\t\t\t// import schemes from remote server\n\t\t\t// \n\t\t\tconsole.log('WebClient.initdev importing schemes');\n\t\t\tif (WebClientConfig.remoteschemes) {\n\t\t\t\tconsole.log('WebClient.initdev starting importing schemes');\n\t\t\t\tfor (var i = 0; i < WebClientConfig.remoteschemes.length; i++) {\n\t\t\t\t\tvar importurl = WebClientConfig.remoteschemes[i].importurl;\n\t\t\t\t\t\n\t\t\t\t\tvar imported = await clientapicontrollers.importScheme(session, importurl);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\n\t\t\t// create schemes\n\t\t\t//\n\t\t\tconsole.log('WebClient.initdev creating schemes');\n\t\t\tif (WebClientConfig.testnetworks) {\n\t\t\t\tconsole.log('WebClient.initdev starting creating schemes');\n\t\t\t\tfor (var i = 0; i < WebClientConfig.testnetworks.length; i++) {\n\t\t\t\t\tvar testnetwork = WebClientConfig.testnetworks[i];\n\t\t\t\t\tprodnetwork.xtra_data = (prodnetwork.xtra_data ? prodnetwork.xtra_data : {});\n\t\t\t\t\tprodnetwork.xtra_data.origin = 'dev-built-in';\n\t\t\t\t\tvar scheme = await clientapicontrollers.createScheme(session, testnetwork);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\n\t\t\t// create contacts\n\t\t\t//\n\t\t\tconsole.log('WebClient.initdev creating contacts');\n\t\t\tvar accountarray = WebClientConfig.testaccounts;\n\t\t\t\n\t\t\tif (accountarray) {\n\t\t\t\tfor (var i = 0; i < accountarray.length; i++) {\n\t\t\t\t\tvar accnt = accountarray[i];\n\t\t\t\t\tvar address = accnt.address;\n\t\t\t\t\tvar name = accnt.description;\n\t\t\t\t\tvar label = accnt.description;\n\t\t\t\t\tvar contactinfo = {label: label};\n\t\t\t\t\t\n\t\t\t\t\tvar contact = await clientapicontrollers.createContact(session, name, address, contactinfo);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\n\t\t\t// create local vaults and wallets\n\t\t\t//\n\t\t\tvar creations = [];\n\t\t\tif (WebClientConfig.testvaults && (WebClientConfig.testvaults.length > 0)) {\n\t\t\t\tconsole.log('WebClient.initdev creating vaults');\n\t\t\t\t\n\t\t\t\t// create all the local test vaults\n\t\t\t\tfor (var i = 0; i < WebClientConfig.testvaults.length; i++) {\n\t\t\t\t\tvar vaultname = WebClientConfig.testvaults[i].name;\n\t\t\t\t\tvar passphrase = WebClientConfig.testvaults[i].passphrase;\n\t\t\t\t\t\n\t\t\t\t\tvar creation = await clientapicontrollers.createVault(session, vaultname, passphrase);\n\t\t\t\t\t\n\t\t\t\t\tcreations[i] = creation;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t// go back to first vault\n\t\t\t\tcreation = creations[0];\n\t\t\t\t\n\t\t\t\tif (creation) {\n\t\t\t\t\tconsole.log('WebClient.initdev creating environment for first vault');\n\t\t\t\t\tvar vaultname = WebClientConfig.testvaults[0].name;\n\t\t\t\t\tvar passphrase = WebClientConfig.testvaults[0].passphrase;\n\t\t\t\t\t\n\t\t\t\t\t// local storage on the client\n\t\t\t\t\tconsole.log('WebClient.initdev creating client tokens & accounts for first vault');\n\t\t\t\t\t\n\t\t\t\t\t// create a local session and\n\t\t\t\t\t// impersonate as a vault to save tokens and accounts under 'shared'\n\t\t\t\t\tvar vaultsession = clientapicontrollers.createBlankSessionObject();\n\t\t\t\t\tvar vaultnetworkconfig = clientapicontrollers.getDefaultSchemeConfig(0);\n\t\t\t\t\t\n\t\t\t\t\t//vaultnetworkconfig.ethnodeserver.web3_provider_url = (WebClientConfig.testnetworks[0] ? WebClientConfig.testnetworks[0].ethnodeserver.web3_provider_url : null);\n\t\t\t\t\t\n\t\t\t\t\tawait clientapicontrollers.setSessionNetworkConfig(vaultsession, vaultnetworkconfig);\n\t\t\t\t\t\n\t\t\t\t\tvar vault = await clientapicontrollers.openVault(vaultsession, vaultname, passphrase);\n\t\t\t\t\tif (vault) {\n\t\t\t\t\t\tclientapicontrollers.impersonateVault(vaultsession, vault);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// create tokens\n\t\t\t\t\t\tconsole.log('WebClient.initdev storing local client tokens for first vault');\n\t\t\t\t\t\tvar tokenarray = WebClientConfig.testtokens;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tokenarray) {\n\t\t\t\t\t\t\tfor (var i = 0; i < tokenarray.length; i++) {\n\t\t\t\t\t\t\t\tvar tkn = tokenarray[i];\n\t\t\t\t\t\t\t\tvar tokenaddress = tkn.address;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar web3providerurl = tkn.web3providerurl;\n\t\t\t\t\t\t\t\tvar description = tkn.description;\n\t\t\t\t\t\t\t\tvar tokenuuid = tkn.uuid;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar token = clientapicontrollers.importERC20Token(vaultsession, tokenaddress);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (web3providerurl) token.setWeb3ProviderUrl(web3providerurl);\n\t\t\t\t\t\t\t\tif (description) token.setLocalDescription(description);\n\t\t\t\t\t\t\t\tif (tokenuuid) token.uuid = tokenuuid;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we save this token\n\t\t\t\t\t\t\t\tawait clientapicontrollers.saveERC20Token(vaultsession, token);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// create accounts\n\t\t\t\t\t\tconsole.log('WebClient.initdev storing local accounts for first vault');\n\t\t\t\t\t\tvar accountarray = WebClientConfig.testaccounts;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (accountarray) {\n\t\t\t\t\t\t\tfor (var i = 0; i < accountarray.length; i++) {\n\t\t\t\t\t\t\t\tvar accnt = accountarray[i];\n\t\t\t\t\t\t\t\tvar address = accnt.address;\n\t\t\t\t\t\t\t\tvar privatekey = accnt.private_key;\n\t\t\t\t\t\t\t\tvar description = accnt.description;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar account = clientapicontrollers.createAccountObject(vaultsession, address, privatekey);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\taccount.setDescription(description);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsession.addAccountObject(account);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we save this account\n\t\t\t\t\t\t\t\tawait clientapicontrollers.saveAccountObject(vaultsession, account);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tclientapicontrollers.disconnectVault(vaultsession, vault);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// store remote user credentials\n\t\t\t\t\tvar userarray = WebClientConfig.testusers;\n\t\t\t\t\t\n\t\t\t\t\tif (userarray) {\n\t\t\t\t\t\tvar key = 'credentials';\n\t\t\t\t\t\tvar value = userarray;\n\t\t\t\t\t\t\n\t\t\t\t\t\tawait clientapicontrollers.putInVault(session, vaultname, key, value)\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log('error storing credentials in vault ' + vaultname);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} // if (WebClientConfig.testvaults\n\t\t\n\t\t\t\n\t\t\t//\n\t\t\t// create local wallets\n\t\t\t//\n\t\t\tif (WebClientConfig.localwallets && (WebClientConfig.localwallets.length > 0)) {\n\t\t\t\tconsole.log('WebClient.initdev creating wallets');\n\t\t\t\t// reset creations\n\t\t\t\tcreations = [];\n\t\t\t\t\n\t\t\t\t//\n\t\t\t\t// create all the local test wallets\n\t\t\t\t// (which will have a vault name based on their uuid)\n\t\t\t\tfor (var i = 0; i < WebClientConfig.localwallets.length; i++) {\n\t\t\t\t\tvar walletname = WebClientConfig.localwallets[i].name;\n\t\t\t\t\tvar passphrase = WebClientConfig.localwallets[i].passphrase;\n\t\t\t\t\t\n\t\t\t\t\tvar creation = await clientapicontrollers.createWallet(session, walletname, passphrase);\n\t\t\t\t\t\n\t\t\t\t\tcreations[i] = creation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// go back to first wallet\n\t\t\t\tcreation = creations[0];\n\t\t\t\t\n\t\t\t\tif (creation) {\n\t\t\t\t\tconsole.log('WebClient.initdev creating environment for first wallet');\n\t\t\t\t\tvar walletname = WebClientConfig.localwallets[0].name;\n\t\t\t\t\tvar passphrase = WebClientConfig.localwallets[0].passphrase;\n\t\t\t\t\t\n\n\t\t\t\t\t// wallet\n\t\t\t\t\tvar wallet = await clientapicontrollers.openWallet(session, walletname, passphrase);\n\t\t\t\t\t\n\t\t\t\t\tif (wallet) {\n\t\t\t\t\t\t// get wallet's local session and\n\t\t\t\t\t\t// save tokens and accounts under 'shared'\n\t\t\t\t\t\tvar walletsession = wallet._getSession();\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t// tokens and account stored on the client\n\t\t\t\t\t\t// for client cards\n\t\t\t\t\t\tconsole.log('WebClient.initdev creating client tokens & accounts for first wallet');\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t// create tokens\n\t\t\t\t\t\tconsole.log('WebClient.initdev storing local client tokens for first wallet');\n\t\t\t\t\t\tvar tokenarray = WebClientConfig.testtokens;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tokenarray) {\n\t\t\t\t\t\t\tfor (var i = 0; i < tokenarray.length; i++) {\n\t\t\t\t\t\t\t\tvar tkn = tokenarray[i];\n\t\t\t\t\t\t\t\tvar tokenaddress = tkn.address;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar web3providerurl = tkn.web3providerurl;\n\t\t\t\t\t\t\t\tvar description = tkn.description;\n\t\t\t\t\t\t\t\tvar tokenuuid = tkn.uuid;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar token = clientapicontrollers.importERC20Token(walletsession, tokenaddress);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (web3providerurl) token.setWeb3ProviderUrl(web3providerurl);\n\t\t\t\t\t\t\t\tif (description) token.setLocalDescription(description);\n\t\t\t\t\t\t\t\tif (tokenuuid) token.uuid = tokenuuid;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we save this token\n\t\t\t\t\t\t\t\tawait clientapicontrollers.saveERC20Token(walletsession, token);\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// create accounts\n\t\t\t\t\t\tconsole.log('WebClient.initdev storing local accounts for first wallet');\n\t\t\t\t\t\tvar accountarray = WebClientConfig.testaccounts;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (accountarray) {\n\t\t\t\t\t\t\tfor (var i = 0; i < accountarray.length; i++) {\n\t\t\t\t\t\t\t\tvar accnt = accountarray[i];\n\t\t\t\t\t\t\t\tvar address = accnt.address;\n\t\t\t\t\t\t\t\tvar privatekey = accnt.private_key;\n\t\t\t\t\t\t\t\tvar description = accnt.description;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar account = clientapicontrollers.createAccountObject(walletsession, address, privatekey);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\taccount.setDescription(description);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\twalletsession.addAccountObject(account);\n\t\t\t\t\t\t\t\twalletsession.user.addAccountObject(account);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we save this account\n\t\t\t\t\t\t\t\tawait clientapicontrollers.saveAccountObject(walletsession, account);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// local cards\n\t\t\t\t\t\t//\n\t\t\t\t\t\tif (WebClientConfig.testnetworks && WebClientConfig.localtestaccounts) {\n\t\t\t\t\t\t\tconsole.log('WebClient.initdev creating local cards');\n\n\t\t\t\t\t\t\t// create a card in the wallet for each test account\n\t\t\t\t\t\t\t// for each local test scheme\n\t\t\t\t\t\t\tfor (var i = 0; i < WebClientConfig.testnetworks.length; i++) {\n\t\t\t\t\t\t\t\tvar scheme = await clientapicontrollers.getSchemeFromUUID(session, WebClientConfig.testnetworks[i].uuid);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ((scheme) && (!scheme.isRemote())) {\n\t\t\t\t\t\t\t\t\tfor (var j = 0; j < WebClientConfig.localtestaccounts.length; j++) {\n\t\t\t\t\t\t\t\t\t\tvar testaccount = WebClientConfig.localtestaccounts[j];\n\t\t\t\t\t\t\t\t\t\tvar _cardname = testaccount.description;\n\t\t\t\t\t\t\t\t\t\tvar _cardlabel = testaccount.description + '-on-' + scheme.getName();\n\t\t\t\t\t\t\t\t\t\tvar _address = testaccount.address;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar card = await wallet.createCard(scheme, _cardname, null, _address)\n\t\t\t\t\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('error while creating local card ' + _cardname + ': ' + err);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (card) {\n\t\t\t\t\t\t\t\t\t\t\tcard.setLabel(_cardlabel);\n\t\t\t\t\t\t\t\t\t\t\tawait card.save();\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t// create local tokens\n\t\t\t\t\t\t\t\t\t\t\tfor (var k = 0; k < WebClientConfig.localtesttokens; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar tkn = WebClientConfig.localtesttokens[k];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tvar token = card.getTokenObject(tkn.address);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tvar tokenaccount = await card.createTokenAccount(tkn);\n\t\t\t\t\t\t\t\t\t\t\t\tawait tokenaccount.init();\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\ttokenaccount.setDescription(tkn.description);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tawait tokenaccount.save();\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} // for (var i = 0; i < WebClientConfig.testnetworks.length; i++) \n\n\t\t\t\t\t\t} // if (WebClientConfig.testnetworks && WebClientConfig.localtestaccounts)\n\t\t\t\t\t\t\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// remote cards\n\t\t\t\t\t\t//\n\t\t\t\t\t\t\n\t\t\t\t\t\t// remote user credentials\n\t\t\t\t\t\tvar userarray = WebClientConfig.remotetestusers;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (userarray) {\n\n\t\t\t\t\t\t\t// create a card in the wallet for each test user\n\t\t\t\t\t\t\t// for each remote test scheme\n\t\t\t\t\t\t\tif (WebClientConfig.testnetworks && WebClientConfig.testaccounts && WebClientConfig.testaccounts[0] && WebClientConfig.testaccounts[0].address) {\n\t\t\t\t\t\t\t\tconsole.log('WebClient.initdev creating remote cards');\n\t\t\t\t\t\t\t\tvar default_address = WebClientConfig.testaccounts[0].address; // default address to use\n\n\t\t\t\t\t\t\t\tfor (var i = 0; i < WebClientConfig.testnetworks.length; i++) {\n\t\t\t\t\t\t\t\t\tvar scheme = await clientapicontrollers.getSchemeFromUUID(session, WebClientConfig.testnetworks[i].uuid);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (scheme) {\n\t\t\t\t\t\t\t\t\t\tif (scheme.isRemote()) {\n\t\t\t\t\t\t\t\t\t\t\tvar networkconfig = scheme.getNetworkConfig();\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < userarray.length; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar usercredentials = userarray[j];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t// create card if we can authenticate\n\t\t\t\t\t\t\t\t\t\t\t\tvar blanksession = await clientapicontrollers.createNetworkSession(networkconfig);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tvar canauthenticate = await clientapicontrollers.authenticate(blanksession, usercredentials.username, usercredentials.password);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (canauthenticate) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar sessionaccounts = await clientapicontrollers.getSessionAccountObjects(blanksession, true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _address = default_address;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (sessionaccounts) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// we create one card for each personal account\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var k = 0; k < sessionaccounts.length; k++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _cardlabel = usercredentials.username + '-on-' + scheme.getName()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_address = sessionaccounts[k].getAddress();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar card = await wallet.createCard(scheme, usercredentials.username, usercredentials.password, _address)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('error while creating remote card ' + usercredentials.username + ': ' + err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (card) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcard.setLabel(_cardlabel);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait card.save();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t} //if (sessionaccounts)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t} //if (canauthenticate)\n\t\t\t\t\t\t\t\t\t\t\t} // for (var j = 0; j < userarray.length\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/*else {\n\t\t\t\t\t\t\t\t\t\t\t// local client card\n\t\t\t\t\t\t\t\t\t\t\tif (accountarray) {\n\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < accountarray.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar accnt = accountarray[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar description = accnt.description;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _address = accnt.address;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar card = await wallet.createCard(scheme, description, null, _address)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('error while creating card ' + description + ': ' + err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tconsole.log('error: could not find scheme with uuid ' + WebClientConfig.testnetworks[i].uuid);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} //for (var i = 0; i < WebClientConfig.testnetworks.length; i++)\n\t\t\t\t\t\t\t} // if (WebClientConfig.testnetworks && WebClientConfig.testaccounts && WebClientConfig.testaccounts[0] && WebClientConfig.testaccounts[0].address)\n\t\t\t\t\t\t} // if (userarray)\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t// create token accounts\n\t\t\t\t\t\t// and store them\n\t\t\t\t\t\tconsole.log('WebClient.initdev creating token accounts for cards of first wallet');\n\t\t\t\t\t\tvar cards = await wallet.getCardList(true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// put in every card\n\t\t\t\t\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\t\t\t\t\tvar card = cards[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (card.isLocked()) {\n\t\t\t\t\t\t\t\tawait card.unlock();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar tokenarray = await card.getTokenList(true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (tokenarray) {\n\t\t\t\t\t\t\t\tfor (var j = 0; j < tokenarray.length; j++) {\n\t\t\t\t\t\t\t\t\tvar tkn = tokenarray[j];\n\t\t\t\t\t\t\t\t\tvar tokenaddress = tkn.getAddress();\n\t\t\t\t\t\t\t\t\tvar description = tkn.getAddress();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar tokenaccount = await card.createTokenAccount(tkn);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t//tokenaccount.setLabel(description);\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t// close wallet\n\t\t\t\t\t\tclientapicontrollers.closeWallet(session, wallet);\n\t\t\t\t\t} // if (wallet)\n\t\t\t\t\t\n\t\t\t\t} //if (creation[0)\n\t\t\t\n\t\t\t\n\t\t\t\t//\n\t\t\t\t// import remote wallets from remote server\n\t\t\t\t// \n\t\t\t\tconsole.log('WebClient.initdev importing remote wallets');\n\t\t\t\tif (WebClientConfig.remotewallets) {\n\t\t\t\t\tfor (var i = 0; i < WebClientConfig.remotewallets.length; i++) {\n\t\t\t\t\t\tvar username = WebClientConfig.remotewallets[i].username;\n\t\t\t\t\t\tvar password = WebClientConfig.remotewallets[i].password;\n\t\t\t\t\t\tvar importurl = WebClientConfig.remotewallets[i].importurl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar imported = await clientapicontrollers.importWallet(session, importurl, username, password);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\n\t\t\t}\n\n\t\t\tconsole.log('WebClient.initdev successfully finished initialization of dev environment');\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in WebClient.initdev: ' + e);\n\t\t\tconsole.log(e.stack);\n\t\t}\n\t\t\n\t\tconsole.log('WebClient.initdev end');\n\t}\n\n\n\t// compulsory  module functions\n\tloadModule(parentscriptloader, callback) {\n\t\tconsole.log('loadModule called for module ' + this.name);\n\t\t\n\t\tif (this.isloading)\n\t\t\treturn;\n\t\t\t\n\t\tthis.isloading = true;\n\n\t\tvar self = this;\n\n\t\tvar modulescriptloader = parentscriptloader.getChildLoader('webclientmoduleloader');\n\n\t\tmodulescriptloader.load_scripts(function() { \n\t\t\t//self.init(); // init is called by index.js\n\t\t\tif (callback) callback(null, self); \n\t\t});\n\n\t\treturn modulescriptloader;\t\n\t}\n\t\n\tisReady() {\n\t\treturn this.isready;\n\t}\n\n\thasLoadStarted() {\n\t\treturn this.isloading;\n\t}\n\n\t// optional  module functions\n\tregisterHooks() {\n\t\tconsole.log('module registerHooks called for ' + this.name);\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tglobal.registerHook('cleanSessionContext_hook', this.name, this.cleanSessionContext_hook);\n\t\t\n\t\tglobal.registerHook('getDefaultSchemeConfig_hook', this.name, this.getDefaultSchemeConfig_hook);\n\t}\n\t\n\tpostRegisterModule() {\n\t\tconsole.log('postRegisterModule called for ' + this.name);\n\t\tif (!this.isloading) {\n\t\t\tvar global = this.global;\n\t\t\tvar self = this;\n\t\t\tvar rootscriptloader = global.getRootScriptLoader();\n\t\t\t\n\t\t\tthis.loadModule(rootscriptloader, () => {\n\t\t\t\tif (this.registerHooks)\n\t\t\t\tthis.registerHooks();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetDefaultSchemeConfig_hook(result, params) {\n\t\tconsole.log('getDefaultSchemeConfig_hook called for ' + this.name);\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tvar schemeconfig = params[0];\n\t\tvar flag = params[1];\n\t\t\n\t\tswitch(flag) {\n\t\t\tcase 1:\n\t\t\t\tvar WebClientConfig = this.WebClientConfig;\n\t\t\t\t\n\t\t\t\tvar default_config = WebClientConfig.default_remote_network_config;\n\t\t\t\t\n\t\t\t\tif (default_config) {\n\t\t\t\t\tif (!schemeconfig.restserver) default_config.restserver = {};\n\t\t\t\t\t\n\t\t\t\t\tif (default_config.restserver) {\n\t\t\t\t\t\tschemeconfig.restserver.activate = default_config.restserver.activate;\n\t\t\t\t\t\tschemeconfig.restserver.rest_server_url = default_config.restserver.rest_server_url;\n\t\t\t\t\t\tschemeconfig.restserver.rest_server_api_path = default_config.restserver.rest_server_api_path;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!schemeconfig.authserver) schemeconfig.restserver = {};\n\t\t\t\t\t\n\t\t\t\t\tif (default_config.authserver) {\n\t\t\t\t\t\tschemeconfig.authserver.activate = default_config.authserver.activate;\n\t\t\t\t\t\tschemeconfig.authserver.rest_server_url = default_config.authserver.rest_server_url;\n\t\t\t\t\t\tschemeconfig.authserver.rest_server_api_path = default_config.authserver.rest_server_api_path;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!schemeconfig.keyserver) schemeconfig.restserver = {};\n\t\t\t\t\t\n\t\t\t\t\tif (default_config.keyserver) {\n\t\t\t\t\t\tschemeconfig.keyserver.activate = default_config.keyserver.activate;\n\t\t\t\t\t\tschemeconfig.keyserver.rest_server_url = default_config.keyserver.rest_server_url;\n\t\t\t\t\t\tschemeconfig.keyserver.rest_server_api_path = default_config.keyserver.rest_server_api_path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\n\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t\t\n\t\tresult.push({module: this.name, handled: true});\n\t\t\n\t\treturn true;\n\t}\n\n\tcleanSessionContext_hook(result, params) {\n\t\tconsole.log('cleanSessionContext_hook called for ' + this.name);\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tvar session = params[0];\n\t\t\n\t\t// we clean the child sessions\n\t\tvar clientapicontrollers = this.getClientAPI();\n\t\tclientapicontrollers.cleanChildSessionObjects(session);\n\t\t\n\t\tresult.push({module: this.name, handled: true});\n\t\t\n\t\treturn true;\n\t}\n\n\n\t// web functions\n\tgetWebControllers() {\n\t\treturn this.webclientcontrollers;\n\t}\n\t\n\tgetClientControllers() {\n\t\treturn this.webclientcontrollers;\n\t}\n\n\tgetClientAPI() {\n\t\tvar webclientcontrollers = this.webclientcontrollers;\n\t\tvar clientapicontrollers = webclientcontrollers.getClientControllers();\n\n\t\treturn clientapicontrollers;\n\t}\n\n\tgetBuiltinCurrencies() {\n\t\tif (this.namespace) {\n\t\t\t// we do not load built-in currenciers\n\t\t\treturn {};\n\t\t}\n\t\telse {\n\t\t\treturn require('./currencies.js').default;\n\t\t}\n\t}\n\n\tgetCurrencies() {\n\t\tif (this.currencies)\n\t\t\treturn this.currencies;\n\n\t\tthis.currencies = this.getBuiltinCurrencies();\n\n\t\treturn this.currencies;\n\t}\n\n\tgetCurrency(currencyuuid) {\n\t\tvar currencies = this.getCurrencies();\n\n\t\tvar array = Object.values(currencies);\n\n\t\tfor (var i = 0; i < (array ? array.length : 0); i++) {\n\t\t\tif (array[i].uuid === currencyuuid)\n\t\t\t\treturn array[i];\n\t\t}\n\n\t}\n\n\tgetCurrencyProvider(session, currencyuuid) {\n\t\tvar currency = this.getCurrency(currencyuuid);\n\n\t\tif (currency && currency.provider) {\n\t\t\tvar Provider = require('./providers/' + currency.provider).default;\n\t\t\tvar provider = new Provider(session, currency);\n\n\t\t\treturn provider;\n\t\t}\n\t}\n\n\tgetBuiltinLocalSchemes() {\n\t\treturn this.WebClientConfig.builtin_local_schemes;\n\t}\n\n\tgetBuiltinRemoteSchemes() {\n\t\treturn this.WebClientConfig.builtin_remote_schemes;\n\t}\n\n\tgetBuiltinLocalNetworks() {\n\t\treturn this.WebClientConfig.builtin_local_networks;\n\t}\n\t\n\tgetBuiltinRemoteNetworks() {\n\t\treturn this.WebClientConfig.builtin_remote_networks;\n\t}\n\n\tgetDefaultRemoteNetwork() {\n\t\treturn this.WebClientConfig.default_remote_network_config;\n\t}\n\t\n\t// web local storage\n\tasync _clearWebLocalStorage() {\n\t\t\n\t\tif (this.execution_env != 'dev') {\n\t\t\treturn Promise.reject('can not clear LocalStorage in an execution environment other than dev!');\n\t\t}\n\n\t\ttry {\n\t\t\tlocalStorage.clear();\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn Promise.reject('error clearing LocalStorage');\n\t\t}\n\n\t\treturn true;\n\t}\n\t\n\tgetExecutionEnvironment() {\n\t\tif (this.execution_env)\n\t\t\treturn this.execution_env;\n\t\telse\n\t\t\treturn 'prod';\n\t}\n\n\tgetClientConfig() {\n\t\treturn this.WebClientConfig;\n\t}\n\t\n\techo(string) {\n\t\tconsole.log('ECHO: ' + string);\n\t}\n\n\tasync echotest() {\n\t\tconsole.log('WebClient.echotest called');\n\t\t\n\t\ttry {\n\t\t\t// we could do some testing for validating prod initialization\n\t\t\tif (this.getExecutionEnvironment() != 'dev')\n\t\t\t\treturn; \n\t\t\t\n\t\t\tvar WebClientConfig = this.WebClientConfig;\n\n\t\t\tif (WebClientConfig.echotestdev !== true)\n\t\t\t\treturn;\n\n\t\t\tconsole.log('Executing WebClient.echotest for dev execution environment');\n\n\t\t\tvar clientapicontrollers = this.getClientAPI();\n\t\t\t\n\t\t\tvar topsession = clientapicontrollers.getCurrentSessionObject();\n\n\t\t\tthis.echo('top session uuid is ' + topsession.getSessionUUID());\n\t\t\t\t\n\t\t\tvar localsession = clientapicontrollers.createChildSessionObject(topsession);\n\t\t\tvar remotesession = clientapicontrollers.createChildSessionObject(topsession);\n\n\t\t\t//\n\t\t\t// session check for local/remote\n\t\t\t//\n\t\t\tif (WebClientConfig.authkeymodule_activate === true) {\n\t\t\t\t// we switch to a session authenticated on remote server\n\t\t\t\t\n\t\t\t\tif (WebClientConfig.testusers) {\n\t\t\t\t\tvar username = WebClientConfig.testusers[0].username;\n\t\t\t\t\tvar password = WebClientConfig.testusers[0].password;\n\t\t\t\t\tvar networkuuid = WebClientConfig.testusers[0].networkuuid;\n\n\t\t\t\t\tvar networks =  WebClientConfig.testnetworks;\n\t\t\t\t\tvar network;\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < (networks ? networks.length : 0); i++) {\n\t\t\t\t\t\tif (networkuuid === networks[i].uuid) {\n\t\t\t\t\t\t\tnetwork = networks[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (network) {\n\t\t\t\t\t\tawait clientapicontrollers.setSessionNetworkConfig(remotesession, network);\n\t\t\t\t\t\n\t\t\t\t\t\tawait clientapicontrollers.authenticate(remotesession, username, password);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.echo('switch to authenticated remote session ' + (remotesession ? (remotesession.isAnonymous() ? 'NOT successful' : 'successful') : 'not created'));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//\n\t\t\t// ERC20\n\t\t\t//\n\n\t\t\t// get list of tokens\n\t\t\tconst tokenarray = await clientapicontrollers.getERC20TokenList(remotesession, true);\n\t\t\t\n\t\t\tthis.echo('list of tokens contains ' + (tokenarray && tokenarray.length ? tokenarray.length : 0) + ' element(s)');\n\t\n\t\t\t\n\t\t\t\n\t\t\t//\n\t\t\t// ethnode\n\t\t\t//\n\t\t\t\n\t\t\t// web3 node info\n\t\t\t/*clientapicontrollers.getNodeInfo(remotesession, (err, nodeinfo)  => {\n\t\t\t\tthis.echo('is listening: ' + nodeinfo.islistening);\n\t\t\t});*/\n\t\t\t\n\t\t\t// current block number\n\t\t\tconst blocknumber = await clientapicontrollers.readCurrentBlockNumber(remotesession)\n\t\t\t.catch((err) => {\n\t\t\t\tthis.echo('error: ' + err);\n\t\t\t});\n\t\t\t\n\t\t\tthis.echo('current block number is: ' + blocknumber);\n\n\t\t\t\n\t\t\t// transaction\n\t\t\tif (WebClientConfig.testtransactions && WebClientConfig.testtransactions[0]) {\n\t\t\t\t// using ethchainreader\n\t\t\t\tvar txhash = WebClientConfig.testtransactions[0].hash;\n\t\t\t\t\n\t\t\t\tconst tx = await clientapicontrollers.readTransaction(remotesession, txhash)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.echo('transaction data is: ' + (tx && tx.input_decoded_utf8 ? tx.input_decoded_utf8 : null));\n\t\t\t\t\n\t\t\t\tif (tx) {\n\t\t\t\t\tvar data = await tx.getTransactionReceiptData()\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tvar data2 = (data ? {blockNumber: data.blockNumber} : null);\n\t\t\t\t\tvar datastring = (data2 ? JSON.stringify(data2) : null);\n\t\t\t\t\tthis.echo('transaction receipt data is: ' + datastring);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//using ethnode\n\n\t\t\t\t// ethereum node access\n\t\t\t\tconst tx2 = await clientapicontrollers.getEthereumTransaction(remotesession, txhash)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t});\t\n\t\t\t\t\n\t\t\t\tthis.echo('transaction data is: ' + (tx2 ? tx2.data_decoded_utf8 : null));\n\n\t\t\t\tif (tx2) {\n\t\t\t\t\tvar data = await clientapicontrollers.getEthereumTransactionReceipt(remotesession, txhash)\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tvar data2 = (data ? {blockNumber: data.blockNumber} : null);\n\t\t\t\t\tvar datastring = (data2 ? JSON.stringify(data2) : null);\n\t\t\t\t\tthis.echo('transaction receipt data is: ' + datastring);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t// test accounts\n\t\t\tif (WebClientConfig.testaccounts && WebClientConfig.testaccounts[0] && WebClientConfig.testaccounts[1]) {\n\t\t\t\tvar address = WebClientConfig.testaccounts[0].address;\n\n\t\t\t\t// web 3 account balance\n\t\t\t\tconst balance = await clientapicontrollers.getEthAddressBalance(remotesession, address)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.echo(address + ' balance is: ' + balance);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// tokens\n\t\t\t\tif (WebClientConfig.testtokens) {\n\n\t\t\t\t\t// token position\n\n\t\t\t\t\tfor (var i = 0; i < WebClientConfig.testtokens.length; i++) {\n\t\t\t\t\t\tvar tokenaddress = WebClientConfig.testtokens[i].address;\n\t\t\t\t\t\tvar providerurl = WebClientConfig.testtokens[i].web3providerurl;\n\n\t\t\t\t\t\tconst position = await clientapicontrollers.getAddressERC20Position(remotesession, providerurl, tokenaddress, address)\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log('error: ' + err);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.echo(address + ' position is: ' + position);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t}\n\t\n\n\t\t\t\t// creating transaction with data\n\t\t\t\t/*\n\t\t\t\tvar fromaccount = remotesession.createBlankAccountObject();;\n\t\t\t\tvar fromprivatekey = WebClientConfig.testaccounts[0].private_key;\n\t\t\t\t\n\t\t\t\tvar data = JSON.stringify({text: 'the fox jumps over the lazy dog'});\n\t\t\t\t\n\t\t\t\tfromaccount.setPrivateKey(fromprivatekey);\n\t\t\t\t\n\t\t\t\tvar transaction = clientapicontrollers.createEthereumTransaction(remotesession, fromaccount);\n\t\t\t\t\n\t\t\t\tvar fee = clientapicontrollers.createFee();\n\t\t\t\t\n\t\t\t\ttransaction.setToAddress(address);\n\t\t\t\ttransaction.setValue(0);\n\t\t\t\ttransaction.setGas(fee.gaslimit);\n\t\t\t\ttransaction.setGasPrice(fee.gasPrice);\n\t\t\t\t\n\t\t\t\ttransaction.setData(data);\n\t\t\t\t\n\t\t\t\tconst txwithdata = await clientapicontrollers.sendEthereumTransaction(remotesession, transaction)\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tthis.echo('error: ' + err);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (!txwithdata)\n\t\t\t\t\tthis.echo('error in sendTransaction');\n\t\t\t\telse\n\t\t\t\t\tthis.echo('sendTransaction returned: ' + txwithdata);\n\t\t\t\t */\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tcatch(e) {\n\t\t\tthis.echo('exception in WebClient.echotest: ' + e);\n\t\t\tconsole.log(e.stack);\n\t\t}\t\n\n\n\t\t\n\t}\n\n\n\t\n\tstatic getObject() {\n\t\tif (WebClient.webclient)\n\t\t\treturn WebClient.webclient;\n\t\t\n\t\tWebClient.webclient = new WebClient();\n\n\t\treturn WebClient.webclient;\n\t}\n}\n\n//module.exports = WebClient;\n// Note: webpack does not handle well import on module.exports\nexport default WebClient;\n"],"mappings":"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"}