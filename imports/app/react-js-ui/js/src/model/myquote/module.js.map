{"version":3,"file":"module.js","names":["Module","name","current_version","global","app","controllers","isready","isloading","clientapicontrollers","contract_path_root_uri","console","log","parentscriptloader","callback","self","modulescriptloader","getChildLoader","load_scripts","init","rootscriptloader","getRootScriptLoader","loadModule","registerHooks","mvcmodule","getModuleObject","_getClientAPI","getClientExecutionEnvironment","initProdEnvironment","initDevEnvironment","rooturi","string","t","eventname","params","mvcclientwalletmodule","signalEvent","listerneruuid","registerEventListener","unregisterEventListener","hookname","hookfunction","registerHook","result","invokeHooks","invokeAsyncHooks","XMLHttpRequest","window","simplestore","isOnline","_apicontrollers","clientmodule","remote_networks","getBuiltinRemoteNetworks","remote_network_list","Object","values","length","network","restserver","rest_server_url","resturl","rest_server_api_path","Promise","resolve","reject","_XMLHttpRequest","_getXMLHttpRequestClass","xhttp","open","setRequestHeader","send","onload","e","status","res","JSON","parse","responseText","onerror","statusText","err","json","keys","defaultvalue","readSettings","putSettings","sessionuuid","address","isValidAddress","generatePrivateKey","privatekey","isValidPrivateKey","address1","address2","areAddressesEqual","getSessionObject","session","createChildSessionObject","childsession","MYQUOTE","getSessionUUID","parentsession","web3providerurl","_getChildSessionOnWeb3Url","getUserInfo","emailaddress","isValidEmailAddress","bForceRefresh","getLocalJsonLeaf","saveLocalJson","clientAccess","getClientStorageAccessInstance","readClientSideJson","saveClientSideJson","hasPrivateKey","wallet","card","fromaccount","mvccurrencies","_createMonitoredEthereumTransaction","walletuuid","getWalletFromUUID","getCardsWithAddress","cards","i","getCardPrivateKey","uuid","_privatekey","carduuid","setCardPrivateKey","plaintext","aesEncryptString","cyphertext","aesDecryptString","recipientrsapublickey","rsaEncryptString","senderrsapublickey","rsaDecryptString","signString","signature","getCardFromUUID","getAddress","validateStringSignature","schemeuuid","getSessionVariable","getSchemeInfo","url1","url2","_url1","endsWith","substring","_url2","web3url","options","getLocalSchemeList","localschemes","networkconfig","getNetworkConfig","ethnodeserverconfig","ethnodeserver","_compareUrl","web3_provider_url","bValid","_keys","j","scheme","getSchemeUUID","getSchemeTransactionUnitsThreshold","getDefaultLocalSchemeInfo","feelevel","_getAverageTransactionFee","transactionunits","_getTransactionCredits","getSchemeTransactionInfo","oauth2AuthorizeUrl","credits","units","getTransactionUnits","getSchemeFromUUID","_getUnitsFromCredits","getTransactionCreditsAsync","isWalletLocked","passphrase","unlock","getWalletInfo","authname","password","makeWallet","makeWalletFromSession","commonmodule","createBlankSessionObject","setSessionUUID","getScheme","Error","_getSchemeNetworkConfig","setSessionNetworkConfig","setSessionVariable","_isAnonymousAsync","isanonymous","_attachSessionToWallet","lockWallet","getCardListOnWeb3Url","createWalletCardFromPrivateKey","isLocked","save","bSave","cardinfo","_fillCardInfo","getCardSchemeInfo","getCardInfoFromAddressOnScheme","getCreditBalance","topUpCard","cardfromuuid","cardtouuid","transferTransactionUnits","toaddress","cardaccount","_getSessionAccountObject","_getMonitoredSchemeSession","fromprivatekey","getPrivateKey","transferSchemeTransactionUnits","tx_fee","default_gas_limit_multiplier","default_gas_price_multiplier","avg_transaction_fee_multiplier","transaction_units_min_multiplier","card_scheme","tx_info","gasLimit","gasPrice","avg_transaction_fee","gas_unit","parseInt","credit_cost_unit_ratio","estimated_cost_credits","credits_exec_fee","units_exec_fee","estimated_cost_units","Math","ceil","credits_max_fee","units_max_fee","_getRecommendedFeeLevel","transferred_credits","credits_transferred","units_transferred","transferred_credit_units","estimated_fee","execution_units","execution_credits","total_credits","total_units","max_units","max_credits","required_credits","limit_overdraft","required_units","computeTransactionFee","scheme_units_threshold","units_threshold","scheme_credits_threshold","credits_threshold","transactioncredits","threshold_enforced","threshold_unmet","amount","decimals","_createDecimalAmount","currencyuuid","currencyamount","transferCurrencyAmount","currency","_getPretradeScheme","configname","loadConfig","getCurrencies","getCurrencyFromUUID","getCurrencyTotalSupply","tokenuuid","importCurrencyFromTokenUUID","tokenaddress","importCurrencyFromTokenAddress","_getCurrencyCard","getAllCurrenciesWithAddress","synchronizeCurrency","description","setCurrencyDescription","getCurrenciesFromAddress","currenciesmodule","getCurrencyScheme","currencyscheme","findCardCurrency","getCurrencyCard","setCurrencyCard","createCurrencyCard","getCurrencyCardWithAddress","createReadOnlyCurrencyCard","generateCurrencyCard","getCurrencyPosition","getCurrencyCardCredits","_getMonitoredCardSession","ops","cantxfree","_tx_fee","_feelevel","getRecommendedFeeLevel","canCompleteTransaction","canspend","currencyposition","toInteger","tokenamountmax","payAmount","payAndReport","claim","payingto_overload","isvalid","payingto","owner","getClaimPayingToAddress","getCurrencyAmount","decimalamount","tokenamount_int","txhash","getTokenCardList","getCurrencyCardList","getCurrencySchemeInfo","getPretradeSchemeInfo","getPretradeWeb3Url","getPretradeCard","setPretradeCard","_Buffer","Buffer","require","dataobj","assignto","cardsession","cardsessionuuid","_tohex","data","_getBufferClass","datastr","stringify","buf","from","toString","datahexstring","transaction","from_card_scheme","createSchemeFee","fee","createFee","setToAddress","setValue","setGas","gaslimit","setGasPrice","setData","sendEthereumTransaction","_saveTransactionObject","dataobject","tx","input_decoded_utf8","blocknumber","block","blocktime","timestamp","hash","assign","pretradescheme","bPersist","fetchsession","fetchsessionuuid","readTransaction","_fillTransactionDataObject","getWalletUUID","persistdata","pretradeschemeuuid","isRemote","_fetchTransaction","pretradescheme_info","fetchTransaction","mytokensmodule","mytokensaccessinstance","getEthereumNodeAccessInstance","ethereum_node_access_instance","getMyTokensServerAccessInstance","restconnection","createRestConnection","pretrade_explorer_url","setRestConnection","account_transactions","transactions","ethereumnodeaccessmodule","ethereumnodeaccessinstance","web3ToUTF8","input","blockNumber","timeStamp","_getAddressPretradeTransactions","txlist","bounties","claims","quotes","orders","invoices","paymentnotices","type","push","_readClientSideJson","bounty_list","vendor_address","bountylist","missing_credentials","fetchCurrencyTransaction","orgbounty","bounty","ver","one_submission","submission_options","private_submission","_bounty","bounty_card_address","registerTransaction","readBounties","bInList","title","localjson","savetime","Date","now","_saveClientSideJson","assign_address","bountyhash","fetchBounty","_getBountyAssignAddress","claimmap","guid","saveClaim","latest","ordId","first","claimlist","arr","entry","update_blocktime","update_blocknumber","orgclaim","fetchClaims","clm","owner_map","payingto_map","claimuuid","claim_list","_readClaims","unhandled_claims","fetchClaim","claim_index","answer","bountyobject","_getCurrencyScheme","ethnodemodule","web3_setArtifactRootUri","mvcerc721module","createERC721TokenObject","erc721token","minter","_getMonitoredERC721TokenSession","create","symbol","basetokenuri","_createERC721TokenObject","ethereumtransaction","getEthereumTransactionObject","deploy","contractaddress","erc721tokenaddress","card_uuid","card_address","_putAddressLockerContent","contentstring","minter_cost_units","deeds_v1","locker_put_cost_units","putLockerContent","getLockerContent","minteraddress","getChainName","getChainSymbol","_fetchDeedMinterFromAddress","owneraddress","_getAddressLockerContent","deed_list","_getERC721TokenObject","deeds","getTotalSupply","totalsupply","_fetchDeedInfo","deed","_getMinterCard","mint","tokenid","metadata","articles","clauses","minthash","readDeeds","time","getChainTokenURI","tokenuri","ownerOf","getApproved","approved","fetchRecords","stringrecords","clause","index","subtype","saveDeed","lasttokenid","fetchDeed","getDeedOwningCard","owningcardinfo","_getDeedOwningCard","toaccount","createBlankAccountObject","setAddress","transferFrom","txhhash","registerRecord","quote_list","quotelist","quote","readQuotes","order_list","quotehash","orderlist","blockshift","scan","new_orders","pretradeweb3rurl","readCurrentBlockNumber","current_blocknumber","start_block_number","last_block_number","ordernum","web3_getBlock","saveOrder","order","readOrders","hadfunds","quoteobject","invoice_list","orderhash","buyer_address","invoicelist","invoice","readInvoices","orderobject","paymentnotice_list","invoicehash","paymentnoticelist","paymentnotice","readPaymentNotices","invoiceobject","saveBounty","saveQuote","saveInvoice","savePaymentNotice","creditunits","getPriceForCreditUnits","buyCreditUnits","getDecimalAmount","formatCurrencyAmount","unixdate","format","formatDate","str","maxlength","fitString","GlobalClass","Global","getGlobalObject","registerModuleObject","registerModuleDepency"],"sources":["../../../../../../../../../../imports/app/react-js-ui/js/src/model/myquote/module.js"],"sourcesContent":["'use strict';\n\n\nvar Module = class {\n\t\n\tconstructor() {\n\t\tthis.name = 'mvc-myquote';\n\t\tthis.current_version = \"1.01.1.2020.12.05\";\n\t\t\n\t\tthis.global = null; // put by global on registration\n\t\tthis.app = null;\n\t\t\n\t\tthis.controllers = null;\n\n\t\tthis.isready = false;\n\t\tthis.isloading = false;\n\n\t\tthis.clientapicontrollers = null; // API gateway\n\n\t\t// operation\n\t\tthis.contract_path_root_uri = null;\n\t}\n\t\n\tinit() {\n\t\tconsole.log('module init called for ' + this.name);\n\n\t\tvar global = this.global;\n\t\t\n\t\tthis.isready = true;\n\t}\n\t\n\t// compulsory  module functions\n\tloadModule(parentscriptloader, callback) {\n\t\tconsole.log('loadModule called for module ' + this.name);\n\t\t\n\t\tif (this.isloading)\n\t\t\treturn;\n\t\t\t\n\t\tthis.isloading = true;\n\n\t\tvar self = this;\n\n\t\tvar modulescriptloader = parentscriptloader.getChildLoader('mvcmyquoteloader');\n\n\t\tmodulescriptloader.load_scripts(function() { self.init(); if (callback) callback(null, self); });\n\n\t\treturn modulescriptloader;\t\n\t}\n\t\n\tisReady() {\n\t\treturn this.isready;\n\t}\n\n\thasLoadStarted() {\n\t\treturn this.isloading;\n\t}\n\n\t// optional module functions\n\tregisterHooks() {\n\t\tconsole.log('module registerHooks called for ' + this.name);\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\t// initialization\n\t}\n\t\n\tpostRegisterModule() {\n\t\tconsole.log('postRegisterModule called for ' + this.name);\n\t\tif (!this.isloading) {\n\t\t\tvar global = this.global;\n\t\t\tvar self = this;\n\t\t\tvar rootscriptloader = global.getRootScriptLoader();\n\t\t\t\n\t\t\tthis.loadModule(rootscriptloader, function() {\n\t\t\t\tif (self.registerHooks)\n\t\t\t\tself.registerHooks();\n\t\t\t});\n\t\t}\n\t}\n\t\n\t_getClientAPI() {\n\t\tif (this.clientapicontrollers)\n\t\t\treturn this.clientapicontrollers;\n\t\t\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\t\n\t\tthis.clientapicontrollers = mvcmodule._getClientAPI();\n\n\t\treturn  this.clientapicontrollers;\n\t}\n\n\t//\n\t// hooks\n\t//\n\t\n\n\t//\n\t// API\n\t//\n\n\t// Client config\n\tgetClientExecutionEnvironment() {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\treturn mvcmodule.getClientExecutionEnvironment();\n\t}\n\t\n\tasync initProdEnvironment() {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\treturn mvcmodule.initProdEnvironment();\n\t}\n\t\n\tasync initDevEnvironment() {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\treturn mvcmodule.initDevEnvironment();\n\t}\n\t\n\tasync setContractPathRootUri(rooturi) {\n\t\tthis.contract_path_root_uri = rooturi;\n\t}\n\n\tt(string) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.t(string);\n\t}\n\n\t// events\n\tsignalEvent(eventname, params) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.signalEvent(eventname, params);\n\t}\n\t\n\tregisterEventListener(eventname, listerneruuid, callback) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.registerEventListener(eventname, listerneruuid, callback);\n\t}\n\t\n\tunregisterEventListener(eventname, listerneruuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.unregisterEventListener(eventname, listerneruuid);\n\t}\n\n\n\t// hooks\n\tasync registerHook(hookname, hookfunction) {\n\t\tvar global = this.global;\n\n\t\t// note: only one hook at a time can be registered for mvc-myquote\n\t\t// we could maintain an array to call multiple client functions if necessary\n\t\treturn global.registerHook(hookname, this.name, hookfunction);\n\t}\n\t\t\n\tasync invokeHooks(hookname, result, params) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\t\n\t\treturn mvcclientwalletmodule.invokeHooks(hookname, result, params);\n\t}\n\t\t\n\tasync invokeAsyncHooks(hookname, result, params) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\t\n\t\treturn mvcclientwalletmodule.invokeAsyncHooks(hookname, result, params);\n\t}\n\t\t\n\t\n\t\n\t//\n\t// Network\n\t//\n\t_getXMLHttpRequestClass() {\n\t\tif (typeof XMLHttpRequest !== 'undefined' && XMLHttpRequest ) {\n\t\t\treturn XMLHttpRequest;\n\t\t}\n\t\telse if (typeof window !== 'undefined' && window ) {\n\t\t\t// normally (browser or react native), XMLHttpRequest should be directly accessible\n\t\t\tif (typeof window.XMLHttpRequest !== 'undefined')\n\t\t\t\treturn window.XMLHttpRequest;\n\t\t\telse if ( (typeof window.simplestore !== 'undefined')\n\t\t\t\t\t&& (typeof window.simplestore.XMLHttpRequest !== 'undefined'))\n\t\t\t\t\treturn window.simplestore.XMLHttpRequest;\n\t\t}\n\t\telse if ((typeof global !== 'undefined') && (typeof global.simplestore !== 'undefined')\n\t\t\t\t&& (typeof global.simplestore.XMLHttpRequest !== 'undefined')) {\n\t\t\treturn global.simplestore.XMLHttpRequest;\n\t\t}\n\t\telse {\n\t\t\tthrow 'can not find XMLHttpRequest class!!!';\n\t\t}\n\t}\n\n\tasync checkOnline() {\n\t\tvar isOnline = true; // assume unless proven wrong by a rest call\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar clientmodule = global.getModuleObject('webclient');\n\t\t\n\t\tvar remote_networks = clientmodule.getBuiltinRemoteNetworks();\n\t\tvar remote_network_list = Object.values(remote_networks);\n\n\t\tif (remote_network_list && remote_network_list.length > 0) {\n\t\t\tvar network = remote_network_list[0];\n\n\t\t\tif (network.restserver.rest_server_url) {\n\t\t\t\t// make a rest call to see if we get a proper answer\n\t\t\t\tvar resturl = network.restserver.rest_server_url + (network.restserver.rest_server_api_path ? network.restserver.rest_server_api_path : '');\n\t\t\t\tvar json = await new Promise((resolve, reject) => {\n\t\t\t\t\tvar _XMLHttpRequest = this._getXMLHttpRequestClass()\n\t\t\t\t\tvar xhttp = new _XMLHttpRequest();\n\t\t\t\t\t\n\t\t\t\t\txhttp.open('GET', resturl, true);\n\t\t\t\t\t\n\t\t\t\t\txhttp.setRequestHeader(\"Content-type\", \"application/json\");\n\t\t\t\t\t\n\t\t\t\t\txhttp.send();\n\t\t\t\t\t\n\t\t\t\t\txhttp.onload = function(e) {\n\t\t\t\t\t\tif (xhttp.status == 200) {\n\t\t\t\t\t\t\tvar res = {};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tres = JSON.parse(xhttp.responseText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treject('wrong result');\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\txhttp.onerror = function (e) {\n\t\t\t\t\t\treject('rest error is ' + xhttp.statusText);\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tisOnline = false;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\treturn isOnline;\n\t}\n\n\t//\n\t// Storage\n\t//\n\n\t// Settings\n\tasync readSettings(keys, defaultvalue) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.readSettings(keys, defaultvalue);\n\t}\n\t\n\tasync putSettings(keys, json) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.putSettings(keys, json);\n\t}\n\n\t//\n\t// Crypto functions\n\t//\n\n\tasync isValidAddress(sessionuuid, address) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.isValidAddress(sessionuuid, address);\n\t}\n\t\n\tasync generatePrivateKey(sessionuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.generatePrivateKey(sessionuuid);\n\t}\n\t\n\tasync isValidPrivateKey(sessionuuid, privatekey) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.isValidPrivateKey(sessionuuid, privatekey);\n\t}\n\t\n\tasync areAddressesEqual(sessionuuid, address1, address2) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.areAddressesEqual(sessionuuid, address1, address2);\n\t}\n\t\n\n\n\t//\n\t// Session functions\n\t//\n\n\tasync createChildSession(sessionuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar childsession = await _apicontrollers.createChildSessionObject(session);\n\n\t\tif (!childsession)\n\t\t\treturn Promise.reject('could not create child session');\n\t\t\t\n\t\tchildsession.MYQUOTE = this.current_version;\n\t\t\t\n\t\treturn childsession.getSessionUUID();\n\t}\n\n\n\t// TODO: should use mvcmodule._getChildSessionOnWeb3Url for version >= 0.20.7\n\t// keep\n\tasync _getChildSessionOnWeb3Url(parentsession, web3providerurl) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule._getChildSessionOnWeb3Url(parentsession, web3providerurl);\n\t}\n\n\t// user\n\tasync getUserInfo(sessionuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getUserInfo(sessionuuid);\n\t}\n\t\n\tasync isValidEmailAddress(sessionuuid, emailaddress) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.isValidEmailAddress(sessionuuid, emailaddress);\n\t}\n\n\n\t//\n\t// Storage\n\t//\n\n\tasync getLocalJsonLeaf(sessionuuid, keys, bForceRefresh) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getLocalJsonLeaf(sessionuuid, keys, bForceRefresh);\n\t}\n\t\n\tasync saveLocalJson(sessionuuid, keys, json) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.saveLocalJson(sessionuuid, keys, json);\n\t}\n\n\t// TODO: should use _apicontrollers.readClientSideJson for version >= 0.20.8\n\tasync _readClientSideJson(session, keys) {\n\t\tvar clientAccess = session.getClientStorageAccessInstance();\n\t\t\n\t\tconst result = new Promise((resolve, reject) => {\n\t\t\tclientAccess.readClientSideJson(keys, (err, res) => {\n\t\t\t\tif (err) reject(err); else resolve(res);\n\t\t\t}); // does not return a promise\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('error in _readClientSideJson: ' + err);\n\t\t});\n\t\t\n\t\treturn result;\n\t}\n\n\t// TODO: should use _apicontrollers.saveClientSideJson for version >= 0.20.8\n\tasync _saveClientSideJson(session, keys, json) {\n\t\tvar clientAccess = session.getClientStorageAccessInstance();\n\t\t\n\t\tconst result = new Promise((resolve, reject) => { \n\t\t\tclientAccess.saveClientSideJson(keys, json, (err, res) => {\n\t\t\t\tif (err) reject(err); else resolve(res);\n\t\t\t}); // does not return a promise\n\t\t});\n\t\t\n\t\treturn result;\n\t}\n\n\n\n\tasync hasPrivateKey(sessionuuid, address) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.hasPrivateKey(sessionuuid, address);\n\t}\n\n\t//\n\t// Ethnode\n\t//\n\n\tasync _createMonitoredEthereumTransaction(wallet, card, session, fromaccount) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._createMonitoredEthereumTransaction(wallet, card, session, fromaccount);\n\t}\n\n\t//\n\t// Card encryption functions\n\t//\n\n\t// private key\n\n\t// TODO: should use mvcmodule.getWalletDecryptingCard for version >= 0.20.17\n\tasync getWalletDecryptingCard(sessionuuid, walletuuid, address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\n\t\tif (!wallet)\n\t\t\treturn;\n\n\t\tvar cards = await mvcmodule.getCardsWithAddress(sessionuuid, walletuuid, address).catch(err => {});\n\n\t\tif (!cards)\n\t\t\treturn;\n\n\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\tvar _privatekey = await mvcmodule.getCardPrivateKey(sessionuuid, walletuuid, cards[i].uuid).catch(err => {});\n\n\t\t\tif (_privatekey)\n\t\t\t\treturn cards[i];\n\t\t}\n\t}\n\n\tasync getCardPrivateKey(sessionuuid, walletuuid, carduuid) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getCardPrivateKey(sessionuuid, walletuuid, carduuid);\n\t}\n\n\tasync setCardPrivateKey(sessionuuid, walletuuid, carduuid, privatekey) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.setCardPrivateKey(sessionuuid, walletuuid, carduuid, privatekey);\n\t}\n\n\t// symetric encryption\n\n\tasync aesEncryptString(sessionuuid, walletuuid, carduuid, plaintext) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.aesEncryptString(sessionuuid, walletuuid, carduuid, plaintext);\n\t}\n\n\tasync aesDecryptString(sessionuuid, walletuuid, carduuid, cyphertext) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.aesDecryptString(sessionuuid, walletuuid, carduuid, cyphertext);\n\t}\n\n\t// asymetric encryption\n\tasync rsaEncryptString(sessionuuid, walletuuid, carduuid, recipientrsapublickey, plaintext) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.rsaEncryptString(sessionuuid, walletuuid, carduuid, recipientrsapublickey, plaintext);\n\t}\n\t\n\tasync rsaDecryptString(sessionuuid, walletuuid, carduuid, senderrsapublickey, cyphertext) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.rsaDecryptString(sessionuuid, walletuuid, carduuid, senderrsapublickey, cyphertext);\n\t}\n\n\n\tasync signString(sessionuuid, walletuuid, carduuid, plaintext) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\treturn mvcclientwalletmodule.signString(sessionuuid, walletuuid, carduuid, plaintext);\n\t}\n\n\t// TODO: should use mvcclientwalletmodule.validateStringCardSignature for version >= 0.30.11\n\tasync validateStringCardSignature(sessionuuid, walletuuid, carduuid, plaintext, signature) {\n\t\tif (!plaintext)\n\t\t\treturn Promise.reject('plain text is undefined');\n\n\t\tif (!signature)\n\t\t\treturn Promise.reject('signature is undefined');\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tvar address = card.getAddress();\n\n\t\treturn _apicontrollers.validateStringSignature(session, address, plaintext, signature);\n\t}\n\n\n\t//\n\t// Scheme functions\n\t//\n\tasync getSessionScheme(sessionuuid) {\n\t\t// note: clientsmodule does not store info on the schemeuuid\n\t\t// we do it at our level (and won't have it if session created by someone else)\n\n\t\tif (!sessionuuid)\n\t\treturn Promise.reject('session uuid is undefined');\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar schemeuuid = session.getSessionVariable('schemeuuid');\n\n\t\tif (!schemeuuid)\n\t\t\treturn Promise.reject('no scheme uuid save in session variables');\n\n\t\treturn this.getSchemeInfo(sessionuuid, schemeuuid);\n\t}\n\n\tasync getSchemeInfo(sessionuuid, schemeuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getSchemeInfo(sessionuuid, schemeuuid);\n\t}\n\n\t// TODO: replace with mvcclientwalletmodule.findLocalSchemeInfoFromWeb3Url for version >= 0.30.8\n\t_compareUrl(url1, url2) {\n\t\tvar _url1 = (url1 && url1.endsWith('/') ? url1.substring(0, url1.length - 1 ) : url1);\n\t\tvar _url2 = (url2 && url2.endsWith('/') ? url2.substring(0, url2.length - 1 ) : url2);\n\n\t\tif (_url1 && _url2 && (_url1 == _url2))\n\t\treturn true;\n\t\telse\n\t\treturn false;\n\t}\n\n\tasync findLocalSchemeInfoFromWeb3Url(sessionuuid, web3url, options) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar scheme;\n\n\n\t\t// get list of local schemes\n\t\tvar localschemes = await _apicontrollers.getLocalSchemeList(session, true);\n\n\t\tfor (var i = 0; i < localschemes.length; i++) {\n\t\t\tvar networkconfig = localschemes[i].getNetworkConfig();\n\t\t\tvar ethnodeserverconfig = networkconfig.ethnodeserver;\n\n\t\t\tif (this._compareUrl(ethnodeserverconfig.web3_provider_url, web3url)) {\n\t\t\t\t// validate scheme matches options\n\t\t\t\tvar bValid = true;\n\t\t\t\tvar _keys = (options ? Object.keys(options) : []);\n\n\t\t\t\tfor (var j = 0; j < _keys.length; j++) {\n\t\t\t\t\tif (options[_keys[j]] && (options[_keys[j]] != ethnodeserverconfig[_keys[j]]) ) {\n\t\t\t\t\t\tbValid = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (bValid) {\n\t\t\t\t\tscheme = localschemes[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('could not find scheme for ' + web3url);\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar schemeuuid = scheme.getSchemeUUID();\n\n\t\treturn mvcclientwalletmodule. getSchemeInfo(sessionuuid, schemeuuid);\n\t}\n\t\n\tasync getSchemeTransactionUnitsThreshold(sessionuuid, schemeuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getSchemeTransactionUnitsThreshold(sessionuuid, schemeuuid);\n\t}\n\n\tasync getDefaultLocalSchemeInfo(sessionuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getDefaultLocalSchemeInfo(sessionuuid);\n\t}\n\n\t// TODO: should use mvcmodule._getAverageTransactionFee for version >= 0.20.7\n\t// keep until transition to mvc-currencies\n\t_getAverageTransactionFee(scheme, feelevel) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule._getAverageTransactionFee(scheme, feelevel);\n\t}\n\n\t// TODO: should use mvcmodule._getTransactionCredits for version >= 0.20.7\n\t// remote\n\t_getTransactionCredits(scheme, transactionunits) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule._getTransactionCredits(scheme, transactionunits);\n\t}\n\n\tasync getSchemeTransactionInfo(sessionuuid, schemeuuid, feelevel = null) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getSchemeTransactionInfo(sessionuuid, schemeuuid, feelevel);\n\t}\n\n\tasync oauth2AuthorizeUrl(sessionuuid, schemeuuid, params) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.oauth2AuthorizeUrl(sessionuuid, schemeuuid, params);\n\t}\n\n\t// TODO: should use mvclientwalletmodule.getUnitsFromCredits for version >= 0.20.17\n\tasync _getUnitsFromCredits(session, scheme, credits) {\n\t\tvar units = scheme.getTransactionUnits(credits);\n\t\t\n\t\treturn units;\n\t}\n\n\t// TODO: should use mvclientwalletmodule.getUnitsFromCredits for version >= 0.20.17\n\tasync getUnitsFromCredits(sessionuuid, schemeuuid, credits) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar\tscheme = await _apicontrollers.getSchemeFromUUID(session, schemeuuid)\n\t\t.catch(err => {});\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('could not find scheme ' + schemeuuid);\n\n\t\treturn this._getUnitsFromCredits(session, scheme, credits);\n\t}\n\n\t// TODO: should use mvclientwalletmodule.getCreditsFromUnits for version >= 0.20.17\n\tasync getCreditsFromUnits(sessionuuid, schemeuuid, units) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar\tscheme = await _apicontrollers.getSchemeFromUUID(session, schemeuuid)\n\t\t.catch(err => {});\n\n\t\tif (!scheme)\n\t\t\treturn Promise.reject('could not find scheme ' + schemeuuid);\n\n\t\treturn scheme.getTransactionCreditsAsync(units);\n\t}\n\n\t//\n\t// Wallet functions\n\t//\n\n\tasync isWalletLocked(sessionuuid, walletuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.isWalletLocked(sessionuuid, walletuuid);\n\t}\n\t\n\t// TODO: should use mvclientwalletmodule.unlockWallet for version >= 0.30.11\n\tasync unlockWallet(sessionuuid, walletuuid, passphrase) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not create session ' + sessionuuid);\n\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\treturn wallet.unlock(passphrase);\n\t}\n\t\n\n\n\tasync getWalletInfo(sessionuuid, walletuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getWalletInfo(sessionuuid, walletuuid);\n\t}\n\t\n\tasync makeWallet(sessionuuid, authname, schemeuuid, password) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.makeWallet(sessionuuid, authname, schemeuuid, password);\n\t}\n\n\tasync makeWalletFromSession(sessionuuid, schemeuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.makeWalletFromSession(sessionuuid, schemeuuid);\n\t}\n\n\t// TODO: should use mvclientwalletmodule.attachSessionToWallet for version >= 0.20.17\n\tasync attachSessionToWallet(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar commonmodule = global.getModuleObject('common');\n\n\t\t// look if session already exists\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\n\t\tif (!session) {\n\t\t\tsession = await commonmodule.createBlankSessionObject();\n\t\t\tsession.setSessionUUID(sessionuuid);\n\t\t}\n\n\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not create session ' + sessionuuid);\n\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar scheme = await wallet.getScheme();\n\n\t\tif (!scheme)\n\t\t\tthrow new Error('could not find scheme for wallet ' + walletuuid);\n\n\t\t// set network config to the session\n\t\t//var network = scheme.getNetworkConfig();\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar network = mvcclientwalletmodule._getSchemeNetworkConfig(scheme);\n\t\t\t\t\n\t\tawait _apicontrollers.setSessionNetworkConfig(session, network);\n\n\t\t// save schemeuuid in session var (because missing 2021.11.13)\n\t\tsession.setSessionVariable('schemeuuid', scheme.getSchemeUUID());\n\n\t\tlet isanonymous = await mvcclientwalletmodule._isAnonymousAsync(session);\n\t\tif (isanonymous)\n\t\t\treturn Promise.reject('session needs to be authenticated');\n\n\n\t\tawait mvcclientwalletmodule._attachSessionToWallet(session, wallet);\n\t}\n\n\tasync lockWallet(sessionuuid, walletuuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\treturn mvcclientwalletmodule.lockWallet(sessionuuid, walletuuid);\n\t}\n\n\t//\n\t// Card functions\n\t//\n\n\tasync getCardListOnWeb3Url(sessionuuid, walletuuid, web3url) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getCardListOnWeb3Url(sessionuuid, walletuuid, web3url);\n\t}\n\n\tasync createCard(sessionuuid, walletuuid, web3providerurl, privatekey) {\n\t\t// Note: this is creating local cards\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!web3providerurl)\n\t\t\treturn Promise.reject('web3 url is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\n\t\tconst card = await _apicontrollers.createWalletCardFromPrivateKey(session, wallet, web3providerurl, privatekey);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not create card');\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\tconst bSave = await card.save();\n\n\t\tif (!bSave)\n\t\t\treturn Promise.reject('could not save card');\n\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\tvar cardinfo = {};\n\n\t\tmvcmodule._fillCardInfo(cardinfo, card);\n\t\t\n\t\treturn cardinfo;\n\t}\n\n\tasync getWalletCard(sessionuuid, walletuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\t\n\n\t\tif (card.isLocked()) {\n\t\t\tawait card.unlock();\n\t\t}\n\n\t\tconst bSave = await card.save();\n\n\t\tif (!bSave)\n\t\t\treturn Promise.reject('could not save card');\n\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar cardinfo = {};\n\n\t\tmvcclientwalletmodule._fillCardInfo(cardinfo, card);\n\t\t\t\n\t\treturn cardinfo;\t\n\t}\n\n\n\tasync getCardSchemeInfo(sessionuuid, walletuuid, carduuid) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getCardSchemeInfo(sessionuuid, walletuuid, carduuid);\n\t}\n\n\tasync getCardInfoFromAddressOnScheme(sessionuuid, walletuuid, schemeuuid, address) { \n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.getCardInfoFromAddressOnScheme(sessionuuid, walletuuid, schemeuuid, address);\n\t}\t\n\t\n\n\tasync getCreditBalance(sessionuuid, walletuuid, carduuid) {\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\n\t\treturn mvcmodule.getCreditBalance(sessionuuid, walletuuid, carduuid);\n\t}\n\n\tasync topUpCard(sessionuuid, walletuuid, carduuid) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.topUpCard(sessionuuid, walletuuid, carduuid);\n\t}\n\n\tasync transferTransactionUnits(sessionuuid, walletuuid, cardfromuuid, cardtouuid, units, feelevel = null) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.transferTransactionUnits(sessionuuid, walletuuid, cardfromuuid, cardtouuid, units, feelevel);\n\t}\n\n\tasync sendTransactionUnits(sessionuuid, walletuuid, cardfromuuid, toaddress, units, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\n\t\tif (!cardfromuuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar card = await wallet.getCardFromUUID(cardfromuuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + cardfromuuid);\n\n\t\tvar cardaccount = card._getSessionAccountObject();\n\n\t\tif (!cardaccount)\n\t\t\treturn Promise.reject('card has no private key ' + cardfromuuid);\n\n\t\t// call mvc-client-wallet\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\n\t\t// TODO: remove fix when corrected in  mvc-client-wallet for version >= 0.30.9\n\t\tmvcclientwalletmodule._getMonitoredSchemeSession = this._getMonitoredSchemeSession;\n\t\t// END\n\n\t\tvar schemeuuid = card.getSchemeUUID();\n\t\tvar fromprivatekey = cardaccount.getPrivateKey();\n\t\n\t\treturn mvcclientwalletmodule.transferSchemeTransactionUnits(sessionuuid, walletuuid, schemeuuid, fromprivatekey, toaddress, units, feelevel);\n\t}\n\n\n\t// TODO: should use mvcclientwalletmodule._getRecommendedFeeLevel for version >= 0.30.8\n\tasync _getRecommendedFeeLevel(session, wallet, card, tx_fee) {\n\t\t// standard fee level\n\t\tvar\tfeelevel = {\n\t\t\tdefault_gas_limit_multiplier: 1,\n\t\t\tdefault_gas_price_multiplier: 1,\n\t\t\tavg_transaction_fee_multiplier: 1, \n\t\t\ttransaction_units_min_multiplier: 1\n\t\t};\n\n\t\t// get scheme transaction info\n\t\tvar sessionuuid = session.getSessionUUID();\n\t\tvar card_scheme = card.getScheme();\n\t\tvar tx_info = await this.getSchemeTransactionInfo(sessionuuid, card_scheme.uuid, feelevel);\n\n\t\tvar gasLimit = tx_info.gasLimit;\n\t\tvar gasPrice = tx_info.gasPrice;\n\t\tvar avg_transaction_fee = tx_info.avg_transaction_fee;\n\n\t\tvar gas_unit = (card_scheme && card_scheme.network && card_scheme.network.ethnodeserver && card_scheme.network.ethnodeserver.gas_unit ? parseInt(card_scheme.network.ethnodeserver.gas_unit) : 21000);\n\t\tvar credit_cost_unit_ratio = (avg_transaction_fee * 1000000000000000000) / (gas_unit * gasPrice);\n\n\t\t// execution cost\n\t\tvar units_exec_fee; \n\t\tvar credits_exec_fee;\n\t\t\n\t\tif (tx_fee.estimated_cost_credits) {\n\t\t\tcredits_exec_fee = tx_fee.estimated_cost_credits;\n\t\t\tunits_exec_fee = await this._getUnitsFromCredits(session, card_scheme, credits_exec_fee);\n\t\t}\n\t\telse {\n\t\t\tunits_exec_fee = (tx_fee.estimated_cost_units ? Math.ceil(tx_fee.estimated_cost_units / credit_cost_unit_ratio) : 1);\n\t\t\tcredits_exec_fee = await card_scheme.getTransactionCreditsAsync(units_exec_fee);\n\t\t}\n\n\t\t// max price\n\t\tvar credits_max_fee = gasLimit * gasPrice;\n\t\tvar units_max_fee =  await this._getUnitsFromCredits(session, card_scheme, credits_max_fee);\n\n\t\tif (units_exec_fee > units_max_fee)\n\t\t\tfeelevel.default_gas_limit_multiplier = Math.ceil(units_exec_fee / units_max_fee);\n\n\t\treturn feelevel;\n\t}\n\n\t// TODO: should use mvcclientwalletmodule.getRecommendedFeeLevel for version >= 0.30.8\n\tasync getRecommendedFeeLevel(sessionuuid, walletuuid, carduuid, tx_fee) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\treturn this._getRecommendedFeeLevel(session, wallet, card, tx_fee);\n\t}\n\n\t// TODO: should use mvcclientwalletmodule.computeTransactionFee for version >= 0.30.8\n\tasync computeTransactionFee(sessionuuid, walletuuid, carduuid, tx_fee, feelevel = null) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t// get scheme transaction info\n\t\tvar card_scheme = card.getScheme();\n\t\tvar tx_info = await this.getSchemeTransactionInfo(sessionuuid, card_scheme.uuid, feelevel);\n\n\t\tvar gasLimit = tx_info.gasLimit;\n\t\tvar gasPrice = tx_info.gasPrice;\n\t\tvar avg_transaction_fee = tx_info.avg_transaction_fee;\n\n\t\tvar gas_unit = (card_scheme && card_scheme.network && card_scheme.network.ethnodeserver && card_scheme.network.ethnodeserver.gas_unit ? parseInt(card_scheme.network.ethnodeserver.gas_unit) : 21000);\n\t\tvar credit_cost_unit_ratio = (avg_transaction_fee * gasPrice) / gas_unit;\n\n\t\t// execution cost\n\t\tvar units_exec_fee; \n\t\tvar credits_exec_fee;\n\t\t\n\t\tif (tx_fee.estimated_cost_credits) {\n\t\t\tcredits_exec_fee = tx_fee.estimated_cost_credits;\n\t\t\tunits_exec_fee = await this._getUnitsFromCredits(session, card_scheme, credits_exec_fee);\n\t\t}\n\t\telse {\n\t\t\tunits_exec_fee = (tx_fee.estimated_cost_units ? Math.ceil(tx_fee.estimated_cost_units / credit_cost_unit_ratio) : 1);\n\t\t\tcredits_exec_fee = await card_scheme.getTransactionCreditsAsync(units_exec_fee);\n\t\t}\n\n\t\t// transferred value\n\t\tvar units_transferred;\n\t\tvar credits_transferred;\n\n\t\tif (tx_fee.transferred_credits) {\n\t\t\tcredits_transferred = tx_fee.transferred_credits;\n\t\t\tunits_transferred = await this._getUnitsFromCredits(session, card_scheme, credits_exec_fee);\n\t\t}\n\t\telse {\n\t\t\tunits_transferred = tx_fee.transferred_credit_units;\n\t\t\tcredits_transferred = await card_scheme.getTransactionCreditsAsync(units_transferred);\n\t\t}\n\n\t\t// max price\n\t\tvar credits_max_fee = gasLimit * gasPrice;\n\t\tvar units_max_fee =  await this._getUnitsFromCredits(session, card_scheme, credits_max_fee);\n\n\t\t// fill tx_fee\n\t\ttx_fee.tx_info = tx_info;\n\n\t\ttx_fee.estimated_fee = {};\n\n\t\t// estimated execution fee\n\t\ttx_fee.estimated_fee.execution_units = units_exec_fee; \n\t\ttx_fee.estimated_fee.execution_credits = credits_exec_fee; \n\n\t\t// estimated transaction total\n\t\ttx_fee.estimated_fee.total_credits = credits_exec_fee + credits_transferred; \n\t\ttx_fee.estimated_fee.total_units = await this._getUnitsFromCredits(session, card_scheme, tx_fee.estimated_fee.total_credits); \n\n\t\t// max fee\n\t\ttx_fee.estimated_fee.max_units = units_max_fee; \n\t\ttx_fee.estimated_fee.max_credits = credits_max_fee; \n\n\t\t// required balance\n\t\tif (tx_fee.estimated_fee.max_credits > tx_fee.estimated_fee.total_credits) {\n\t\t\ttx_fee.required_credits = tx_fee.estimated_fee.max_credits;\n\t\t}\n\t\telse {\n\t\t\tif (tx_fee.estimated_fee.max_credits >= tx_fee.estimated_fee.execution_credits)\n\t\t\t\ttx_fee.required_credits = tx_fee.estimated_fee.max_credits + credits_transferred; // because of \"Insufficient funds for gas * price + value\" web3 error\n\t\t\telse {\n\t\t\t\ttx_fee.required_credits = tx_fee.estimated_fee.total_credits; // won't go through because will reach gas limit\n\t\t\t\ttx_fee.limit_overdraft = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\ttx_fee.required_units =  await this._getUnitsFromCredits(session, card_scheme, tx_fee.required_credits); \n\n\t\treturn tx_fee;\n\t}\n\n\n\t// TODO: should use mvcclientwalletmodule.canCompleteTransaction for version >= 0.30.8\n\tasync canCompleteTransaction(sessionuuid, walletuuid, carduuid, tx_fee, feelevel = null) {\n\t\t// get card balance\n\t\tconst credits = await this.getCreditBalance(sessionuuid, walletuuid, carduuid);\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t// can the card send transactions\n\t\tvar cardaccount = card._getSessionAccountObject();\n\n\t\tif (!cardaccount)\n\t\t\treturn false;\n\n\t\tvar privatekey = cardaccount.getPrivateKey();\n\t\n\t\tif (!privatekey)\n\t\t\treturn false;\n\n\n\t\t// get transaction fee\n\t\tvar tx_fee = await this.computeTransactionFee(sessionuuid, walletuuid, carduuid, tx_fee, feelevel);\n\n\t\t// check estimated cost is not above max credits (corresponds to tx_fee.limit_overdraft == true)\n\t\tif (tx_fee.estimated_fee.execution_credits > tx_fee.estimated_fee.max_credits) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check balance in units is above requirement\n\t\tif (credits.transactionunits < tx_fee.required_units) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check\n\t\tvar tx_info = tx_fee.tx_info;\n\t\tvar scheme_units_threshold = tx_info.units_threshold;\n\t\tvar scheme_credits_threshold = tx_info.credits_threshold;\n\n\t\tif (scheme_credits_threshold > credits.transactioncredits) {\n\t\t\tif (tx_fee.threshold_enforced === true) {\n\t\t\t\ttx_fee.required_units = scheme_credits_threshold;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttx_fee.threshold_unmet = true;\n\t\t\t}\n\t\t}\n\n\n\t\treturn true;\n\t}\n\n\t//\n\t// Currency functions\n\t//\n\n\tasync _createDecimalAmount(session, amount, decimals) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._createDecimalAmount(session, amount, decimals);\n\t}\n\n\n\tasync transferCurrencyAmount(sessionuuid, walletuuid, cardfromuuid, cardtouuid, currencyuuid, currencyamount, feelevel = null) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.transferCurrencyAmount(sessionuuid, walletuuid, cardfromuuid, cardtouuid, currencyuuid, currencyamount, feelevel);\n\t}\n\n\tasync _getPretradeScheme(session, currency) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._getPretradeScheme(session, currency);\n\t}\n\n\n\tasync loadConfig(configname) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar clientmodule = global.getModuleObject('webclient');\n\n\t\treturn clientmodule.loadConfig(configname);\n\t}\n\n\tasync getCurrencies(sessionuuid, walletuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencies(sessionuuid, walletuuid);\n\t}\n\n\tasync getCurrencyFromUUID(sessionuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t}\n\n\tasync getCurrencyTotalSupply(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\t\treturn mvccurrencies.getCurrencyTotalSupply(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync importCurrencyFromTokenUUID(sessionuuid, walletuuid, carduuid, tokenuuid) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\t\treturn mvccurrencies.importCurrencyFromTokenUUID(sessionuuid, walletuuid, carduuid, tokenuuid);\n\t}\n\n\tasync importCurrencyFromTokenAddress(sessionuuid, walletuuid, carduuid, tokenaddress, options) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\t\treturn mvccurrencies.importCurrencyFromTokenAddress(sessionuuid, walletuuid, carduuid, tokenaddress, options);\n\t}\n\n\tasync _getCurrencyCard(session, wallet, currency) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._getCurrencyCard(session, wallet, currency);\n\t}\n\n\tasync getAllCurrenciesWithAddress(sessionuuid, walletuuid, address) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getAllCurrenciesWithAddress(sessionuuid, walletuuid, address);\n\t}\n\n\tasync synchronizeCurrency(sessionuuid, walletuuid, currency) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.synchronizeCurrency(sessionuuid, walletuuid, currency);\n\t}\n\n\tasync setCurrencyDescription(sessionuuid, walletuuid, currencyuuid, description) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.setCurrencyDescription(sessionuuid, walletuuid, currencyuuid, description);\n\t}\n\n\tasync getCurrenciesFromAddress(sessionuuid, walletuuid, schemeuuid, address) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrenciesFromAddress(sessionuuid, walletuuid, schemeuuid, address);\n\t}\n\n\n\tasync _getCurrencyScheme(session, currency) {\n\t\tvar global = this.global;\n\t\tvar currenciesmodule = global.getModuleObject('currencies');\n\n\t\tvar currencyscheme = await currenciesmodule.getCurrencyScheme(session, currency);\n\t\treturn currencyscheme;\n\t}\n\n\tasync getCurrencyScheme(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyScheme(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync findCardCurrency(sessionuuid, walletuuid, carduuid) {\n\t\tvar global = this.global;\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.findCardCurrency(sessionuuid, walletuuid, carduuid);\n\t}\n\n\tasync getCurrencyCard(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyCard(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync setCurrencyCard(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.setCurrencyCard(sessionuuid, walletuuid, currencyuuid, carduuid);\n\t}\n\n\tasync createCurrencyCard(sessionuuid, walletuuid, currencyuuid, privatekey) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.createCurrencyCard(sessionuuid, walletuuid, currencyuuid, privatekey);\n\t}\n\n\tasync getCurrencyCardWithAddress(sessionuuid, walletuuid, currencyuuid, address) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyCardWithAddress(sessionuuid, walletuuid, currencyuuid, address);\n\t}\n\n\n\tasync createReadOnlyCurrencyCard(sessionuuid, walletuuid, currencyuuid, address) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.createReadOnlyCurrencyCard(sessionuuid, walletuuid, currencyuuid, address);\n\t}\n\n\tasync generateCurrencyCard(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.generateCurrencyCard(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync getCurrencyPosition(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyPosition(sessionuuid, walletuuid, currencyuuid, carduuid);\n\t}\n\n\tasync getCurrencyCardCredits(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyCardCredits(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync _getMonitoredCardSession(session, wallet, card) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._getMonitoredCardSession(session, wallet, card);\n\t}\n\n\tasync canPayAmount(sessionuuid, walletuuid, carduuid, currencyuuid, amount, tx_fee, feelevel = null) {\n\t\tif (amount ===0)\n\t\t\treturn true;\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find a card for currency ' + currencyuuid);\n\n\n\t\t// can the card send transactions\n\t\tvar cardaccount = card._getSessionAccountObject();\n\n\t\tif (!cardaccount)\n\t\t\treturn false;\n\n\t\tvar privatekey = cardaccount.getPrivateKey();\n\t\n\t\tif (!privatekey)\n\t\t\treturn false;\n\n\n\t\t// first look if we have enough transaction units\n\t\tif (currency.ops.cantxfree !== true) {\n\t\t\tvar _tx_fee = (tx_fee ? tx_fee : {transferred_credit_units: 0, estimated_cost_units: 3} );\n\t\t\tlet _feelevel;\n\n\t\t\tif (feelevel)\n\t\t\t_feelevel = feelevel;\n\t\t\telse\n\t\t\t_feelevel = await this.getRecommendedFeeLevel(sessionuuid, walletuuid, carduuid, _tx_fee);\n\n\t\t\tvar canspend = await this.canCompleteTransaction(sessionuuid, walletuuid, carduuid, _tx_fee, _feelevel).catch(err => {});\n\n\t\t\tif (!canspend)\n\t\t\t\treturn false;\n\t\t}\n\n\t\t// then look if we enough currency amount\n\t\tvar currencyposition = await this.getCurrencyPosition(sessionuuid, walletuuid, currencyuuid, carduuid);\n\t\tvar tokenamountmax = await currencyposition.toInteger();\n\n\t\tif (amount > tokenamountmax)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\tasync payAmount(sessionuuid, walletuuid, carduuid, toaddress, currencyuuid, amount, feelevel = null) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.payAmount(sessionuuid, walletuuid, carduuid, toaddress, currencyuuid, amount, feelevel);\n\t}\n\n\tasync payAndReport(sessionuuid, walletuuid, toaddress, currencyuuid, amount) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.payAndReport(sessionuuid, walletuuid, toaddress, currencyuuid, amount);\n\t}\n\n\tasync getClaimPayingToAddress(sessionuuid, walletuuid, claim) {\n\t\tif (claim.payingto_overload) {\n\t\t\tvar global = this.global;\n\t\t\tvar _apicontrollers = this._getClientAPI();\n\t\t\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t\tvar isvalid = _apicontrollers.isValidAddress(session, claim.payingto_overload);\n\n\t\t\tif (isvalid) {\n\t\t\t\tclaim.payingto = claim.payingto_overload;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (claim.payingto ? claim.payingto : claim.owner);\n\t}\n\n\tasync payClaim(sessionuuid, walletuuid, carduuid, claim) {\n\n\t\t// get currency from the claim\n\t\tvar toaddress = await this.getClaimPayingToAddress(sessionuuid, walletuuid, claim);\n\t\tvar currencyuuid = claim.currencyuuid;\n\t\tvar amount = claim.amount;\n\t\tlet currencyamount = await this.getCurrencyAmount(sessionuuid, currencyuuid, amount);\n\t\tlet tokenamount_int = await currencyamount.decimalamount.toInteger();\n\n\n\t\tvar txhash = await this.payAmount(sessionuuid, walletuuid, carduuid, toaddress, currencyuuid, tokenamount_int);\n\n\t\treturn txhash;\n\t}\n\n\tasync getTokenCardList(sessionuuid, walletuuid, web3providerurl, tokenaddress) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getTokenCardList(sessionuuid, walletuuid, web3providerurl, tokenaddress);\n\t}\n\n\n\tasync getCurrencyCardList(sessionuuid, walletuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyCardList(sessionuuid, walletuuid, currencyuuid);\n\t}\n\n\tasync getCurrencySchemeInfo(sessionuuid, currencyuuid) {\n\t\tconsole.log('Warning: obsolete, should use getCurencyScheme(sessionuuid, walletuuid, currencyuuid)');\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencySchemeInfo(sessionuuid, currencyuuid);\n\t}\n \n\n\tasync getPretradeSchemeInfo(sessionuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\t}\n\n\tasync getPretradeWeb3Url(sessionuuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getPretradeWeb3Url(sessionuuid, currencyuuid);\n\t}\n\n\tasync getPretradeCard(sessionuuid, walletuuid, carduuid, currencyuuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getPretradeCard(sessionuuid, walletuuid, carduuid, currencyuuid);\n\t}\n\n\tasync setPretradeCard(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.setPretradeCard(sessionuuid, walletuuid, currencyuuid, carduuid);\n\t}\n\n\t//\n\t// Transaction functions\n\t//\n\n\t// Note: \n\t// fetch, register and update are for blockchain persistence\n\t// read, save and modify are for storage persistence\n\n\t_getBufferClass() {\n\t\tvar _Buffer;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n\t\t\t\t_Buffer = window.Buffer;\n\t\t\t} else {\n\t\t\t\t_Buffer = require('buffer').Buffer;\n\t\t\t}\n\t\t} catch (e) {\n\t\t}\n\t\t\n\t\treturn _Buffer;\n\t}\n\n\n\tasync registerTransaction(sessionuuid, walletuuid, carduuid, dataobj, assignto, feelevel) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tlet cardsession = await this._getMonitoredCardSession(session, wallet, card);\n\t\tlet cardsessionuuid = cardsession.getSessionUUID();\n\n\t\tvar _tohex = (data) => {\n\t\t\tvar _Buffer = this._getBufferClass();\n\t\t\tlet datastr = JSON.stringify(data);\n\t\t\tlet buf = _Buffer.from(datastr, 'utf8');\n\t\t\treturn '0x' + buf.toString('hex');\n\t\t}\n\n\t\tvar datahexstring = _tohex(dataobj);\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar toaddress = (assignto ? assignto : fromaccount.getAddress());\n\t\t\n\t\t//var transaction = _apicontrollers.createEthereumTransaction(cardsession, fromaccount);\n\t\tvar transaction = await this._createMonitoredEthereumTransaction(wallet, card, cardsession, fromaccount);\n\t\t\n\t\t// fee\n\t\tvar fee;\n\t\t\n\t\tif (feelevel) {\n\t\t\tlet from_card_scheme = card.getScheme();\n\n\t\t\tfee = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\t\t}\n\t\telse {\n\t\t\tfee =  _apicontrollers.createFee();\n\t\t}\n\n\t\t\n\t\ttransaction.setToAddress(toaddress);\n\t\ttransaction.setValue(0);\n\t\ttransaction.setGas(fee.gaslimit);\n\t\ttransaction.setGasPrice(fee.gasPrice);\n\t\t\n\t\ttransaction.setData(datahexstring);\n\t\t\n\t\tconst txhash = await _apicontrollers.sendEthereumTransaction(cardsession, transaction)\n\t\t.catch((err) => {\n\t\t\tconsole.log('error in registerTransaction: ' + err);\n\t\t});\n\n\t\tif (!txhash)\n\t\treturn Promise.reject('could not register transaction');\n\n\t\t// save\n\t\tdataobj.txhash = txhash; // add transaction hash to save it, blocknumber will be added later\n\n\t\t// using sessionuuid to save locally (in 'shared') on the client side\n\t\tawait this._saveTransactionObject(sessionuuid, walletuuid, dataobj);\n\n\t\treturn txhash;\n\t}\n\n\t_fillTransactionDataObject(dataobject, tx) {\n\t\tvar dataobj = {};\n\n\t\tif (!tx)\n\t\t\treturn dataobject;\n\t\t\n\t\ttry {\n\t\t\tdataobj = JSON.parse(tx.input_decoded_utf8);\n\t\t}\n\t\tcatch(e) {\n\t\t\t// another type of transaction\n\t\t\tdataobj = {};\n\t\t}\n\n\t\tdataobj.blocknumber = tx.block.blocknumber;\n\t\tdataobj.blocktime = tx.block.timestamp;\n\t\tdataobj.txhash = tx.hash;\n\n\t\tdataobject = Object.assign(dataobject, dataobj);\n\n\t\treturn dataobject;\n\t}\n\n\tasync _getMonitoredSchemeSession(session, wallet, scheme) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies._getMonitoredSchemeSession(session, wallet, scheme);\n\t}\n\n\n\tasync _fetchTransaction(session, wallet, pretradescheme, txhash, bPersist = false) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar fetchsession = await this._getMonitoredSchemeSession(session, wallet, pretradescheme);\n\t\tvar fetchsessionuuid = fetchsession.getSessionUUID();\n\n\t\tconst tx = await _apicontrollers.readTransaction(fetchsession, txhash)\n\t\t.catch((err) => {\n\t\t\tconsole.log('error in _fetchTransaction: ' + err);\n\t\t});\n\n\t\tif (!tx)\n\t\t\treturn Promise.reject('could not find transaction ' + txhash);\n\t\t\n\t\tvar dataobj = {};\n\t\t\n\t\tthis._fillTransactionDataObject(dataobj, tx);\n\n\t\tif (bPersist) {\n\t\t\tvar sessionuuid = session.getSessionUUID();\n\t\t\tlet walletuuid = (wallet ? wallet.getWalletUUID() : null);\n\n\t\t\tlet persistdata = Object.assign({}, dataobj);\n\n\t\t\tpersistdata.txhash = txhash;\n\n\t\t\t// using sessionuuid to save locally (in 'shared') on the client side\n\t\t\tawait this._saveTransactionObject(sessionuuid, walletuuid, persistdata);\n\t\t}\n\n\t\treturn dataobj;\n\t}\n\n\tasync fetchTransaction(sessionuuid, walletuuid, pretradeschemeuuid, txhash) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!pretradeschemeuuid)\n\t\t\treturn Promise.reject('scheme uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t// get a session on web3providerurl\n\t\tlet wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid)\n\t\t.catch(err => {});\n\n\t\tlet pretradescheme = await _apicontrollers.getSchemeFromUUID(session, pretradeschemeuuid)\n\t\t.catch(err => {});\n\n\t\tif (pretradescheme.isRemote()) {\n\t\t\t// check wallet is not locked\n\t\t\t// TODO: can use wallet.checkLock for version >= 0.20.8\n\t\t\tif (wallet && wallet.isLocked())\n\t\t\t\treturn Promise.reject('ERR_WALLET_LOCKED');\n\t\t}\n\n\t\treturn this._fetchTransaction(session, wallet, pretradescheme, txhash, true);\n\t}\n\n\tasync fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, txhash) {\n\t\tvar pretradescheme_info = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\n\t\treturn this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, txhash);\n\t}\n\n\tasync _getAddressPretradeTransactions(session, wallet, currency, address) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar mytokensmodule = global.getModuleObject('mytokens');\n\n\t\t// get a childsession on pretrade's web3providerurl\n\t\t//let web3providerurl = currency.pretrade_web3_provider_url;\n\t\t//var childsession = await this._getChildSessionOnWeb3Url(session, web3providerurl);\n\t\tvar pretradescheme = await this._getPretradeScheme(session, currency);\n\t\tvar childsession = await this._getMonitoredSchemeSession(session, wallet, pretradescheme);\n\n\t\tvar currencyuuid = currency.uuid;\n\n\t\tvar mytokensaccessinstance = childsession.getSessionVariable('mytokensexplorer-' + currencyuuid);\n\n\t\tif (!mytokensaccessinstance) {\n\t\t\t// TODO: we need to ethereum_node_access to have it initialized when rest connection header is filled\n\t\t\tchildsession.ethereum_node_access_instance = await _apicontrollers.getEthereumNodeAccessInstance(childsession); // keep!!!\n\t\n\t\t\t// create a specific mytokens instance pointing to pretrade_explorer_url to retrieve transactions\n\t\t\tmytokensaccessinstance = mytokensmodule.getMyTokensServerAccessInstance(childsession);\n\n\t\t\tvar restconnection = childsession.createRestConnection(currency.pretrade_explorer_url);\n\n\t\t\tmytokensaccessinstance.setRestConnection(restconnection);\n\n\t\t\tchildsession.setSessionVariable('mytokensexplorer-' + currencyuuid, mytokensaccessinstance);\n\t\t}\n\n\t\tvar transactions = await mytokensaccessinstance.account_transactions(address);\n\n\t\t// fake ethchainreader\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\t\tvar ethereumnodeaccessinstance = ethereumnodeaccessmodule.getEthereumNodeAccessInstance(childsession)\n\t\t// TODO: could be better to use\n\t\t// var ethereumnodeaccessinstance = _apicontrollers.getEthereumNodeAccessInstance(childsession);\n\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\ttry {\n\t\t\t\t// see if input can be decoded in utf8\n\t\t\t\ttx.input_decoded_utf8 = ethereumnodeaccessmodule.web3ToUTF8(childsession, tx.input);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t}\n\t\t\ttx.block = (tx.block ? tx.block : {});\n\t\t\ttx.block.blocknumber = tx.blockNumber;\n\t\t\ttx.block.timestamp = tx.timeStamp;\n\t\t}\n\n\t\treturn transactions;\n\t}\n\n\n\tasync canFetchTransactions(sessionuuid, walletuuid, currencyuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar pretradescheme = await this._getPretradeScheme(session, currency);\n\t\tvar fetchsession = await this._getMonitoredSchemeSession(session, wallet, pretradescheme).catch(err=> {});\n\n\t\tif (!fetchsession)\n\t\t\treturn false;\n\t\t\n\t\tif (currency.pretrade_explorer_url)\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\n\tasync fetchTransactions(sessionuuid, walletuuid, currencyuuid, address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\n\t\t// use explorer to fetch transactions for address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, address);\n\n\t\t// we filter quotes\n\t\tvar txlist = {};\n\n\t\ttxlist.bounties = [];\n\t\ttxlist.claims = [];\n\n\t\ttxlist.quotes = [];\n\t\ttxlist.orders = [];\n\t\ttxlist.invoices = [];\n\t\ttxlist.paymentnotices = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tswitch(dataobject.type == 'quote') {\n\t\t\t\tcase 'bounty':\n\t\t\t\t\ttxlist.bounties.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'claim':\n\t\t\t\t\ttxlist.claims.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'quote':\n\t\t\t\t\ttxlist.quotes.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'order':\n\t\t\t\t\ttxlist.orders.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'invoice':\n\t\t\t\t\ttxlist.invoices.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'paymentnotice':\n\t\t\t\t\ttxlist.paymentnotices.push(dataobject);\n\t\t\t\t\tbreak;\n\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn txlist;\n\t}\n\n\t//\n\t// Bounties\n\t//\n\n\tasync readBounties(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'bounties']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'bounties']; \n\t\t\t// shared keys, also we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\n\t\t//let bounty_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tlet bounty_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!bounty_list)\n\t\t\tbounty_list = [];\n\n\t\treturn bounty_list;\n\t}\n\n\tasync fetchBounties(sessionuuid, walletuuid, currencyuuid, vendor_address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\n\t\t// use explorer to fetch transactions for vendor's address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, vendor_address);\n\n\t\t// we filter bounties\n\t\tvar bountylist = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tif ((dataobject.type == 'bounty') && (dataobject.owner == vendor_address)) {\n\t\t\t\t//await this.saveBounty(sessionuuid, null, dataobject);\n\n\t\t\t\tbountylist.push(dataobject);\n\t\t\t}\n\t\t}\n\n\t\treturn bountylist;\n\t}\n\n\tasync fetchBounty(sessionuuid, walletuuid, currencyuuid, txhash) {\n\n\t\tvar missing_credentials = false;\n\t\tvar orgbounty = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, txhash)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in fetchBounty: ' + err);\n\n\t\t\tif (err == 'ERR_MISSING_CREDENTIALS')\n\t\t\t\tmissing_credentials = true;\n\t\t});\n\n\t\tif (missing_credentials === true)\n\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\n\t\tif (!orgbounty)\n\t\t\treturn Promise.reject('ERR_BOUNTY_NOT_FOUND');\n\n\t\t// we post-process the bounty record\n\t\tvar bounty = {};\n\n\t\t// copy the record\n\t\tObject.assign(bounty, orgbounty);\n\n\t\tif (!orgbounty.ver) {\n\t\t\t// version 1\n\t\t\tbounty.one_submission = false;\n\t\t}\n\t\telse if (orgbounty.ver == \"2\") {\n\t\t\tvar submission_options = orgbounty.submission_options;\n\n\t\t\tbounty.private_submission = (submission_options & 1 ? true : false);\n\t\t\tbounty.one_submission = (submission_options & 2 ? true : false);\n\t\t}\n\t\telse {\n\t\t\tconsole.log('error: bounty on chain has wrong version number ' + orgbounty.ver);\n\t\t}\n\n\t\treturn bounty;\n\t}\n\t\n\tasync registerBounty(sessionuuid, walletuuid, carduuid, bounty) {\n\t\t// we pre-process the bounty before pushing it to the chain\n\t\tvar _bounty = {};\n\n\t\t// copy the record\n\t\tObject.assign(_bounty, bounty);\n\n\t\t// put version\n\t\t_bounty.ver = \"2\";\n\n\t\t// remove boolean flags\n\t\tdelete _bounty.private_submission;\n\t\tdelete _bounty.one_submission;\n\n\t\t// compute submission_options and add it to _bounty\n\t\t_bounty.submission_options = 0;\n\t\tif (bounty.private_submission) _bounty.submission_options += 1;\n\t\tif (bounty.one_submission) _bounty.submission_options += 2;\n\n\t\t// in ver=\"2\" we assign to bounty card to minimize transaction list to be retrieved\n\t\tvar assignto = bounty.bounty_card_address; \n\n\t\tvar txhash = await this.registerTransaction(sessionuuid, walletuuid, carduuid, _bounty, assignto);\n\n\t\treturn txhash;\n\t}\n\n\tasync saveBounty(sessionuuid, walletuuid, bounty) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar bounty_list = await this.readBounties(sessionuuid, walletuuid);\n\n\t\t// look not in list\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < bounty_list.length; i++) {\n\t\t\tif (bounty_list[i].txhash == bounty.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t\t// bounty parameters to be saved\n\t\t\tvar {txhash, blocknumber, currencyuuid, owner, title, amount, currency} = bounty;\n\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'bounties']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'bounties']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\t\t\t\n\t\t\t}\n\t\t\n\t\t\tvar localjson = {txhash, blocknumber, currencyuuid, owner, title, amount, currency};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\tbounty_list.push(localjson);\n\t\n\t\t\t//return _apicontrollers.saveLocalJson(session, keys, bounty_list);\n\t\t\treturn this._saveClientSideJson(session, keys, bounty_list);\n\t\t}\n\t\telse {\n\t\t\treturn bounty_list;\n\t\t}\n\t}\n\n\t// chain persistence\n\t_getBountyAssignAddress(session, bounty) {\n\t\tvar assign_address;\n\n\t\tif (!bounty.ver)\n\t\t\tassign_address = bounty.owner;\n\t\tif (bounty.ver == \"2\")\n\t\t\tassign_address = bounty.bounty_card_address; // bounty card has less transactions\n\n\t\treturn assign_address;\n\t}\n\n\tasync fetchClaims(sessionuuid, walletuuid, currencyuuid, bountyhash) {\n\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\t\n\t\t// read quote\n\t\tvar bounty = await this.fetchBounty(sessionuuid, walletuuid, currencyuuid, bountyhash);\n\t\tvar assign_address = this._getBountyAssignAddress(session, bounty);\n\t\n\t\t// use explorer to fetch transactions for address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, assign_address);\n\t\n\t\t// we filter claims\n\t\tvar claimmap = {};\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\t\n\t\t\tvar dataobject = {};\n\t\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\t\n\t\t\tif ((dataobject.type == 'claim') && (dataobject.bounty == bountyhash)) {\n\n\t\t\t\tif (!dataobject.uuid) {\n\t\t\t\t\t// add an uuid now\n\t\t\t\t\tdataobject.uuid = session.guid();\n\t\t\t\t\tawait this.saveClaim(sessionuuid, null, dataobject);\n\t\t\t\t}\n\n\t\t\t\tif (claimmap[dataobject.uuid]) {\n\t\t\t\t\t// keep the latest (full copy persistence)\n\t\t\t\t\tlet latest = claimmap[dataobject.uuid].latest;\n\n\t\t\t\t\tif (dataobject.blocknumber > latest.blocknumber) {\n\t\t\t\t\t\tclaimmap[dataobject.uuid].latest = dataobject;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((dataobject.blocknumber == latest.blocknumber) && (dataobject.ordId > (latest.ordId ? latest.ordId : 0))) {\n\t\t\t\t\t\tclaimmap[dataobject.uuid].latest = dataobject;\n\t\t\t\t\t}\n\n\t\t\t\t\t// update if first come afterward in list\n\t\t\t\t\tlet first = claimmap[dataobject.uuid].latest;\n\n\t\t\t\t\tif (dataobject.blocknumber < first.blocknumber) {\n\t\t\t\t\t\tclaimmap[dataobject.uuid].first = dataobject;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((dataobject.blocknumber == latest.blocknumber) && ((dataobject.ordId ? dataobject.ordId : 0) < (first.ordId ? first.ordId : 0))) {\n\t\t\t\t\t\tclaimmap[dataobject.uuid].first = dataobject;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t//claimmap[dataobject.uuid] = dataobject;\n\t\t\t\t\tclaimmap[dataobject.uuid] = {first: dataobject, latest: dataobject};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar claimlist = [];\n\t\t\n\t\tvar arr = Object.values(claimmap);\n\n\t\tfor (var i = 0; i < (arr ? arr.length : 0); i++) {\n\t\t\tlet entry = Object.assign({}, arr[i].latest);\n\t\t\t\n\t\t\tentry.update_blocktime = entry.blocktime;\n\t\t\tentry.update_blocknumber = entry.blocknumber;\n\t\t\tentry.blocktime = arr[i].first.blocktime;\n\t\t\tentry.blocknumber = arr[i].first.blocknumber;\n\t\t\t\n\t\t\tclaimlist.push(entry);\n\t\t}\n\t\n\t\treturn claimlist;\n\t}\n\n\tasync fetchClaim(sessionuuid, walletuuid, currencyuuid, txhash) {\n\n\t\tvar missing_credentials = false;\n\t\tvar orgclaim = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, txhash)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in fetchClaim: ' + err);\n\n\t\t\tif (err == 'ERR_MISSING_CREDENTIALS')\n\t\t\t\tmissing_credentials = true;\n\t\t});\n\n\t\tif (missing_credentials === true)\n\t\t\treturn Promise.reject('ERR_MISSING_CREDENTIALS');\n\n\t\tif (!orgclaim)\n\t\t\treturn Promise.reject('ERR_CLAIM_NOT_FOUND');\n\n\t\tif (!orgclaim.uuid)\n\t\t\treturn Promise.reject('claim was not registered with a proper uuid ' + txhash);\n\n\t\t// we scan the claims to see if the original claim has been updated\n\t\t// with new record\n\t\tvar claim = orgclaim;\n\t\tvar claims = await this.fetchClaims(sessionuuid, walletuuid, currencyuuid, claim.bounty);\n\n\t\tfor (var i = 0; i < (claims ? claims.length : 0); i++) {\n\t\t\tvar clm = claims[i];\n\t\n\t\t\tif (clm.uuid === orgclaim.uuid) {\n\t\t\t\tclaim = claims[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn claim;\n\t}\n\n\tasync canRegisterClaim(sessionuuid, walletuuid, carduuid, claim) {\n\t\tlet bounty = await this.fetchBounty(sessionuuid, walletuuid, claim.currencyuuid, claim.bounty);\n\n\t\tif (bounty.one_submission === true) {\n\t\t\t// we get list of claims already submitted and see if claim.owner or claim.payingto\n\t\t\t// have already been registered\n\t\t\tvar claims = await this.fetchClaims(sessionuuid, bounty.currencyuuid, bounty.txhash);\n\n\t\t\tvar owner_map = {};\n\t\t\tvar payingto_map = {};\n\n\t\t\tfor (var i = 0; i < (claims ? claims.length : 0); i++) {\n\t\t\t\tvar clm = claims[i];\n\t\t\n\t\t\t\tif (clm.owner) owner_map[clm.owner] = clm.owner;\n\t\t\t\tif (clm.payingto) payingto_map[clm.payingto] = clm.payingto;\n\t\t\t}\n\n\t\t\tif (owner_map[claim.owner])\n\t\t\t\treturn false;\n\n\t\t\tif (claim.payingto && payingto_map[claim.payingto])\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\t\n\tasync registerClaim(sessionuuid, walletuuid, carduuid, claim) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\t\t\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\tlet cardsession = await this._getMonitoredCardSession(session, wallet, card);\n\n\t\t// we add an uuid to the claim that will live in multiple txhash\n\t\tvar claimuuid = cardsession.guid();\n\n\t\tclaim.uuid = claimuuid;\n\n\t\tlet bounty = await this.fetchBounty(sessionuuid, walletuuid, claim.currencyuuid, claim.bounty);\n\t\tvar assign_address = this._getBountyAssignAddress(session, bounty);\n\n\t\tvar txhash = await this.registerTransaction(sessionuuid, walletuuid, carduuid, claim, assign_address);\n\n\t\treturn txhash;\n\t}\n\n\tasync updateClaim(sessionuuid, walletuuid, carduuid, claim) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tlet bounty = await this.fetchBounty(sessionuuid, walletuuid, claim.currencyuuid, claim.bounty);\n\t\tvar assign_address = this._getBountyAssignAddress(session, bounty);\n\n\t\t\n\t\tif (!claim.uuid)\n\t\t\treturn Promise.reject('claim has no uuid ' + claim.txhash);\n\t\t\n\t\t// we work with a full copy registration (newer is the correct record) and not difference (adding modifications)\n\t\tvar txhash = await this.registerTransaction(sessionuuid, walletuuid, carduuid, claim, assign_address);\n\n\t\tif (txhash) {\n\t\t\tawait this.saveClaim(sessionuuid, walletuuid, claim); // note: we have not implemented a modifyClaim function\n\t\t}\n\n\t\treturn txhash;\n\t}\n\n\t// storage\n\tasync _readClaims(session, keys) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\t//var claim_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tvar claim_list = await this._readClientSideJson(session, keys);\n\t\n\t\tif (!claim_list)\n\t\tclaim_list = [];\n\n\t\treturn claim_list;\n\t}\n\n\tasync readClaims(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'claims']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'claims']; \n\t\t\t// shared keys, otherwise we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\t\n\t\tvar claim_list = await this._readClaims(session, keys);\n\n\t\t// we go through the list to see if some 'unhandled yet' claims\n\t\t// need to be checked\n\t\tvar unhandled_claims = [];\n\n\t\tfor (var i = 0; i < claim_list.length; i++) {\n\t\t\tif (claim_list[i].status === 0)\n\t\t\t\tunhandled_claims.push(claim_list[i]);\n\t\t}\n\n\t\t// then fetch for each claim (could be speeded up if necessary)\n\t\tfor (var i = 0; i < unhandled_claims.length; i++) {\n\t\t\tvar claim = await this.fetchClaim(sessionuuid, walletuuid, unhandled_claims[i].currencyuuid, unhandled_claims[i].txhash).catch(err => {});\n\n\t\t\tif (claim && (claim.status !== 0)) {\n\t\t\t\tawait this.saveClaim(sessionuuid, walletuuid, claim);\n\t\t\t}\n\t\t}\n\t\n\t\treturn claim_list;\n\t}\n\t\n\tasync saveClaim(sessionuuid, walletuuid, claim) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\n\t\tvar keys;\n\n\t\tif (!walletuuid) {\n\t\t\tkeys = ['myquote', 'claims']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tkeys = ['myquote', 'claims']; \n\t\t\t// shared keys, also we could put in wallet\n\t\t\t// with mvcmodule.putInWallet\n\t\t}\t\t\n\t\t\t\n\t\tvar claim_list = await this._readClaims(session, keys);\n\t\n\t\tvar bInList = false;\n\t\tvar claim_index;\n\t\n\t\tfor (var i = 0; i < claim_list.length; i++) {\n\t\t\tif (claim.txhash && (claim_list[i].txhash == claim.txhash)) {\n\t\t\t\tbInList = true;\n\t\t\t\tclaim_index = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// using uuid now to identify claims because of multiple txhash for same entity\n\t\t\tif (claim.uuid && (claim_list[i].uuid == claim.uuid)) {\n\t\t\t\tbInList = true;\n\t\t\t\tclaim_index = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t\n\t\tif (!bInList) {\n\t\t\t// add new element to the list\n\t\n\t\t\t// claim parameters\n\t\t\tlet {uuid, txhash, blocknumber, currencyuuid, owner, bounty, amount, currency, private_submission, answer, status} = claim;\n\t\n\t\t\t// read bounty to get title\n\t\t\tvar pretradescheme_info = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\t\n\t\t\tlet bountyobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, bounty)\n\t\t\t.catch(err => {});\n\t\t\t\n\t\t\tlet title = (bountyobject ? bountyobject.title : null);\n\t\n\t\t\tlet localjson = {uuid, txhash, blocknumber, currencyuuid, owner, bounty, title, amount, currency, private_submission, answer, status};\n\t\n\t\t\tlocaljson.savetime = Date.now();\n\t\n\t\t\tclaim_list.push(localjson);\n\t\t}\n\t\telse {\n\t\t\t// we update claim at correct index (transfering additional parameters)\n\t\t\tlet title = claim_list[claim_index].title;\n\t\t\tlet savetime = claim_list[claim_index].savetime;\n\n\t\t\tclaim_list[claim_index] = claim;\n\n\t\t\tclaim_list[claim_index].title = title;\n\t\t\tclaim_list[claim_index].savetime = savetime;\n\t\t}\n\n\t\t//return _apicontrollers.saveLocalJson(session, keys, claim_list);\n\t\treturn this._saveClientSideJson(session, keys, claim_list);\n\t}\t\n\n\t//\n\t// Deeds\n\t//\n\n\tasync _getMonitoredERC721TokenSession(session, wallet, currency) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\t\n\t\tvar currencyscheme = await this._getCurrencyScheme(session, currency);\n\t\tvar childsession = await this._getMonitoredSchemeSession(session, wallet, currencyscheme);\n\n\t\tif (currencyscheme.isRemote() === true) {\n\t\t\t// remote (or at least for authkey, we could check that ehtnodeserver is indeed remote)\n\t\t\tvar ethnodemodule = global.getModuleObject('ethnode');\n\t\t\tvar ethereumnodeaccessinstance = ethnodemodule.getEthereumNodeAccessInstance(childsession);\n\t\t\t// TODO: could be better to use\n\t\t\t// var ethereumnodeaccessinstance = _apicontrollers.getEthereumNodeAccessInstance(childsession);\n\t\n\t\t\tif (this.contract_path_root_uri && ethereumnodeaccessinstance.web3_setArtifactRootUri) {\n\t\t\t\t// we set the root uri for contracts in EthereumNodeAccess\n\t\t\t\tawait ethereumnodeaccessinstance.web3_setArtifactRootUri(this.contract_path_root_uri);\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// local\n\n\t\t\t// TODO: remove when ethereum_core will use newer web3 version\n\t\t\t// than 1.0.0-beta.34 (e.g. 1.3.5)\n\t\t\t// overload is necessary to be able reading arrays in fetchRecords\n/* \t\t\tvar ethnodemodule = global.getModuleObject('ethnode');\n\t\t\tvar EthereumNodeAccess = global.getModuleObject('ethereum-node-access');\n\n\t\t\tvar ethereum_node_access_instance = ethnodemodule.getEthereumNodeAccessInstance(childsession);\n\t\t\tvar web3providerurl = ethnodemodule.getWeb3ProviderUrl(childsession);\n\n\t\t\tvar web3_upgraded = childsession.getSessionVariable('ERC721_WEB3_UPGRADED', true);\n\n\t\t\tif (web3_upgraded !== true) {\n\t\t\t\tconst Web3 = require(\"web3\");\n\t\n\t\t\t\tvar web3Provider = EthereumNodeAccess.getWeb3Provider(childsession, web3providerurl);\n\t\t\t\t\t  \n\t\t\t\tvar web3instance = new Web3(web3Provider);\n\t\t\t\tweb3instance.OVERLOADED_BY_MYDEED = true;\n\t\t\t\t\n\t\t\t\tawait ethereum_node_access_instance.web3_setProviderUrl(web3providerurl);\n\t\t\t\tethereum_node_access_instance.web3instance = web3instance; // overload\n\t\t\t\tethereum_node_access_instance.OVERLOADED_BY_MYDEED = true;\n\t\t\n\t\t\t\t// put in session map for this url\n\t\t\t\tvar web3ProviderObject = ethnodemodule.createWeb3ProviderObject(childsession, web3providerurl, ethereum_node_access_instance)\n\t\t\t\tethnodemodule.putWeb3ProviderObject(childsession, web3ProviderObject)\n\t\t\t\t//childsession.web3instancemap[web3providerurl] = web3instance;\n\t\n\t\t\t\tchildsession.ERC721TOKEN = true;\n\t\t\t\tchildsession.setSessionVariable('ERC721_WEB3_UPGRADED', true);\t\n\t\t\t} */\n\t\t\t// END Remove\n\t\t}\n\n\n\t\n\t\treturn childsession;\n\t}\n\n\n\t// minter\n\tasync _createERC721TokenObject(session, currency, data) {\n\t\t// for local contract objects (before deployment)\n\t\tvar global = this.global;\n\t\tvar mvcerc721module = global.getModuleObject('mvc-erc721');\n\n\t\tvar erc721token = await mvcerc721module.createERC721TokenObject(session, currency, data);\n\n\t\treturn erc721token;\n\t}\n\n\tasync deployDeedMinter(sessionuuid, walletuuid, currencyuuid, carduuid, minter, feelevel) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\n\t\t\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\t\t\n\t\t\t\n\t\t// create contract object (local)\n\t\tvar data = Object.create(null);\n\n\t\tdata['name'] = minter.name;\n\t\tdata['symbol'] = minter.symbol;\n\n\t\tdata['basetokenuri'] = minter.basetokenuri;\n\n\t\tvar erc721token = await this._createERC721TokenObject(childsession, currency, data);\n\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar from_card_scheme = card.getScheme();\n\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\n\t\tvar ethereumtransaction = ethereumnodeaccessmodule.getEthereumTransactionObject(childsession, fromaccount);\n\t\t\n\t\t// fee\n\t\tvar fee = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\n\t\tethereumtransaction.setGas(fee.gaslimit);\n\t\tethereumtransaction.setGasPrice(fee.gasPrice);\n\n \t\tvar contractaddress = await erc721token.deploy(ethereumtransaction);\n\n\t\tvar erc721tokenaddress = erc721token.getAddress();\n\n\t\tif (!erc721tokenaddress)\n\t\t\treturn Promise.reject('could not generate a minter for currency ' + currencyuuid);\n\n\t\tminter.address = erc721tokenaddress;\n\t\tminter.card_uuid = carduuid;\n\t\tminter.card_address = card.getAddress();\n\n\t\t// we save the mapping\n\t\tvar txhash = await this._putAddressLockerContent(session, wallet, currency, card, erc721tokenaddress);\n\n\t\tminter.txhash = txhash;\n\t\n\t\treturn minter;\n\t}\n\n\tasync _putAddressLockerContent(session, wallet, currency, card, contentstring) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\n\n\t\tvar mvcerc721module = global.getModuleObject('mvc-erc721');\n\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar from_card_scheme = card.getScheme();\n\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\n\t\tvar ethereumtransaction = ethereumnodeaccessmodule.getEthereumTransactionObject(childsession, fromaccount);\n\t\t\n\t\t// compute feelevel then create fee\n\t\tlet tx_fee = {};\n\t\ttx_fee.transferred_credit_units = 0;\n\t\tlet minter_cost_units = (currency.deeds_v1.locker_put_cost_units ? parseInt(currency.deeds_v1.locker_put_cost_units) : 2);\n\t\ttx_fee.estimated_cost_units = minter_cost_units;\n\n\t\tlet _feelevel = await this._getRecommendedFeeLevel(session, wallet, card, tx_fee);\n\n\t\tvar fee = await _apicontrollers.createSchemeFee(from_card_scheme, _feelevel);\n\n\t\tethereumtransaction.setGas(fee.gaslimit);\n\t\tethereumtransaction.setGasPrice(fee.gasPrice);\n\n\t\treturn mvcerc721module.putLockerContent(childsession, currency, contentstring, ethereumtransaction);\n\t}\n\n\tasync _getAddressLockerContent(session, wallet, currency, card_address) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\n\t\tvar mvcerc721module = global.getModuleObject('mvc-erc721');\n\n\t\treturn mvcerc721module.getLockerContent(childsession, currency, card_address);\n\t}\n\n\tasync _fetchDeedMinterFromAddress(session, wallet, currency, minteraddress) {\n\t\t// for contract objects already deployed\n\n\t\tif (!minteraddress)\n\t\treturn Promise.reject('can only instantiate minters already on the chain');\n\n\t\tvar global = this.global;\n\n\t\t// get proper session to access erc721token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\n\t\t// we read the token elements\n\t\tvar minter = {address: minteraddress};\n\n\t\t// create contract object (already deployed)\n\t\tvar data = Object.create(null);\n\t\tdata['address'] = minteraddress;\n\n\t\tvar mvcerc721module = global.getModuleObject('mvc-erc721');\n\n\t\tvar erc721token = await mvcerc721module.createERC721TokenObject(childsession, currency, data);\n\n\t\tvar name = await erc721token.getChainName();\n\t\tvar symbol = await erc721token.getChainSymbol();\n\n\t\tminter.name = name;\n\t\tminter.symbol = symbol;\n\n\t\tminter.currencyuuid = currency.uuid;\n\t\tminter.address = minteraddress;\n\n\t\treturn minter;\n\t}\n\n\tasync fetchDeedMinterFromAddress(sessionuuid, walletuuid, currencyuuid, minteraddress) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n/* \t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n*/\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n/* \t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n*/\n \t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\n\t\t// we read the contract elements\n\t\tvar minter = await this._fetchDeedMinterFromAddress(session, wallet, currency, minteraddress);\n\n\t\treturn minter;\n\t}\n\n\tasync fetchDeedMinterFromOwner(sessionuuid, walletuuid, currencyuuid, owneraddress) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n/* \t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n*/\t\t\n \t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n/* \t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n*/\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar minteraddress = await this._getAddressLockerContent(session, wallet, currency, owneraddress);\n\n\t\t// we read the contract elements\n\t\tvar minter = await this._fetchDeedMinterFromAddress(session, wallet, currency, minteraddress);\n\n\t\treturn minter;\n\t}\n\n\tasync fetchDeedMinter(sessionuuid, walletuuid, currencyuuid, carduuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tif (!carduuid)\n\t\t\treturn Promise.reject('card uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar card = await wallet.getCardFromUUID(carduuid);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find card ' + carduuid);\n\t\n\t\tvar card_address = card.getAddress();\n\t\tvar erc721tokenaddress = await this._getAddressLockerContent(session, wallet, currency, card_address);\n\n\t\tif (!erc721tokenaddress)\n\t\t\treturn; // no minter\n\n\t\t// we read the contract elements\n\t\tvar minter = await this._fetchDeedMinterFromAddress(session, wallet, currency, erc721tokenaddress);\n\n\t\t// add currency uuid\n\t\tminter.currencyuuid = currencyuuid;\n\t\t\n\t\t// add card info\n\t\tminter.card_uuid = carduuid;\n\t\tminter.card_address = card_address;\n\n\t\treturn minter;\n\t}\n\n\tasync _getERC721TokenObject(session, currency, minter) {\n\t\t// for contract objects already deployed\n\n\t\tif (!minter || !minter.address)\n\t\t\treturn Promise.reject('can only instantiate minters already on the chain');\n\n\t\tvar global = this.global;\n\t\tvar mvcerc721module = global.getModuleObject('mvc-erc721');\n\n\t\tvar data = Object.create(null);\n\n\t\tdata['address'] = minter.address;\n\t\tdata['name'] = minter.name;\n\t\tdata['symbol'] = minter.symbol;\n\n\t\tvar erc721token = await mvcerc721module.createERC721TokenObject(session, currency, data);\n\n\t\treturn erc721token;\n\t}\n\n\t// deeds\n\tasync readDeeds(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'deeds']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'deeds']; \n\t\t\t// shared keys, also we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\n\t\tlet deed_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!deed_list)\n\t\tdeed_list = [];\n\n\t\treturn deed_list;\n\t}\n\n\tasync fetchDeeds(sessionuuid, walletuuid, currencyuuid, minter) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n/* \t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined'); */\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n/* \t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid); */\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar card =  await this._getCurrencyCard(session, wallet, currency);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find currency card for wallet ' + walletuuid);\n\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\t// list of deeds\n\t\tvar deeds = [];\n\n\t\t// get totalsupply to get list of tokenids\n\t\tconst totalsupply = await erc721token.getTotalSupply();\n\n\t\tfor (var i = 0; i < totalsupply; i++) {\n\t\t\tvar deed =  await this._fetchDeedInfo(currency, erc721token, i);\n\n\t\t\tdeeds.push(deed);\n\t\t}\n\n\t\treturn deeds;\n\t}\n\n\tasync _getMinterCard(session, wallet, currency, minter) {\n\t\tvar carduuid = minter.card_uuid;\n\t\tvar card;\n\n\t\tif (wallet && carduuid) {\n\t\t\t// if minter created through getMinter()\n\t\t\tcard =  await wallet.getCardFromUUID(carduuid);\n\t\n\t\t\tif (!card)\n\t\t\t\treturn Promise.reject('could not find card with uuid ' + carduuid);\n\t\t}\n\t\telse {\n\t\t\t// TODO: find better way to find back card from minter address\n\t\t\tcard = await this._getCurrencyCard(session, wallet, currency);\n\t\t}\n\n\t\treturn card;\n\t}\n\n\tasync mintDeed(sessionuuid, walletuuid, currencyuuid, minter, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tvar card = await this._getMinterCard(session, wallet, currency, minter);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find minter card');\n\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar from_card_scheme = card.getScheme();\n\n\t\t// mint a token item\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\n\t\tvar ethereumtransaction = ethereumnodeaccessmodule.getEthereumTransactionObject(childsession, fromaccount);\n\t\t\n\t\t// fee\n\t\tvar fee = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\n\t\tethereumtransaction.setGas(fee.gaslimit);\n\t\tethereumtransaction.setGasPrice(fee.gasPrice);\n\n\t\t// fetch totalsupply\n\t\tconst totalsupply = await erc721token.getTotalSupply();\n\n\t\t// mint now\n\t\tvar txhash = await erc721token.mint(fromaccount, ethereumtransaction);\n\n\t\tif (!txhash)\n\t\t\treturn Promise.reject('mint of deed did not succeed, no transaction hash returned');\n\n\t\tvar deed = {\n\t\t\ttype: 'deed',\n\t\t\tcurrencyuuid,\n\t\t\tminter: minter.address,\n\t\t\ttokenid: totalsupply,\n\t\t\ttxhash: 'dd-' + minter.address + '-' + totalsupply,\n\t\t\tmetadata: {},\n\t\t\tarticles: [],\n\t\t\tclauses: [],\n\t\t\tminthash: txhash\n\t\t};\n\n\t\treturn deed;\n\t}\n\n\tasync saveDeed(sessionuuid, walletuuid, deed) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar deed_list = await this.readDeeds(sessionuuid, walletuuid);\n\n\t\t// look not in list\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < deed_list.length; i++) {\n\t\t\tif (deed_list[i].txhash == deed.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t\t// deed parameters to be saved\n\t\t\tvar txhash = deed.txhash;\n\t\t\tvar currencyuuid = deed.currencyuuid;\n\t\t\tvar minter = deed.minter;\n\t\t\tvar tokenid = deed.tokenid;\n\t\t\tvar time = (deed.metadata ? deed.metadata.time : null);\n\t\t\tvar title = (deed.metadata ? deed.metadata.title : null);\n\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'deeds']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'deeds']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\t\t\t\n\t\t\t}\n\t\t\n\t\t\tvar localjson = {txhash, time, currencyuuid, minter, tokenid, title};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\tdeed_list.push(localjson);\n\t\n\t\t\treturn this._saveClientSideJson(session, keys, deed_list);\n\t\t}\n\t\telse {\n\t\t\treturn deed_list;\n\t\t}\n\t}\n\n\tasync _fetchDeedInfo(currency, erc721token, tokenid) {\n\t\t// fetch deed info\n\t\tvar deed = {type: 'deed', tokenid};\n\n\t\tdeed.currencyuuid = currency.uuid;\n\n\t\tdeed.minter = erc721token.getAddress();\n\t\tdeed.txhash = 'dd-' + deed.minter + '-' + tokenid;\n\n\t\tdeed.tokenuri = await erc721token.getChainTokenURI(tokenid);\n\t\tdeed.owner = await erc721token.ownerOf(tokenid);\n\t\tdeed.approved = await erc721token.getApproved(tokenid);\n\n\t\t// fetch records and fill metadata and articles\n\t\tdeed.metadata = {};\n\t\tdeed.articles = [];\n\t\tdeed.clauses = [];\n\n\t\tvar stringrecords = await erc721token.fetchRecords(tokenid)\n\t\t.catch(err => {\n\t\t\tconsole.log('error in fetchRecords: ' + err);\n\t\t});\n\n\t\tfor (var i = 0; i < stringrecords.length; i++) {\n\t\t\ttry {\n\t\t\t\tvar clause = JSON.parse(stringrecords[i]);\n\n\t\t\t\tclause.type = 'clause';\n\n\t\t\t\tclause.currencyuuid = deed.currencyuuid;\n\t\t\t\tclause.txhash = deed.txhash + '-' + i;\n\n\t\t\t\tclause.minter = deed.minter;\n\t\t\t\tclause.tokenid = tokenid;\n\t\t\t\tclause.index = i;\n\n\n\t\t\t\tswitch(clause.subtype) {\n\t\t\t\t\tcase 'metadata':\n\t\t\t\t\t\t// overload\n\t\t\t\t\t\tObject.assign(deed.metadata, clause);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'article':\n\t\t\t\t\t\t// addition\n\t\t\t\t\t\tdeed.articles.push(clause);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdeed.clauses.push(clause);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tconsole.log('string record is mal-formed: ' + stringrecords[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn deed;\n\t}\n\n\tasync fetchDeed(sessionuuid, walletuuid, currencyuuid, minter, tokenid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n/* \t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined'); */\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n/* \t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid); */\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\t// fetch deed info\n\t\tvar deed = await this._fetchDeedInfo(currency, erc721token, tokenid);\n\n\t\t// save this deed in the local list\n\t\tawait this.saveDeed(sessionuuid, walletuuid, deed);\n\n\t\treturn deed;\n\t}\n\n\tasync fetchLastDeed(sessionuuid, walletuuid, currencyuuid, minter) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n/* \t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined'); */\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\n/* \t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid); */\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\t// fetch totalsupply\n\t\tconst totalsupply = await erc721token.getTotalSupply();\n\t\tconst lasttokenid = totalsupply - 1;\n\n\t\treturn this.fetchDeed(sessionuuid, walletuuid, currencyuuid, minter, lasttokenid);\n\t}\n\n\tasync isCardOwningDeed(sessionuuid, walletuuid, currencyuuid, carduuid, minter, deed) {\n\t\tvar owningcardinfo = await this.getDeedOwningCard(sessionuuid, walletuuid, currencyuuid, minter, deed).catch(err => {});\n\n\t\tif (!owningcardinfo)\n\t\t\treturn false;\n\n\t\tif (owningcardinfo.uuid == carduuid)\n\t\treturn true;\n\t\telse\n\t\treturn false;\n\t}\n\n\t// TODO: clean the calls to getDeedOwningCard and _getDeedOwningCard\n\tasync _getDeedOwningCard(session, wallet, currency, minter, deed) {\n\t\tvar sessionuuid = session.getSessionUUID();\n\t\tvar walletuuid = wallet.getWalletUUID();\n\t\tvar currencyuuid = currency.uuid;\n\t\tvar address = deed.owner;\n\n\t\tvar cardinfo = await this.getCurrencyCardWithAddress(sessionuuid, walletuuid, currencyuuid, address).catch(err => {});\n\n\t\tif (!cardinfo)\n\t\t\treturn;\n\n\t\treturn await wallet.getCardFromUUID(cardinfo.uuid);\n\t}\n\n\t\n\n\tasync getDeedOwningCard(sessionuuid, walletuuid, currencyuuid, minter, deed) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar mvcmodule = global.getModuleObject('mvc');\n\t\tvar _apicontrollers = this._getClientAPI();\n\t\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\n\t\tif (!wallet)\n\t\t\treturn;\n\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar address = deed.owner;\n\n\t\tvar cardinfo = await this.getCurrencyCardWithAddress(sessionuuid, walletuuid, currencyuuid, address).catch(err => {});\n\n\t\tif (!cardinfo)\n\t\t\treturn;\n\n\t\t// look if we have the private key or it's read-only\n\t\tvar _privatekey = await this.getCardPrivateKey(sessionuuid, walletuuid, cardinfo.uuid);\n\n\t\tif (_privatekey)\n\t\treturn cardinfo;\n\t}\n\n\n\tasync transferDeed(sessionuuid, walletuuid, currencyuuid, minter, deed, toaddress, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\t// get card owning this deed\n\t\tvar card = await this._getDeedOwningCard(session, wallet, currency, minter, deed);\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find minter card');\n\t\t\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\t// sender and recipient\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar from_card_scheme = card.getScheme();\n\n\t\tvar toaccount = childsession.createBlankAccountObject();\n\n\t\ttoaccount.setAddress(toaddress);\n\n\t\t// transfer\n\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\n\t\tvar ethereumtransaction = ethereumnodeaccessmodule.getEthereumTransactionObject(childsession, fromaccount);\n\t\t\n\t\t// fee\n\t\tvar fee = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\n\t\tethereumtransaction.setGas(fee.gaslimit);\n\t\tethereumtransaction.setGasPrice(fee.gasPrice);\n\n\t\tvar tokenid = deed.tokenid;\n\t\t\n\t\t// TODO: uncomment for @p2pmoney-org/ethereum_erc721 > 0.20.16\n\t\t//var _Buffer = this._getBufferClass();\n\t\t//var deed_data_str = (deed.data ? JSON.stringify(deed.data) : '{}');\n\t\t//var deed_data_buf = _Buffer.from(deed_data_str, 'utf8'); // not used while using @p2pmoney-org/ethereum_core ver 0.20.10\n\n\t\t//var txhhash = await erc721token.safeTransferFrom(fromaccount, toaccount, tokenid, deed_data_buf, ethereumtransaction);\n\n\t\tvar txhhash = await erc721token.transferFrom(fromaccount, toaccount, tokenid, ethereumtransaction);\n\t\n\t\treturn txhhash;\n\t}\n\n\n\n\tasync registerClause(sessionuuid, walletuuid, currencyuuid, minter, deed, clause, feelevel = null) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tif (!walletuuid)\n\t\t\treturn Promise.reject('wallet uuid is undefined');\n\t\t\n\t\tif (!currencyuuid)\n\t\t\treturn Promise.reject('currency uuid is undefined');\n\t\t\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid);\n\t\t\n\t\tif (!wallet)\n\t\t\treturn Promise.reject('could not find wallet ' + walletuuid);\n\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\t\n\t\tvar card;\n\t\tif (deed.owner) {\n\t\t\t// clause can be added by a subsequent owner different from the creator\n\t\t\tcard = await this._getDeedOwningCard(session, wallet, currency, minter, deed);\n\t\t}\n\t\telse {\n\t\t\t// we are creating the deed and probably adding the first metadata clause\n\t\t\tcard = await this._getMinterCard(session, wallet, currency, minter);\n\t\t}\n\n\t\tif (!card)\n\t\t\treturn Promise.reject('could not find minter card');\n\t\n\t\t// get proper session to access erc21token for currency\n\t\tvar childsession = await this._getMonitoredERC721TokenSession(session, wallet, currency);\n\t\n\t\t// get contract\n\t\tvar erc721token = await this._getERC721TokenObject(childsession, currency, minter);\n\n\t\tvar tokenid = deed.tokenid;\n\n\t\tvar contentstring = JSON.stringify(clause);\n\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\n\t\tvar fromaccount = card._getSessionAccountObject();\n\t\tvar from_card_scheme = card.getScheme();\n\n\t\tvar ethereumtransaction = ethereumnodeaccessmodule.getEthereumTransactionObject(childsession, fromaccount);\n\t\t\n\t\t// fee\n\t\tvar fee = await _apicontrollers.createSchemeFee(from_card_scheme, feelevel);\n\n\t\tethereumtransaction.setGas(fee.gaslimit);\n\t\tethereumtransaction.setGasPrice(fee.gasPrice);\n\n\t\tconst txhash = await erc721token.registerRecord(tokenid, contentstring, ethereumtransaction);\n\n\t\treturn txhash;\n\t}\n\t\n\n\t\n\t//\n\t// Quotes\n\t//\n\n\tasync readQuotes(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'quotes']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'quotes']; \n\t\t\t// shared keys, also we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\n\t\t//let quote_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tlet quote_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!quote_list)\n\t\t\tquote_list = [];\n\n\t\treturn quote_list;\n\t}\n\n\tasync fetchQuotes(sessionuuid, walletuuid, currencyuuid, vendor_address) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\n\t\t// use explorer to fetch transactions for vendor's address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, vendor_address);\n\n\t\t// we filter quotes\n\t\tvar quotelist = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tif ((dataobject.type == 'quote') && (dataobject.owner == vendor_address)) {\n\t\t\t\t//await this.saveQuote(sessionuuid, null, dataobject);\n\n\t\t\t\tquotelist.push(dataobject);\n\t\t\t}\n\t\t}\n\n\t\treturn quotelist;\n\t}\n\n\tasync saveQuote(sessionuuid, walletuuid, quote) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar quote_list = await this.readQuotes(sessionuuid, walletuuid);\n\n\t\t// look not in list\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < quote_list.length; i++) {\n\t\t\tif (quote_list[i].txhash == quote.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\t\t// quote parameters to be saved\n\t\t\tvar {txhash, blocknumber, currencyuuid, owner, title, amount, currency} = quote;\n\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'quotes']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'quotes']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\t\t\t\n\t\t\t}\n\t\t\n\t\t\tvar localjson = {txhash, blocknumber, currencyuuid, owner, title, amount, currency};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\tquote_list.push(localjson);\n\t\n\t\t\t//return _apicontrollers.saveLocalJson(session, keys, quote_list);\n\t\t\treturn this._saveClientSideJson(session, keys, quote_list);\n\t\t}\n\t\telse {\n\t\t\treturn quote_list;\n\t\t}\n\t}\n\n\tasync readOrders(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'orders']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'orders']; \n\t\t\t// shared keys, otherwise we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\t\n\t\t//let order_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tlet order_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!order_list)\n\t\torder_list = [];\n\n\t\treturn order_list;\n\t}\n\n\tasync fetchOrders(sessionuuid, walletuuid, currencyuuid, quotehash) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\t\t// read quote\n\t\tvar quote = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, quotehash);\n\t\tvar vendor_address = quote.owner;\n\n\t\t// use explorer to fetch transactions for vendor's address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, vendor_address);\n\n\t\t// we filter orders\n\t\tvar orderlist = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tif ((dataobject.type == 'order') && (dataobject.quote == quotehash)) {\n\t\t\t\t//await this.saveOrder(sessionuuid, null, dataobject);\n\n\t\t\t\torderlist.push(dataobject);\n\t\t\t}\n\t\t}\n\n\t\treturn orderlist;\n\t}\n\n\tasync scanNextBlockForOrders(sessionuuid, walletuuid, currencyuuid, quotehash, blockshift) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\t\t\n\t\t\n\t\tvar keys = ['myquote', 'scan', 'orders', quotehash]; \n\n\t\t//let scan = await _apicontrollers.getLocalJsonLeaf(session, keys);\n\t\tlet scan = await this._readClientSideJson(session, keys);\n\n\t\tif (!scan)\n\t\t\tscan = {};\n\t\t\t\n\t\tvar quote = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, quotehash);\n\t\tvar new_orders = [];\n\n\t\t// get a childsession on currency pretrade web3provider\n\t\tvar pretradeweb3rurl = await this.getPretradeWeb3Url(sessionuuid, currencyuuid);\n\t\tvar childsession = await this._getChildSessionOnWeb3Url(session, pretradeweb3rurl);\n\n\t\t// scan\n\t\tconst current_blocknumber = await _apicontrollers.readCurrentBlockNumber(childsession)\n\n\t\tvar start_block_number = (scan.last_block_number ? scan.last_block_number : quote.blocknumber) + 1;\n\t\tvar last_block_number = (start_block_number + blockshift <  current_blocknumber ? start_block_number + blockshift : current_blocknumber );\n\n\t\tvar ordernum = (scan.ordernum ? scan.ordernum : 0);\n\n\t\t// read transactions for each block\n\t\tvar ethereumnodeaccessmodule = global.getModuleObject('ethereum-node-access');\n\t\tvar ethereumnodeaccessinstance = ethereumnodeaccessmodule.getEthereumNodeAccessInstance(childsession)\n\t\t// TODO: could be better to use\n\t\t// var ethereumnodeaccessinstance = _apicontrollers.getEthereumNodeAccessInstance(childsession);\n\n\t\tfor (var blocknumber = start_block_number; blocknumber < last_block_number + 1; blocknumber++) {\n\t\t\t//console.log('reading block ' + blocknumber);\n\t\t\t//var transactions = await _apicontrollers.readBlockTransactions(childsession, blocknumber);\n \t\t\tvar block = await new Promise((resolve, reject) => {\n\t\t\t\tethereumnodeaccessinstance.web3_getBlock(blocknumber, true,  (err, res) => {if (err) reject(err); else resolve(res);});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in scanNextBlockForOrders: ' + err);\n\t\t\t});\n\t\t\tvar transactions = block.transactions;\n \n\t\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\t\tvar tx = transactions[i];\n\n\t\t\t\t// fake ethchainreader\n\t\t\t\ttx.input_decoded_utf8 = ethereumnodeaccessmodule.web3ToUTF8(childsession, tx.input);\n\t\t\t\ttx.block = {}\n\t\t\t\ttx.block.blocknumber = tx.blockNumber;\n\t\t\t\ttx.block.timestamp = tx.timeStamp;\n\n\t\t\t\tvar dataobject = {};\n\n\t\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\t\tconsole.log('found one transaction at ' + blocknumber);\n\n\t\t\t\tif (dataobject.type == 'order') {\n\t\t\t\t\tawait this.saveOrder(sessionuuid, null, dataobject);\n\n\t\t\t\t\tnew_orders.push(dataobject);\n\n\t\t\t\t\tordernum++\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// save where we are\n\t\tscan.last_block_number = last_block_number;\n\t\tscan.ordernum = ordernum;\n\n\t\t//await _apicontrollers.saveLocalJson(session, keys, scan);\n\t\tawait this._saveClientSideJson(session, keys, scan);\n\n\t\treturn new_orders;\n\t}\n\n\tasync saveOrder(sessionuuid, walletuuid, order) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\n\t\tvar order_list = await this.readOrders(sessionuuid, walletuuid);\n\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < order_list.length; i++) {\n\t\t\tif (order_list[i].txhash == order.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\n\t\t\t// order parameters\n\t\t\tlet {txhash, blocknumber, currencyuuid, owner, quote, amount, currency, hadfunds} = order;\n\n\t\t\t// read quote to get title\n\t\t\tvar pretradescheme_info = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\n\t\t\tlet quoteobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, quote)\n\t\t\t.catch(err => {});\n\t\t\t\n\t\t\tlet title = (quoteobject ? quoteobject.title : null);\n\t\t\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'orders']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'orders']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\n\t\t\t}\n\t\n\t\t\tlet localjson = {txhash, blocknumber, currencyuuid, owner, quote, title, amount, currency, hadfunds};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\torder_list.push(localjson);\n\n\t\t\t//return _apicontrollers.saveLocalJson(session, keys, order_list);\n\t\t\treturn this._saveClientSideJson(session, keys, order_list);\n\t\t}\n\t\telse {\n\t\t\treturn order_list;\n\t\t}\n\t}\n\n\tasync readInvoices(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'invoices']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'invoices']; \n\t\t\t// shared keys, otherwise we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\t\n\t\t//let invoice_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tlet invoice_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!invoice_list)\n\t\tinvoice_list = [];\n\n\t\treturn invoice_list;\n\t}\n\n\tasync fetchInvoices(sessionuuid, walletuuid, currencyuuid, orderhash) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\t\t// read order\n\t\tvar order = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, orderhash);\n\t\tvar buyer_address = order.owner;\n\n\t\t// use explorer to fetch transactions for buyer's address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, buyer_address);\n\n\t\t// we filter invoices\n\t\tvar invoicelist = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tif ((dataobject.type == 'invoice') && (dataobject.order == orderhash)) {\n\t\t\t\t//await this.saveInvoice(sessionuuid, null, dataobject);\n\n\t\t\t\tinvoicelist.push(dataobject);\n\t\t\t}\n\t\t}\n\n\t\treturn invoicelist;\n\t}\n\n\tasync saveInvoice(sessionuuid, walletuuid, invoice) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\n\t\tvar invoice_list = await this.readInvoices(sessionuuid, walletuuid);\n\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < invoice_list.length; i++) {\n\t\t\tif (invoice_list[i].txhash == invoice.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\n\t\t\t// invoice parameters\n\t\t\tlet {txhash, blocknumber, currencyuuid, owner, order, amount, currency} = invoice;\n\n\t\t\t// read order and quote to get title\n\t\t\tvar pretradescheme_info = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\n\t\t\tlet orderobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, order)\n\t\t\t.catch(err => {});\n\n\t\t\tlet quoteobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, orderobject.quote)\n\t\t\t.catch(err => {});\n\t\t\t\n\t\t\tlet title = (quoteobject ? quoteobject.title : null);\n\t\t\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'invoices']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'invoices']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\n\t\t\t}\n\t\n\t\t\tlet localjson = {txhash, blocknumber, currencyuuid, owner, order, title, amount, currency};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\tinvoice_list.push(localjson);\n\n\t\t\t//return _apicontrollers.saveLocalJson(session, keys, invoice_list);\n\t\t\treturn this._saveClientSideJson(session, keys, invoice_list);\n\t\t}\n\t\telse {\n\t\t\treturn invoice_list;\n\t\t}\n\t}\n\t\n\tasync readPaymentNotices(sessionuuid, walletuuid) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tif (!walletuuid) {\n\t\t\tvar keys = ['myquote', 'paymentnotices']; \n\t\t\t// shared keys\n\t\t}\n\t\telse {\n\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\tvar keys = ['myquote', 'paymentnotices']; \n\t\t\t// shared keys, otherwise we could look in wallet\n\t\t\t// with mvcmodule.getFromWallet\n\t\t}\n\t\t\n\t\t//let paymentnotice_list = await _apicontrollers.getLocalJsonLeaf(session, keys, true);\n\t\tlet paymentnotice_list = await this._readClientSideJson(session, keys);\n\n\t\tif (!paymentnotice_list)\n\t\tpaymentnotice_list = [];\n\n\t\treturn paymentnotice_list;\n\t}\n\n\tasync fetchPaymentNotices(sessionuuid, walletuuid, currencyuuid, invoicehash) {\n\t\tif (!sessionuuid)\n\t\t\treturn Promise.reject('session uuid is undefined');\n\t\t\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\tif (!session)\n\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\n\t\tvar wallet = await _apicontrollers.getWalletFromUUID(session, walletuuid).catch(err => {});\n\t\t\t\n\t\tvar currency = await this.getCurrencyFromUUID(sessionuuid, currencyuuid);\n\t\n\t\tif (!currency)\n\t\t\treturn Promise.reject('could not find currency ' + currencyuuid);\n\n\t\tif (!currency.pretrade_explorer_url)\n\t\t\treturn Promise.reject('no explorer for currency ' + currencyuuid);\n\n\t\t// read invoice\n\t\tvar invoice = await this.fetchCurrencyTransaction(sessionuuid, walletuuid, currencyuuid, invoicehash);\n\t\tvar vendor_address = invoice.owner;\n\n\t\t// use explorer to fetch transactions for vendor's address\n\t\tvar transactions = await this._getAddressPretradeTransactions(session, wallet, currency, vendor_address);\n\n\t\t// we filter payment notices\n\t\tvar paymentnoticelist = [];\n\t\t\n\t\tfor (var i = 0; i < (transactions ? transactions.length : 0); i++) {\n\t\t\tvar tx = transactions[i];\n\n\t\t\tvar dataobject = {};\n\n\t\t\tthis._fillTransactionDataObject(dataobject, tx);\n\n\t\t\tif ((dataobject.type == 'paymentnotice') && (dataobject.invoice == invoicehash)) {\n\t\t\t\t//await this.savePaymentNotice(sessionuuid, null, dataobject);\n\n\t\t\t\tpaymentnoticelist.push(dataobject);\n\t\t\t}\n\t\t}\n\n\t\treturn paymentnoticelist;\n\t}\n\n\tasync savePaymentNotice(sessionuuid, walletuuid, paymentnotice) {\n\t\tvar global = this.global;\n\t\tvar _apicontrollers = this._getClientAPI();\n\n\n\t\tvar paymentnotice_list = await this.readPaymentNotices(sessionuuid, walletuuid);\n\n\t\tvar bInList = false;\n\n\t\tfor (var i = 0; i < paymentnotice_list.length; i++) {\n\t\t\tif (paymentnotice_list[i].txhash == paymentnotice.txhash) {\n\t\t\t\tbInList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!bInList) {\n\t\t\tvar session = await _apicontrollers.getSessionObject(sessionuuid);\n\t\t\n\t\t\tif (!session)\n\t\t\t\treturn Promise.reject('could not find session ' + sessionuuid);\n\t\n\t\t\t// paymentnotice parameters\n\t\t\tlet {txhash, blocknumber, currencyuuid, owner, invoice, amount, currency} = paymentnotice;\n\n\t\t\t// read invoice, order and quote to get title\n\t\t\tvar pretradescheme_info = await this.getPretradeSchemeInfo(sessionuuid, currencyuuid);\n\n\t\t\tlet invoiceobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, invoice)\n\t\t\t.catch(err => {});\n\n\t\t\tlet orderobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, invoiceobject.order)\n\t\t\t.catch(err => {});\n\n\t\t\tlet quoteobject = await this.fetchTransaction(sessionuuid, walletuuid, pretradescheme_info.uuid, orderobject.quote)\n\t\t\t.catch(err => {});\n\t\t\t\n\t\t\tlet title = (quoteobject ? quoteobject.title : null);\n\t\t\t\n\t\t\tif (!walletuuid) {\n\t\t\t\tvar keys = ['myquote', 'paymentnotices']; \n\t\t\t\t// shared keys\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('WARNING: walletuuid specific case not implemented!!!');\n\t\t\t\tvar keys = ['myquote', 'paymentnotices']; \n\t\t\t\t// shared keys, also we could put in wallet\n\t\t\t\t// with mvcmodule.putInWallet\n\t\t\t}\n\t\n\t\t\tlet localjson = {txhash, blocknumber, currencyuuid, owner, invoice, title, amount, currency};\n\n\t\t\tlocaljson.savetime = Date.now();\n\n\t\t\tpaymentnotice_list.push(localjson);\n\n\t\t\t//return _apicontrollers.saveLocalJson(session, keys, paymentnotice_list);\n\t\t\treturn this._saveClientSideJson(session, keys, paymentnotice_list);\n\t\t}\n\t\telse {\n\t\t\treturn paymentnotice_list;\n\t\t}\n\t}\n\t\n\tasync _saveTransactionObject(sessionuuid, walletuuid, tx) {\n\t\tif (!tx)\n\t\t\treturn;\n\n\t\tswitch (tx.type) {\n\t\t\tcase 'bounty':\n\t\t\t\treturn this.saveBounty(sessionuuid, walletuuid, tx);\n\n\t\t\tcase 'claim':\n\t\t\t\treturn this.saveClaim(sessionuuid, walletuuid, tx);\n\n\t\t\tcase 'quote':\n\t\t\t\treturn this.saveQuote(sessionuuid, walletuuid, tx);\n\n\t\t\tcase 'order':\n\t\t\t\treturn this.saveOrder(sessionuuid, walletuuid, tx);\n\n\t\t\tcase 'invoice':\n\t\t\t\treturn this.saveInvoice(sessionuuid, walletuuid, tx);\n\n\t\t\tcase 'paymentnotice':\n\t\t\t\treturn this.savePaymentNotice(sessionuuid, walletuuid, tx);\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t//\n\t// uniswap\n\t//\n\n\tasync getPriceForCreditUnits(sessionuuid, currencyuuid, creditunits) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getPriceForCreditUnits(sessionuuid, currencyuuid, creditunits);\n\t}\n\n\tasync buyCreditUnits(sessionuuid, walletuuid, carduuid, currencyuuid, creditunits, feelevel = null) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.buyCreditUnits(sessionuuid, walletuuid, carduuid, currencyuuid, creditunits, feelevel);\n\t}\n\n\t//\n\t// utils\n\t//\n\n\n\tasync getDecimalAmount(sessionuuid, amount, decimals = 18) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getDecimalAmount(sessionuuid, amount, decimals);\n\t}\n\n\tasync getCurrencyAmount(sessionuuid, currencyuuid, amount) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.getCurrencyAmount(sessionuuid, currencyuuid, amount);\n\t}\n\t\n\tasync formatCurrencyAmount(sessionuuid, currencyuuid, currencyamount, options) {\n\t\tvar global = this.global;\n\t\t\n\t\tvar mvccurrencies = global.getModuleObject('mvc-currencies');\n\n\t\treturn mvccurrencies.formatCurrencyAmount(sessionuuid, currencyuuid, currencyamount, options);\n\t}\n\n\tformatDate(unixdate, format) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.formatDate(unixdate, format);\n\t}\n\t\n\tfitString(str, maxlength) {\n\t\tvar global = this.global;\n\t\tvar mvcclientwalletmodule = global.getModuleObject('mvc-client-wallet');\n\t\treturn mvcclientwalletmodule.fitString(str, maxlength);\n\t}\n\n\n}\n\nif ( (typeof GlobalClass === 'undefined') || (!GlobalClass)) {\n\tvar GlobalClass = ((typeof window !== 'undefined') && window && window.simplestore && window.simplestore.Global ? window.simplestore.Global : null);\n}\n\nif ( typeof GlobalClass !== 'undefined' && GlobalClass ) {\n\tGlobalClass.getGlobalObject().registerModuleObject(new Module());\n\n\t//dependencies\n\tGlobalClass.getGlobalObject().registerModuleDepency('mvc-myquote', 'common');\n\tGlobalClass.getGlobalObject().registerModuleDepency('mvc-myquote', 'mvc');\n\n\t// module classes\t\n\t//GlobalClass.registerModuleClass('mvc-myquote', 'DecimalAmount', DecimalAmount);\n\t//GlobalClass.registerModuleClass('mvc-myquote', 'CurrencyAmount', CurrencyAmount);\n}\n\n\n"],"mappings":"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"}