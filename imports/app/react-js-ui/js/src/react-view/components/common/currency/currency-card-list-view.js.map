{"version":3,"file":"currency-card-list-view.js","names":["CurrencyCardListView","props","app","getMvcModuleObject","getMvcMyQuoteObject","uuid","guid","closing","cards","state","currencies","items","currency","signingkey","isaprivatekey","setState","prevProps","prevState","console","log","mvcmyquote","rootsessionuuid","walletuuid","currentwalletuuid","isValidPrivateKey","then","_setState","err","registerEventListener","onRefreshPage","bind","checkNavigationState","_readVisibleCurrencies","Promise","reject","i","length","getCurrencyCardList","_currencycards","j","currencyuuid","comp_key","getCardPrivateKey","_privkey","cansign","getCurrencyPosition","pos","undefined","toInteger","balance_int","formatCurrencyAmount","balance_string","concat","push","_filterCards","getCurrencies","arr","hidden","app_nav_state","getNavigationState","app_nav_target","target","checkWalletUnlocked","unlocked","openDeviceWallet","devicewallet","isdevicewallet","params","gotoRoute","route","reached","getCurrencyFromUUID","_readCards","unregisterEventListener","closeDeviceWallet","currentcard","generatePrivateKey","privatekey","options","allow_readonly","createCurrencyCard","alert","card","refreshPage","_selectCurrency","item","carduuid","description","name","e","onSelectCurrency","map","index","symbol","value","faUserLock","onGenerateCard","onAddCard","address","fitString","currencysymbol","maincard","xtra_data","myquote","onClickItem","faKey","faGlasses","faStar","renderItem","renderCurrencyForm","renderList","React","Component","propTypes","PropTypes","object","isRequired","string","mapStateToProps","session","sessionuuid","pending","login","success","lasterror","error","wallets","mapDispatchToProps","dispatch","connect"],"sources":["../../../../../../../../../../../../imports/app/react-js-ui/js/src/react-view/components/common/currency/currency-card-list-view.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Dropdown, DropdownButton, FormGroup, FormControl, FormLabel, InputGroup, Table } from 'react-bootstrap';\n\n\nimport PropTypes from 'prop-types';\n\nimport { faKey, faGlasses, faStar, faUserLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\n\nclass CurrencyCardListView extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.app = this.props.app;\n\t\tthis.getMvcModuleObject = this.app.getMvcModuleObject;\n\t\tthis.getMvcMyQuoteObject = this.app.getMvcMyQuoteObject;\n\n\t\tthis.uuid = this.app.guid();\n\n\t\tthis.closing = false;\n\n\t\tthis.cards = [];\n\t\t\n\t\tthis.state = {\n\t\t\tcurrencies: [],\n\t\t\titems: [],\n\t\t\tcurrency: null,\n\t\t\tsigningkey: null,\n\t\t\tisaprivatekey: false,\n\t\t}\n\t}\n\n\t_setState(state) {\n\t\tif (this.closing !== true)\n\t\tthis.setState(state);\n\t}\n\n\t\n\t// post render commit phase\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log('CurrencyCardListView.componentDidUpdate called');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\t\t\n\t\t// entered a private key\n\t\tif (this.state.signingkey != prevState.signingkey) {\n\t\t\tmvcmyquote.isValidPrivateKey(rootsessionuuid, this.state.signingkey)\t\t\t\t\n\t\t\t.then((isaprivatekey) => {\n\t\t\t\tthis._setState({isaprivatekey});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t});\n\n\t\t}\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconsole.log('CurrencyCardListView.componentDidMount called');\n\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\t\n\t\tmvcmyquote.registerEventListener('on_refreshPage', this.uuid, this.onRefreshPage.bind(this));\n\n\t\tthis.checkNavigationState().catch(err => {console.log('error in CurrencyCardListView.checkNavigationState: ' + err);});\n\t}\n\n\tasync _readCards() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet currencies = await this._readVisibleCurrencies();\n\n\t\tif (!currencies)\n\t\t\treturn Promise.reject('could not get list of currencies');\n\n\t\tvar cards = [];\n\n\t\tfor (var i = 0; i < currencies.length; i++) {\n\t\t\tlet currency = currencies[i];\n\n\t\t\tlet _currencycards = await mvcmyquote.getCurrencyCardList(rootsessionuuid, walletuuid, currency.uuid)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in CurrencyCardListView._readCards: ' + err);\n\t\t\t});\n\n\t\t\tif (!_currencycards) continue;\n\n\t\t\t// enrich items\n\t\t\tfor (var j = 0; j < _currencycards.length; j++) {\n\t\t\n\t\t\t\t_currencycards[j].currency = currency;\n\t\t\t\t_currencycards[j].currencyuuid = currency.uuid;\n\n\t\t\t\t// composite key for list\n\t\t\t\t_currencycards[j].comp_key = _currencycards[j].uuid + '|' + _currencycards[j].currencyuuid\n\n\t\t\t\tvar _privkey = await mvcmyquote.getCardPrivateKey(rootsessionuuid, walletuuid, _currencycards[j].uuid).catch(err => {});\n\t\t\t\t_currencycards[j].cansign = (_privkey ? true : false);\n\n\t\t\t\tlet pos = await mvcmyquote.getCurrencyPosition(rootsessionuuid, walletuuid, currency.uuid, _currencycards[j].uuid);\n\t\t\t\n\t\t\t\tif (pos !== undefined) {\n\t\t\t\t\t_currencycards[j].balance_int = await pos.toInteger();\n\t\t\t\t\t_currencycards[j].balance_string = await mvcmyquote.formatCurrencyAmount(rootsessionuuid, currency.uuid, pos);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// merge\n\t\t\tcards = cards.concat(_currencycards);\n\n\t\t\tif (!this.state.currency) {\n\t\t\t\t// if we are currently loading all the cards\n\t\t\t\t// update displayed list to get a progressive display\n\t\t\t\tthis._setState({items: cards});\n\t\t\t}\n\t\t}\n\n\t\treturn cards;\t\t\n\t}\n\n\tasync _filterCards(currency) {\n\t\tlet items = [];\n\t\tlet cards = this.cards;\n\n\t\tif (currency) {\n\t\t\t// filter items\n\t\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\t\tif (currency.uuid === cards[i].currencyuuid) {\n\t\t\t\t\titems.push(cards[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\titems = cards;\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tasync _selectCurrency(currencyuuid) {\n\t\tlet {currencies} = this.state;\n\t\tlet currency;\n\n\t\tfor (var i = 0; i < currencies.length; i++) {\n\t\t\tif (currencyuuid === currencies[i].uuid) {\n\t\t\t\tcurrency = currencies[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (currency) {\n\t\t\t// filter items\n\t\t\tvar items = await this._filterCards(currency);\n\n\t\t\tthis._setState({currency, items});\n\t\t}\n\t}\n\n\tasync _readVisibleCurrencies() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet currencies = await mvcmyquote.getCurrencies(rootsessionuuid, walletuuid);\n\n\t\tif (!currencies)\n\t\treturn Promise.reject('could not get list of currencies');\n\n\t\tlet arr = [];\n\n\t\tfor (var i = 0; i < currencies.length; i++) {\n\t\t\tif (currencies[i].hidden && (currencies[i].hidden == true))\n\t\t\tcontinue;\n\n\t\t\tarr.push(currencies[i]);\n\t\t}\n\n\t\treturn arr;\n\t}\n\n\tasync checkNavigationState() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\ttry {\n\t\t\t// check if navigation asks for a specific currency\n\t\t\tlet app_nav_state = this.app.getNavigationState();\n\t\t\tlet app_nav_target = app_nav_state.target;\n\n\t\t\t// check wallet is unlocked\n\t\t\tlet unlocked = await this.app.checkWalletUnlocked()\n\t\t\t.catch(err => {\n\t\t\t});\n\t\n\t\t\tif (!unlocked) {\n\t\t\t\tif (!this.closing) {\n\t\t\t\t\t// we open the default device wallet\n\t\t\t\t\tlet devicewallet = await this.app.openDeviceWallet()\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t});\n\t\t\n\t\t\t\t\twalletuuid = devicewallet.uuid;\n\t\t\n\t\t\t\t\tthis._setState({isdevicewallet: true});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet params = (app_nav_target ? app_nav_target.params : null);\n\t\t\t\t\tthis.app.gotoRoute('login', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (app_nav_target && (app_nav_target.route == 'currencycards') && (app_nav_target.reached == false)) {\n\t\t\t\tvar params = app_nav_target.params;\n\n\t\t\t\tlet currencyuuid = params.currencyuuid;\n\n\n\t\t\t\tif (currencyuuid) {\n\t\t\t\t\tlet currency = await mvcmyquote.getCurrencyFromUUID(rootsessionuuid, currencyuuid);\n\t\t\t\t\t\n\t\t\t\t\tthis._setState({currency});\n\t\t\t\t}\n\n\t\t\t\t// mark target as reached\n\t\t\t\tapp_nav_target.reached = true;\n\t\t\t}\n\t\t\t\n\t\t\t\n\n\t\t\t// read all currencies\n\t\t\tlet currencies = await this._readVisibleCurrencies();\n\n\t\t\tif (!currencies)\n\t\t\t\treturn Promise.reject('could not get list of currencies');\n\n\n\t\t\t// read list of cards for all currencies\n\t\t\tthis.cards = await this._readCards();\n\t\t\tlet items = this.cards;\n\n\t\t\tthis._setState({currencies, items});\n\n\t\t\tif (this.state.currency) {\n\t\t\t\tlet items = await this._filterCards(this.state.currency);\n\n\t\t\t\tthis._setState({items});\n\t\t\t}\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in CurrencyCardListView.checkNavigationState: '+ e);\n\t\t}\n\n\n\t}\n\t\n\tasync onRefreshPage() {\n\t\tconsole.log('CurrencyCardListView.onRefreshPage called');\n\n\t\tthis.checkNavigationState().catch(err => {console.log('error in checkNavigationState: ' + err);});\n\t}\n\t\n\t// end of life\n\tcomponentWillUnmount() {\n\t\tconsole.log('CurrencyCardListView.componentWillUnmount called');\n\t\tthis.closing = true;\n\n\t\tlet app = this.app;\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\t\t\n\t\tmvcmyquote.unregisterEventListener('on_refreshPage', this.uuid);\n\t\t\n\t\tthis.app.closeDeviceWallet();\n\t}\n\n\t\n\t// user actions\n\tasync onGenerateCard() {\n\t\tconsole.log('onGenerateCard pressed!');\n\n\t\tif (this.state.currentcard)\n\t\t\treturn;\n\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\n\t\tlet privatekey = await mvcmyquote.generatePrivateKey(rootsessionuuid);\n\n\t\tthis._setState({signingkey: privatekey});\n\t}\n\n\tasync onAddCard() {\n\t\tconsole.log('onAddCard pressed!');\n\t\t\n\t\tlet {currency, signingkey} = this.state;\n\n\t\tif ( (currency) && (currency.uuid)) {\n\t\t\tlet currencyuuid = currency.uuid;\n\t\t\tlet options = {allow_readonly: false};\n\n\t\t\tlet card = await this.app.createCurrencyCard(currencyuuid, signingkey, options)\t\t\t\n\t\t\t.catch(err => {\n\t\t\t\tthis.app.alert('Could not created currency card')\n\t\t\t});\n\n\t\t\tif (card) {\n\t\t\t\tthis.app.refreshPage();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync onSelectCurrency(uuid) {\n\t\treturn this._selectCurrency(uuid);\n\t}\n\n\tasync onClickItem(item) {\n\t\tlet currencyuuid = item.currencyuuid;\n\t\tlet carduuid = item.uuid;\n\t\t/* let cardaddress = item.address;\n\n\t\tlet params = {currencyuuid, carduuid, cardaddress}; */\n\t\tlet params = {currencyuuid, carduuid};\n\n\t\tthis.app.gotoRoute('currencycard', params);\n\t}\n\n\trenderCurrencyForm() {\n\t\tlet {currency, currencies, signingkey, isaprivatekey} = this.state;\n\n\t\treturn (\t\n\t\t\t<div className=\"Form\">\n\t\t\t\t<FormGroup controlId=\"currency\">\n\t\t\t\t\t<FormLabel>Currency</FormLabel>\n\t\t\t\t\t<FormGroup controlId=\"pickccy\" className=\"PickCurrencyLine\">\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<FormControl className=\"CurrencyName\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(currency ? (currency.description ? currency.description : currency.name) : '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\t\tid=\"input-dropdown-addon\"\n\t\t\t\t\t\t\ttitle=\"Cur.\"\n\t\t\t\t\t\t\tonSelect={e => this.onSelectCurrency(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{currencies.map((item, index) => (\n\t\t\t\t\t\t\t\t<Dropdown.Item key={item.uuid} eventKey={item.uuid} value={item.uuid}>{item.symbol}</Dropdown.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</DropdownButton>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t{(currency ?\n\t\t\t\t<FormGroup controlId=\"newcurrencycard\">\n\t\t\t\t\t<FormLabel>Private Key&nbsp;{(currency && currency.name ? 'for ' + (currency.description ? currency.description : currency.name) : '')}</FormLabel>\n\t\t\t\t\t<FormGroup controlId=\"newcard\" className=\"AddCardLine\">\n\t\t\t\t\t\t<FormControl className=\"CardPrivateKeyInput\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(signingkey ? signingkey : '')}\n\t\t\t\t\t\t\tonChange={e => this._setState({signingkey: e.target.value})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"GenerateCardIcon\">\n\t\t\t\t\t\t<FontAwesomeIcon \n\t\t\t\t\t\t\ticon={faUserLock}\n\t\t\t\t\t\t\tsize=\"3x\"\n\t\t\t\t\t\t\tonClick={this.onGenerateCard.bind(this)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"AddCardButton\">\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tdisabled={(isaprivatekey ? false : true)}\n\t\t\t\t\t\t\tonClick={this.onAddCard.bind(this)} \n\t\t\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup> :\n\t\t\t\t<></>)}\n\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderItem(item){\n\t\tlet mvcmyquote = this.app.getMvcMyQuoteObject();\n\n\t\tlet uuid = item.uuid;\n\t\tlet comp_key = item.comp_key;\n\n\t\tlet address = mvcmyquote.fitString(item.address, 21);\n\t\tlet currencysymbol = item.currency.symbol;\n\t\tlet cansign = item.cansign;\n\t\tlet maincard = (item.xtra_data.myquote ? item.xtra_data.myquote.maincard : false);\n\t\tlet balance_string = item.balance_string;\n\n\t\treturn (\n\t\t\t<tr key={comp_key} onClick={() => this.onClickItem(item)}>\n\t\t\t\t<th>{address}</th>\n\t\t\t\t<th>\n\t\t\t\t\t<span className=\"CurrencyCardIcons\">\n\t\t\t\t\t{(cansign ? <FontAwesomeIcon icon={faKey} /> : <FontAwesomeIcon icon={faGlasses} />)}\n\t\t\t\t\t{(maincard ? <FontAwesomeIcon icon={faStar} /> : <></>)}\n\t\t\t\t\t</span>\n\t\t\t\t</th>\n\t\t\t\t<th>{balance_string}</th>\n\t\t\t</tr>\n\t\t);\n\t}\n\t\n\trenderList() {\n\t\tlet {items} = this.state;\n\n\t\treturn (\n\t\t\t<Table responsive>\n\t\t\t\t<thead className=\"ListHeader\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t<th>Balance</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className=\"ListItem\" >\n\t\t\t\t{items.map((item, index) => {\n\t\t\t\t\treturn (this.renderItem(item));\n\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t);\t\n\t}\n\t\n\t\n\t// rendering\n\trender() {\n\t\tlet {items} = this.state;\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Container\">\n\t\t\t\t<div className=\"Title\">List of currency cards</div>\n\t\t\t\t{this.renderCurrencyForm()}\n\t\t\t\t{this.renderList()}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\n\n// propTypes validation\nCurrencyCardListView.propTypes = {\n\tapp: PropTypes.object.isRequired,\n\trootsessionuuid: PropTypes.string,\n};\n\n//redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trootsessionuuid: state.session.sessionuuid,\n\t\tpending: state.login.pending,\n\t\tsuccess: state.login.success,\n\t\tlasterror: state.login.error,\n\t\tcurrentwalletuuid: state.wallets.walletuuid,\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t};\n}\n\n\nexport {CurrencyCardListView};\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyCardListView);\n\n"],"mappings":"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"}