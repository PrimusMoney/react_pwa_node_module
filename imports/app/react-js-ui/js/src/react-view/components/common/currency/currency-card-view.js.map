{"version":3,"file":"currency-card-view.js","names":["CurrencyCardView","props","app","getMvcModuleObject","getMvcMyQuoteObject","uuid","guid","callparams","card","currency","currencycards","checking","closing","state","creditbalance","position","position_int","position_string","address_string","privatekey_string","web3providerurl_string","message_text","to_address","transfer_amount","credit_amount","need_credit_units","credit_units_requested","priceinfo","sourcecard","return_url","callback_url","processinginfo","processing","setState","mvcmyquote","rootsessionuuid","walletuuid","currentwalletuuid","Promise","reject","cards","getCurrencyCardList","_currencycards","j","length","currencyuuid","getCardPrivateKey","err","_privkey","cansign","getCurrencyPosition","pos","undefined","toInteger","balance_int","formatCurrencyAmount","balance_string","getCreditBalance","credits","items","i","credit_balance","transactionunits","credit_threshold","threshold","push","parseInt","_getCreditsUnitsRequested","price_struct","currencyamount","currency_amount","toDecoratedString","currencyamount_string","t","prevProps","prevState","console","log","proper_int_string","String","Math","floor","Number","_setState","ops","cantxfree","cantopup","canswap","getPriceForCreditUnits","_getCreditsUnitsToBuy","then","_getPriceInfo","registerEventListener","onRefreshPage","bind","checkNavigationState","app_nav_state","getNavigationState","app_nav_target","target","checkWalletUnlocked","unlocked","checkOnline","online","params","gotoRoute","openDeviceWallet","devicewallet","isdevicewallet","isDeviceWallet","route","reached","web3_provider_url","web3url","decodebase64","tokenaddress","carduuid","cardaddress","to","amount","ring","getCurrencyFromUUID","options","findLocalSchemeInfoFromWeb3Url","scheme","getAllCurrenciesWithAddress","_existing_currencies","scheme_uuid","address","canpay","description","provider","xtra_data","origin","synchronizeCurrency","_currency_description","name","setCurrencyDescription","alert","getWalletCard","getCurrencyCard","maincurrencycard","getCurrencyCardWithAddress","canPayAmount","getTokenCardList","_card","_canpay","findCardCurrency","_currency","getSchemeInfo","schemeuuid","getSchemeTransactionUnitsThreshold","privatekey","web3providerurl","network","ethnodeserver","fitString","can_buy_credit_units","_readCurrencyCards","_filterCreditPositiveCards","positivecards","tx_fee","transferred_credit_units","transfer_cost_units","uniswap_v2","swap_max_cost_units","estimated_cost_units","getRecommendedFeeLevel","feelevel","canCompleteTransaction","decimals","getDecimalAmount","decimalamount","toFixedString","decimalamount_string","returnurl","callbackurl","currentcard","setCurrencyCard","maincardswitchedat","Date","now","action","unregisterEventListener","closeDeviceWallet","isValidAddress","validaddress","getCurrencyAmount","tokenamount","tokenamount_int","_feelevel","canspend","estimated_fee","execution_credits","max_credits","execution_units","required_units","payAmount","txhash_payment","turn_off_processing","_url","includes","resolve","xhttp","XMLHttpRequest","open","send","onload","e","status","res","JSON","parse","responseText","onerror","statusText","_keys","Object","keys","toLowerCase","endsWith","gotoUrl","refreshPage","credit_units_tobuy","buyCreditUnits","txhash","transferTransactionUnits","units_txhash","error","getCardInfoFromAddressOnScheme","tocard","sendTransactionUnits","credit_units_requested_disabled","value","onBuyCredits","can_pick_credit_units","pick_credit_units_disabled","signingkey","onSelectSourceCard","map","item","index","onPickCreditsFrom","transfer_disabled","onReturn","onTransfer","onMoveCredits","renderPickCreditsFromPart","renderBuyMoreCreditsPart","renderTransferToPart","renderMoveCreditsToPart","maincard","myquote","faStarSolid","faStarEmpty","onMainCardSwitch","onBack","faUndo","renderCurrencyCardView","renderTransactionPart","React","Component","propTypes","PropTypes","object","isRequired","string","iswalletlocked","bool","mapStateToProps","session","sessionuuid","pending","login","success","lasterror","wallets","islocked","mapDispatchToProps","dispatch","connect"],"sources":["../../../../../../../../../../../../imports/app/react-js-ui/js/src/react-view/components/common/currency/currency-card-view.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Dropdown, DropdownButton, FormGroup, FormControl, FormLabel, InputGroup } from 'react-bootstrap';\n\nimport PropTypes from 'prop-types';\n\nimport { faStar as faStarEmpty } from \"@fortawesome/free-regular-svg-icons\";\nimport { faStar as faStarSolid } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUndo, faUpload} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Dots } from 'react-activity';\nimport 'react-activity/dist/react-activity.css';\n\nimport TextCopyIcon from '../utils/text-copy-icon.js';\n\nclass CurrencyCardView extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.app = this.props.app;\n\t\tthis.getMvcModuleObject = this.app.getMvcModuleObject;\n\t\tthis.getMvcMyQuoteObject = this.app.getMvcMyQuoteObject;\n\t\t\n\t\tthis.uuid = this.app.guid();\n\n\t\tthis.callparams = null;\n\n\t\tthis.card = null;\n\t\tthis.currency = null;\n\n\t\tthis.currencycards = [];\n\t\t\n\t\tthis.checking = false;\n\t\tthis.closing = false;\n\n\t\tthis.state = {\n\t\t\tcreditbalance: 'loading...',\n\t\t\tposition: null,\n\t\t\tposition_int: -1,\n\t\t\tposition_string: 'loading...',\n\t\t\taddress_string: 'loading...',\n\t\t\tprivatekey_string: 'loading...',\n\t\t\tweb3providerurl_string: 'loading...',\n\t\t\tmessage_text: 'loading...',\n\n\t\t\tto_address: '',\n\t\t\ttransfer_amount: 0,\n\t\t\tcredit_amount: 0,\n\n\t\t\tneed_credit_units: false,\n\t\t\tcredit_units_requested: 0,\n\n\t\t\tpriceinfo: '',\n\t\t\tsourcecard: null,\n\n\t\t\treturn_url: null,\n\t\t\tcallback_url: null,\n\n\t\t\tprocessinginfo: 'processing transfer',\n\t\t\tprocessing: false\n\t\t};\n\t}\n\n\n\t_setState(state) {\n\t\tif (this.closing !== true)\n\t\tthis.setState(state);\n\t}\n\n\tasync _readCurrencyCards() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet currency = this.currency;\n\n\t\tif (!currency)\n\t\t\treturn Promise.reject('currency is not defined');\n\n\t\tvar cards = [];\n\n\t\tlet _currencycards = await mvcmyquote.getCurrencyCardList(rootsessionuuid, walletuuid, currency.uuid);\n\n\t\t// enrich items\n\t\tfor (var j = 0; j < _currencycards.length; j++) {\n\t\n\t\t\t_currencycards[j].currency = currency;\n\t\t\t_currencycards[j].currencyuuid = currency.uuid;\n\n\t\t\tvar _privkey = await mvcmyquote.getCardPrivateKey(rootsessionuuid, walletuuid, _currencycards[j].uuid).catch(err => {});\n\t\t\t_currencycards[j].cansign = (_privkey ? true : false);\n\n\t\t\tlet pos = await mvcmyquote.getCurrencyPosition(rootsessionuuid, walletuuid, currency.uuid, _currencycards[j].uuid);\n\t\t\n\t\t\tif (pos !== undefined) {\n\t\t\t\t_currencycards[j].balance_int = await pos.toInteger();\n\t\t\t\t_currencycards[j].balance_string = await mvcmyquote.formatCurrencyAmount(rootsessionuuid, currency.uuid, pos);\n\t\t\t}\n\n\t\t\tlet credits = await mvcmyquote.getCreditBalance(rootsessionuuid, walletuuid, _currencycards[j].uuid);\n\t\t\t\n\t\t\t_currencycards[j].credits = credits;\n\t\t}\n\n\t\tcards = _currencycards;\n\n\t\treturn cards;\t\t\n\t}\n\t\n\tasync _filterCreditPositiveCards() {\n\t\tlet items = [];\n\t\tlet cards = this.currencycards;\n\n\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\tif (cards[i].cansign !== true)\n\t\t\t\tcontinue;\n\n\t\t\tlet credit_balance = (cards[i].credits ? cards[i].credits.transactionunits : 0);\n\t\t\tlet credit_threshold = (cards[i].credits ?  cards[i].credits.threshold : 0);\n\n\t\t\tif (credit_balance > credit_threshold) {\n\t\t\t\titems.push(cards[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\t\n\t// post render commit phase\n\t_getCreditsUnitsRequested(credit_units_requested) {\n\t\treturn parseInt((credit_units_requested > 0 ? credit_units_requested : 10));\n\t}\n\n\t_getCreditsUnitsToBuy(credit_units_requested) {\n\t\treturn this._getCreditsUnitsRequested(credit_units_requested) + 3;\n\t}\n\n\tasync _getPriceInfo(price_struct) {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\n\t\tlet currency = this.currency;\n\t\tlet currencyuuid = currency.uuid;\n\n\t\tlet currencyamount = price_struct.currency_amount\n\t\tlet currencyamount_string = await currencyamount.toDecoratedString();\n\n\t\tlet priceinfo = price_struct.credit_units_requested + ' ' + mvcmyquote.t('transaction units will cost you approximately') + ' ' + currencyamount_string;\n\t\t\n\t\treturn priceinfo;\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.log('CurrencyCardView.componentDidUpdate called');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\t// entered a new address\n\t\tif (this.state.to_address != prevState.to_address) {\n\t\t}\n\n\n\t\t// entered a new credit units\n\t\tif (this.state.credit_units_requested != prevState.credit_units_requested) {\n\t\t\t// check it's a proper positive integer\n\t\t\tlet proper_int_string = String(Math.floor(Number(this.state.credit_units_requested)));\n\t\t\t\n\t\t\tif (proper_int_string != String(this.state.credit_units_requested)) {\n\t\t\t\tthis._setState({credit_units_requested: proper_int_string});\n\t\t\t}\n\n\t\t\t// update price info\n\t\t\tlet currency = this.currency;\n\t\t\tlet currencyuuid = currency.uuid;\n\t\t\tlet credit_units_requested = this.state.credit_units_requested;\n\t\t\tlet priceinfo = '';;\n\n\t\t\tif (currency && currency.ops && (currency.ops.cantxfree !== true) && (currency.ops.cantopup !== true) && (currency.ops.canswap === true)) {\n\t\t\t\t// check price to buy requested amount of credit units\n\t\t\t\tmvcmyquote.getPriceForCreditUnits(rootsessionuuid, currencyuuid, this._getCreditsUnitsToBuy(credit_units_requested))\n\t\t\t\t.then(price_struct => {\n\t\t\t\t\tprice_struct.credit_units_requested = this._getCreditsUnitsRequested(credit_units_requested);\n\n\t\t\t\t\treturn this._getPriceInfo(price_struct);\n\n\t\t\t\t})\n\t\t\t\t.then(priceinfo => {\n\t\t\t\t\tthis._setState({priceinfo});\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log('error in CurrencyCardView.componentDidUpdate: ' + err);\n\t\t\t\t})\n\t\t\t}\n\n\n\t\t}\n\n\t\t// entered a new token amount\n\t\tif (this.state.transfer_amount != prevState.transfer_amount) {\n\t\t\t// check it's a proper decimal\n\t\t\tlet currencyuuid = (this.currency ? this.currency.uuid : null);\n\n\t\t\tif (currencyuuid) {\n/* \t\t\t\tlet properdecimalamount;\n\t\t\t\tlet proper_decimal_string;\n\n\t\t\t\tmvcmyquote.getCurrencyAmount(rootsessionuuid, currencyuuid, this.state.transfer_amount)\n\t\t\t\t.then(currencyamount => {\n\t\t\t\t\treturn currencyamount.getDecimalAmount();\n\t\t\t\t})\n\t\t\t\t.then(decimalamount => {\n\t\t\t\t\tproperdecimalamount = decimalamount;\n\t\t\t\t\treturn decimalamount.toFixedString();\n\t\t\t\t})\n\t\t\t\t.then(decimalamountstring => {\n\t\t\t\t\tproper_decimal_string = decimalamountstring;\n\t\t\t\t\treturn mvcmyquote.getDecimalAmount(rootsessionuuid, this.state.transfer_amount);\n\t\t\t\t})\n\t\t\t\t.then(decimalamount => {\n\t\t\t\t\treturn properdecimalamount.equals(decimalamount);\n\t\t\t\t})\n\t\t\t\t.then(areequals => {\n\t\t\t\t\tif (areequals !== true) {\n\t\t\t\t\t\tthis._setState({transfer_amount: proper_decimal_string});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log('error in CurrencyCardView.componentDidUpdate: ' + err);\n\t\t\t\t}); */\n\t\t\t}\n\t\t}\n\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log('CurrencyCardView.componentDidMount called');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\t\t\t\n\t\tmvcmyquote.registerEventListener('on_refreshPage', this.uuid, this.onRefreshPage.bind(this));\n\n\t\tthis.checkNavigationState().catch(err => {console.log('error in CurrencyCardView.checkNavigationState: ' + err);});\n\t}\n\n\tasync checkNavigationState() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tthis.checking = true;\n\n\t\ttry {\n\t\t\t// check navigation\n\t\t\tlet app_nav_state = this.app.getNavigationState();\n\t\t\tlet app_nav_target = app_nav_state.target;\n\n\t\t\t// check wallet is unlocked\n\t\t\tlet unlocked = await this.app.checkWalletUnlocked()\n\t\t\t.catch(err => {\n\t\t\t});\n\n\t\t\tif (!unlocked) {\n\t\t\t\tif (!this.closing) {\n\t\t\t\t\t// check we are online\n\t\t\t\t\tlet online = await this.app.checkOnline();\n\n\t\t\t\t\tif (!online) {\n\t\t\t\t\t\tlet params = (app_nav_target ? app_nav_target.params : null);\n\t\t\t\t\t\tthis.app.gotoRoute('about', params);\n\t\t\t\t\t\t//this.app.gotoRoute('offline', params);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// we open the default device wallet\n\t\t\t\t\tlet devicewallet = await this.app.openDeviceWallet()\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t});\n\t\t\n\t\t\t\t\twalletuuid = devicewallet.uuid;\n\t\t\n\t\t\t\t\tthis._setState({isdevicewallet: true});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet params = (app_nav_target ? app_nav_target.params : null);\n\t\t\t\t\tthis.app.gotoRoute('login', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isdevicewallet = await this.app.isDeviceWallet(walletuuid);\n\t\n\t\t\t\tthis._setState({isdevicewallet});\n\t\t\t}\n\t\n\t\t\n\n\t\t\tif (app_nav_target && (app_nav_target.route == 'currencycard') && (app_nav_target.reached == false)) {\n\t\t\t\tvar params = app_nav_target.params;\n\n\t\t\t\tif (!params) {\n\t\t\t\t\tthis.app.gotoRoute('home');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.callparams = params;\n\n\t\t\t\tlet web3_provider_url = (params.web3url ? this.app.decodebase64(params.web3url) : null);\n\t\t\t\tlet tokenaddress = params.tokenaddress;;\n\n\t\t\t\tlet currencyuuid = params.currencyuuid;\n\n\t\t\t\tlet carduuid = params.carduuid;\n\t\t\t\tlet cardaddress = params.cardaddress;\n\n\t\t\t\tlet to_address = (params.to ? params.to : null);\n\t\t\t\tlet transfer_amount = (params.amount ? params.amount : 0);\n\n\t\t\t\tlet ring = (params.ring ? parseInt(params.ring) : 1);\n\n\t\t\t\tif ((ring > 1) && (this.state.isdevicewallet === true)) {\n\t\t\t\t\t// we need to be in a more secured ring\n\t\t\t\t\tlet params = (app_nav_target ? app_nav_target.params : null);\n\t\t\t\t\tthis.app.gotoRoute('login', params);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t//\n\t\t\t\t// currency\n\t\t\t\t//\n\t\t\t\tlet currency;\n\t\t\t\t\n\t\t\t\tif (currencyuuid) {\n\t\t\t\t\tcurrency = await mvcmyquote.getCurrencyFromUUID(rootsessionuuid, currencyuuid);\n\t\t\t\t}\n\t\t\t\telse if (tokenaddress) {\n\t\t\t\t\t// probably called from external app via a url\n\n\t\t\t\t\tif (web3_provider_url) {\n\t\t\t\t\t\tlet options = {}; // no other requirement on ethnodeserverconfig\n\t\t\t\t\t\tlet scheme = await mvcmyquote.findLocalSchemeInfoFromWeb3Url(rootsessionuuid, web3_provider_url, options)\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tconsole.log('error in CurrencyCardView.checkNavigationState: ' + err);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (scheme) {\n\t\t\t\t\t\t\tlet _existing_currencies = await mvcmyquote.getAllCurrenciesWithAddress(rootsessionuuid, walletuuid, tokenaddress)\n\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\tconsole.log('error in CurrencyCardView.checkNavigationState: ' + err);\n\t\t\t\t\t\t\t});\n\t\t\t\n\t\t\t\t\t\t\tif (_existing_currencies && (_existing_currencies.length > 0)) {\n\t\t\t\t\t\t\t\tif (_existing_currencies.length > 1) {\n\t\t\t\t\t\t\t\t\tcurrency = _existing_currencies[0]; // take first\n\t\t\t\t\t\t\t\t\tcurrencyuuid = currency.uuid;\n\n\t\t\t\t\t\t\t\t\tif (currency.scheme_uuid != scheme.uuid) {\n\t\t\t\t\t\t\t\t\t\t// look if we can find another currency on correct scheme\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < _existing_currencies.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (_existing_currencies[i].scheme_uuid == scheme.uuid) {\n\t\t\t\t\t\t\t\t\t\t\t\tcurrency = _existing_currencies[i];\n\t\t\t\t\t\t\t\t\t\t\t\tcurrencyuuid = currency.uuid;\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tcurrency = _existing_currencies[0]; // take first and only one\n\t\t\t\t\t\t\t\t\tcurrencyuuid = currency.uuid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// no registered currency corresponding to this token address\n\n\t\t\t\t\t\t\t\t// we add one\n\t\t\t\t\t\t\t\tcurrency = {};\n\n\t\t\t\t\t\t\t\tcurrency.uuid = this.app.guid();\n\t\t\t\t\t\t\t\tcurrency.scheme_uuid = scheme.uuid;\n\t\t\t\t\t\t\t\tcurrency.address = tokenaddress;\n\t\t\t\t\t\t\t\tcurrency.ops = {canpay: true};\n\t\t\t\t\t\t\t\tcurrency.description = 'currency for incoming payment request';\n\t\t\t\t\t\t\t\tcurrency.provider = 'provider.js';\n\t\t\t\t\t\t\t\tcurrency.xtra_data = {origin: 'incoming-payment-request'};\n\n\t\t\t\t\t\t\t\tawait mvcmyquote.synchronizeCurrency(rootsessionuuid, walletuuid, currency)\n\t\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\t\tconsole.log('could not import currency from token address: ' + err);\n\t\t\t\t\t\t\t\t\tcurrency = null;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (currency) {\n\t\t\t\t\t\t\t\t\tcurrencyuuid = currency.uuid;\n\n\t\t\t\t\t\t\t\t\t// set description\n\t\t\t\t\t\t\t\t\tlet _currency_description = currency.name + ' imported on ' + scheme.name;\n\t\t\t\t\t\t\t\t\tawait mvcmyquote.setCurrencyDescription(rootsessionuuid, walletuuid, currencyuuid, _currency_description);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (transfer_amount && to_address)\n\t\t\t\t\t\t\tthis.app.alert('This rpc url is not registered. It is not possible to make payments to it: ' + web3_provider_url);\n\t\t\n\t\t\t\t\t\t\tthis.app.gotoRoute('currencycards', params);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!currency) {\n\t\t\t\t\tthis.app.gotoRoute('currencycards', params);\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// card\n\t\t\t\t//\n\t\t\t\tlet card;\n\t\n\t\t\t\tif (carduuid && !cardaddress) {\n\t\t\t\t\tcard = await mvcmyquote.getWalletCard(rootsessionuuid, walletuuid, carduuid).catch(err=>{});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet maincurrencycard = await mvcmyquote.getCurrencyCard(rootsessionuuid, walletuuid, currencyuuid).catch(err=>{});\n\n\t\t\t\t\tif (cardaddress) {\n\t\t\t\t\t\tcard = await mvcmyquote.getCurrencyCardWithAddress(rootsessionuuid, walletuuid, currencyuuid, cardaddress);\n\t\n\t\t\t\t\t\t// check it can transfer the amount\n\t\t\t\t\t\tlet canpay = (card && transfer_amount && to_address ? await mvcmyquote.canPayAmount(rootsessionuuid, walletuuid, card.uuid, currencyuuid, transfer_amount) : true);\n\t\n\t\t\t\t\t\tif (!canpay)\n\t\t\t\t\t\tcard = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!card) {\n\t\t\t\t\t\t// look if main card can handle\n\t\t\t\t\t\tcard = maincurrencycard;\n\t\n\t\t\t\t\t\tlet canpay = (card && transfer_amount && to_address ? await mvcmyquote.canPayAmount(rootsessionuuid, walletuuid, card.uuid, currencyuuid, transfer_amount) : true);\n\t\n\t\t\t\t\t\tif (!canpay) {\n\t\t\t\t\t\t\tcard = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!card) {\n\t\t\t\t\t\t// let's go through all the currency cards for this tokenaddress and pick the first one that matches\n\t\t\t\t\t\tlet cards = await mvcmyquote.getTokenCardList(rootsessionuuid, walletuuid, web3_provider_url, tokenaddress).catch(err => {});\n\t\n\t\t\t\t\t\tfor (var i = 0; i < (cards ? cards.length : 0); i++) {\n\t\t\t\t\t\t\tlet _card = cards[i];\n\t\t\t\t\t\t\tlet _canpay = (transfer_amount && to_address ? await mvcmyquote.canPayAmount(rootsessionuuid, walletuuid, _card.uuid, currencyuuid, transfer_amount) : true);\n\t\n\t\t\t\t\t\t\tif (_canpay) {\n\t\t\t\t\t\t\t\tcard = _card;\n\t\n\t\t\t\t\t\t\t\t// find the currency for this card, in case it is different\n\t\t\t\t\t\t\t\tlet _currency = await mvcmyquote.findCardCurrency(rootsessionuuid, walletuuid, card.uuid).catch(err => {});\n\t\n\t\t\t\t\t\t\t\tif (_currency) {\n\t\t\t\t\t\t\t\t\tcurrency = _currency;\n\t\t\t\t\t\t\t\t\tcurrencyuuid = currency.uuid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tconsole.log('Warning: could not find currency for card: ' + card.uuid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!card) {\n\t\t\t\t\t\t// if not found a card yet, go back to main currency card, if it exists and even if it won't do\n\t\t\t\t\t\tcard = maincurrencycard;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (!card) {\n\t\t\t\t\tif (transfer_amount && to_address)\n\t\t\t\t\tthis.app.alert('Could not find a currency card capable of making corresponding payment. You should load credits/funds on an existing card or add a card with enough credits/funds.');\n\n\t\t\t\t\tif (!params.currencyuuid && currency)\n\t\t\t\t\tparams.currencyuuid = currency.uuid;\n\n\t\t\t\t\tthis.app.gotoRoute('currencycards', params);\n\t\t\t\t}\n\n\t\t\t\t// we have currency and card now (hope they match)\n\t\t\t\tthis.card = card;\n\t\t\t\tthis.currency = currency;\n\n\t\t\t\t// mark target as reached\n\t\t\t\tapp_nav_target.reached = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.app.gotoRoute('home');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// fill info for current card\n\t\t\tif ((this.card) && (this.currency)) {\n\t\t\t\tlet card = this.card;\n\t\t\t\tlet currency = this.currency;\n\n\t\t\t\tlet carduuid = card.uuid;\n\t\t\t\tlet currencyuuid = currency.uuid;\n\n\t\t\t\tlet scheme = await mvcmyquote.getSchemeInfo(rootsessionuuid, card.schemeuuid );\n\n\t\t\t\tconst credits = await mvcmyquote.getCreditBalance(rootsessionuuid, walletuuid, carduuid);\n\t\t\t\tconst creditbalance = credits.transactionunits;\n\t\t\t\tcredits.threshold = await mvcmyquote.getSchemeTransactionUnitsThreshold(rootsessionuuid, scheme.uuid);\n\n\t\t\t\tconst position = await mvcmyquote.getCurrencyPosition(rootsessionuuid, walletuuid, currencyuuid, carduuid);\n\t\t\t\tconst position_string = await mvcmyquote.formatCurrencyAmount(rootsessionuuid, currencyuuid, position);\n\t\t\t\tconst position_int = await position.toInteger();\n\t\t\n\t\t\t\t\n\t\t\t\t// message translated in user's language\n\t\t\t\tlet message_text = '';\n\t\t\t\t\n\t\t\t\t// export\n\t\t\t\tlet address = card.address;\n\t\t\t\tlet privatekey = await mvcmyquote.getCardPrivateKey(rootsessionuuid, walletuuid, carduuid).catch(err => {});\n\t\t\t\tlet web3providerurl = scheme.network.ethnodeserver.web3_provider_url;\n\n\t\t\t\tlet address_string = (address ? mvcmyquote.fitString(address, 32) : '');\n\t\t\t\tlet privatekey_string = (privatekey ? mvcmyquote.fitString(privatekey, 32) : '');\n\t\t\t\tlet web3providerurl_string = (web3providerurl ? mvcmyquote.fitString(web3providerurl, 48) : '');\n\n\t\t\t\tif (privatekey) {\n\t\t\t\t\tmessage_text = mvcmyquote.t(\n\t\t\t\t\t\t'If you generated this card instead of importing it thanks to an external private key \\\n\t\t\t\t\t\tit is strongly recommended to copy the private key thanks to the icon next to the \\\n\t\t\t\t\t\tcorresponding box and save it in a safe  place to be able to re-create the card. If you \\\n\t\t\t\t\t\tdon\\'t, you might loose all the funds that are allocated to this card.');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmessage_text = mvcmyquote.t(\n\t\t\t\t\t\t'This card has been imported through its address and no private key is currently stored.\\\n\t\t\t\t\t\tAccordingly, this card is read-only and you can not do any transaction through the interface.');\n\t\t\t\t}\n\n\t\t\t\tlet need_credit_units = this.state.need_credit_units;\n\t\t\t\tlet credit_units_requested = this.state.credit_units_requested;\n\t\t\t\t\n\t\t\t\tif (credits.transactionunits < credits.threshold) {\n\t\t\t\t\tneed_credit_units = true;\n\t\t\t\t\tcredit_units_requested = (credits.threshold - credits.transactionunits) + 1;\n\t\t\t\t}\n\n\t\t\t\t// buying\n\t\t\t\tlet priceinfo = '';\n\t\t\t\tlet can_buy_credit_units = false;\n\n\t\t\t\tif (need_credit_units) {\n\t\t\t\t\t// fill other cards on same currency\n\t\t\t\t\tthis.currencycards = await this._readCurrencyCards();\n\t\t\t\t\tthis.positivecards = await this._filterCreditPositiveCards();\n\t\t\t\t}\n\n\t\t\t\tif (creditbalance > 0) {\n\t\t\t\t\tlet tx_fee = {};\n\t\t\t\t\ttx_fee.transferred_credit_units = 0;\n\t\t\t\t\tlet transfer_cost_units = (currency.uniswap_v2 && currency.uniswap_v2.swap_max_cost_units ? parseInt(currency.uniswap_v2.swap_max_cost_units) : 8); \n\t\t\t\t\t// max of successive transactions (approve, buy)\n\t\t\t\t\ttx_fee.estimated_cost_units = transfer_cost_units;\n\n\t\t\t\t\tlet feelevel = await mvcmyquote.getRecommendedFeeLevel(rootsessionuuid, walletuuid, carduuid, tx_fee);\n\t\t\n\t\t\t\t\tcan_buy_credit_units = await mvcmyquote.canCompleteTransaction(rootsessionuuid, walletuuid, carduuid, tx_fee, feelevel).catch(err => {});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcan_buy_credit_units = false;\n\t\t\t\t}\n\n\t\t\t\tif (can_buy_credit_units) {\n\t\t\t\t\tif ((currency.ops.cantxfree !== true) && (currency.ops.cantopup !== true) && (currency.ops.canswap === true)) {\n\t\t\t\t\t\t// check price to buy credit units\n\t\t\t\t\t\tlet price_struct = await mvcmyquote.getPriceForCreditUnits(rootsessionuuid, currencyuuid, this._getCreditsUnitsToBuy(credit_units_requested));\n\t\t\t\t\t\t\n\t\t\t\t\t\tprice_struct.credit_units_requested = this._getCreditsUnitsRequested(credit_units_requested);\n\n\t\t\t\t\t\t\n\t\t\t\t\t\tpriceinfo = await this._getPriceInfo(price_struct);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// transfer\n\t\t\t\tlet to_address = (this.callparams && this.callparams.to ? this.callparams.to : null);\n\t\t\t\tlet amount = (this.callparams && this.callparams.amount ? this.callparams.amount : 0);\n\t\t\t\tlet decimalamount_string;\n\n\t\t\t\tif (amount > 0) {\n\t\t\t\t\tlet decimals = parseInt(currency.decimals);\n\n\t\t\t\t\tlet decimalamount = await mvcmyquote.getDecimalAmount(rootsessionuuid, amount, decimals);\n\t\t\t\t\tdecimalamount_string = await decimalamount.toFixedString();\n\t\t\t\t}\n\n\t\t\t\t// return url\n\t\t\t\tlet return_url = (this.callparams && this.callparams.returnurl ? this.app.decodebase64(this.callparams.returnurl) : null);\n\t\t\t\tlet callback_url = (this.callparams && this.callparams.callbackurl ? this.app.decodebase64(this.callparams.callbackurl) : null);\n\n\t\t\t\tthis._setState({message_text, currency,\n\t\t\t\t\tcurrentcard: card, \n\t\t\t\t\tcreditbalance, position, position_int, position_string,  \n\t\t\t\t\taddress, privatekey, web3providerurl,\n\t\t\t\t\taddress_string, privatekey_string, web3providerurl_string,\n\t\t\t\t\tneed_credit_units, can_buy_credit_units, credit_units_requested, priceinfo,\n\t\t\t\t\tto_address, transfer_amount: decimalamount_string,\n\t\t\t\t\treturn_url, callback_url});\n\n\n\t\t\t}\n\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in CurrencyCardView.checkNavigationState: '+ e);\n\t\t}\n\t\tfinally {\n\t\t\tthis.checking = false;\n\t\t}\n\t\t\n\n\t}\n\n\tasync onRefreshPage() {\n\t\tconsole.log('CurrencyCardView.onRefreshPage called');\n\n\t\tif (this.checking !== true)\n\t\tthis.checkNavigationState().catch(err => {console.log('error in checkNavigationState: ' + err);});\n\t}\n\n\tasync onMainCardSwitch() {\n\t\tconsole.log('CurrencyCardView.onMainCardSwitch called');\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\t// set current card as main card for its currency\n\t\tlet { currency, currentcard } = this.state;\n\n\t\tif (!currency || !currentcard)\n\t\t\treturn;\n\n\t\tawait mvcmyquote.setCurrencyCard(rootsessionuuid, walletuuid, currency.uuid, currentcard.uuid)\n\t\t\n\t\tlet maincardswitchedat = Date.now();\n\n\t\t\n\t\tthis._setState({maincardswitchedat});\n\t}\n\n\tasync onLoadCard() {\n\t\tconsole.log('CurrencyCardView.onLoadCard called');\n\t\t this.app.alert('Load card pressed')\n\t}\n\n\n\tasync onBack() {\n\t\tconsole.log('onBack pressed!');\n\n\t\tlet currencyuuid = this.currency.uuid;\n\t\t\n\t\tlet params = {action: 'view', currencyuuid};\n\t\n\t\tawait this.app.gotoRoute('currencycards', params);\n\t}\n\n\t\n\t// end of life\n\tcomponentWillUnmount() {\n\t\tconsole.log('CurrencyCardView.componentWillUnmount called');\n\t\tthis.closing = true;\n\n\t\tlet app = this.app;\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\t\t\n\t\tmvcmyquote.unregisterEventListener('on_refreshPage', this.uuid);\n\t\t\n\t\tthis.app.closeDeviceWallet();\n\t}\n\t\n\t// user actions\n\tasync onTransfer() {\n\t\tconsole.log('onTransfer pressed!');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet {currentcard, currency, transfer_amount, to_address, return_url, callback_url} = this.state;\n\n\t\tthis.setState({processing: true});\n\n\t\ttry {\n\t\t\t// check address\n\t\t\tlet validaddress = await mvcmyquote.isValidAddress(rootsessionuuid, to_address)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in CurrencyCardView.onTransfer: ' + err);\n\t\t\t});\n\n\t\t\tif (!validaddress) {\n\t\t\t\tthis.app.alert('This address is not valid');\n\t\t\t\tthis._setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet tokenamount = await mvcmyquote.getCurrencyAmount(rootsessionuuid, currency.uuid, transfer_amount);\n\t\t\tlet tokenamount_int = await tokenamount.toInteger();\n\n\t\t\t// check we have enough transaction credits\n\t\t\tlet tx_fee = {};\n\t\t\ttx_fee.transferred_credit_units = 0;\n\t\t\tlet transfer_cost_units = 3;\n\t\t\ttx_fee.estimated_cost_units = transfer_cost_units;\n\n\t\t\tlet _feelevel = await mvcmyquote.getRecommendedFeeLevel(rootsessionuuid, walletuuid, currentcard.uuid, tx_fee);\n\n\n\t\t\tvar canspend = await mvcmyquote.canCompleteTransaction(rootsessionuuid, walletuuid, currentcard.uuid, tx_fee, _feelevel).catch(err => {});\n\n\t\t\tif (!canspend) {\n\t\t\t\tif (tx_fee.estimated_fee.execution_credits > tx_fee.estimated_fee.max_credits) {\n\t\t\t\t\tthis.app.alert('The execution of this transaction is too large: ' + tx_fee.estimated_fee.execution_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.app.alert('You must add transaction units to the source card. You need at least ' + tx_fee.required_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\n\t\n\t\n\t\t\t// perform payment\n\t\t\tlet txhash_payment = await mvcmyquote.payAmount(rootsessionuuid, walletuuid, currentcard.uuid, to_address, currency.uuid, tokenamount_int, _feelevel)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in CurrencyCardView.onTransfer: ' + err);\n\t\t\t});\n\t\n\t\t\tif (!txhash_payment) {\n\t\t\t\tthis.app.alert('Could not transfer amount');\n\t\t\t\tthis.setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// post transaction processing\n\t\t\t//\n\t\t\tlet turn_off_processing = true;\n\n\t\t\t// send info to caller's backoffice\n\t\t\tif (callback_url) {\n\t\t\t\ttry {\n\t\t\t\t\t// transaction hash\n\t\t\t\t\tlet _url = callback_url;\n\n\t\t\t\t\tif (_url.includes('?') !== true) {\n\t\t\t\t\t\t_url += '?tx=' + txhash_payment;;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// transaction hash\n\t\t\t\t\t\t_url += '&tx=' + txhash_payment;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait new Promise((resolve, reject) => {\n\n\t\t\t\t\t\t// make an XHttpRequest call (simle call, no check on return)\n\t\t\t\t\t\tvar xhttp = new XMLHttpRequest();\n\t\t\t\t\t\n\t\t\t\t\t\txhttp.open('GET', _url, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\txhttp.send();\n\t\t\t\t\t\txhttp.onload = function(e) {\n\t\t\t\t\t\t\tif (xhttp.status == 200) {\n\t\t\t\t\t\t\t\tvar res = {};\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tres = JSON.parse(xhttp.responseText);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treject('wrong result');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\txhttp.onerror = function (e) {\n\t\t\t\t\t\t\treject('rest error is ' + xhttp.statusText);\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log('error in CurrencyCardView.onTransfer notifying callback: ' + err);\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\tconsole.log('exception in CurrencyCardView.onTransfer notifying callback: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// return to caller\n\t\t\tif (return_url) {\n\t\t\t\t// transaction hash\n\t\t\t\tlet _url = return_url;\n\n\t\t\t\tif (_url.includes('?') !== true) {\n\t\t\t\t\t_url += '?tx=' + txhash_payment;;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// transaction hash\n\t\t\t\t\t_url += '&tx=' + txhash_payment;\n\t\t\t\t}\n\n\t\t\t\t// and we add all call parameters ending with \"id\"\n\t\t\t\tif (this.callparams) {\n\t\t\t\t\tvar _keys = Object.keys(this.callparams);\n\t\t\t\t\tfor (var i = 0; i < _keys.length; i++) {\n\t\t\t\t\t\tif (_keys[i].toLowerCase().endsWith(\"id\")) {\n\t\t\t\t\t\t\t_url += '&' + _keys[i] + '=' + this.callparams[_keys[i]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait this.app.gotoUrl(_url);\n\t\t\t\tturn_off_processing = false; // wait for url jump to happen\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait this.app.refreshPage();\t\n\t\t\t}\n\n\t\t\t// end of processing\n\t\t\tif (turn_off_processing)\n\t\t\tthis.setState({processing: false});\n\n\t\t\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in onTransfer: ' + e);\n\t\t\tthis.setState({processing: false});\n\t\t}\n\t}\n\n\tasync onReturn() {\n\t\tconsole.log('onReturn pressed!');\n\n\t\tconst {return_url} = this.state;\n\n\t\tif (!return_url)\n\t\treturn;\n\n\t\tawait this.app.gotoUrl(return_url);\n\t}\n\n\t// buying\n\tasync onBuyCredits() {\n\t\tconsole.log('onBuyCredits pressed!');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet {currentcard, currency, credit_units_requested} = this.state;\n\n\t\tthis.setState({processing: true});\n\n\t\ttry {\n\t\t\tlet credit_units_tobuy = this._getCreditsUnitsToBuy(credit_units_requested);\n\t\t\n\t\t\tlet tx_fee = {};\n\t\t\ttx_fee.transferred_credit_units = 0;\n\t\t\tlet transfer_cost_units = (currency.uniswap_v2 && currency.uniswap_v2.swap_max_cost_units ? parseInt(currency.uniswap_v2.swap_max_cost_units) : 8); \n\t\t\t// max of successive transactions (approve, buy)\n\t\t\ttx_fee.estimated_cost_units = transfer_cost_units;\n\n\t\t\tlet feelevel = await mvcmyquote.getRecommendedFeeLevel(rootsessionuuid, walletuuid, currentcard.uuid, tx_fee);\n\n\n\t\t\tvar txhash = await mvcmyquote.buyCreditUnits(rootsessionuuid, walletuuid, currentcard.uuid, currency.uuid, credit_units_tobuy, feelevel)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in CurrencyCardView.onBuyCredits: ' + err);\n\t\t\t});\n\t\n\t\t\tif (!txhash) {\n\t\t\t\tthis.app.alert('Could not buy credit units');\n\t\t\t\tthis.setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({processing: false});\n\n\t\t\tthis.app.refreshPage();\t\n\t\t\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in onBuyCredits: ' + e);\n\t\t\tthis.setState({processing: false});\n\t\t}\n\t\n\t}\n\n\t// picking from\n\tasync onSelectSourceCard(uuid) {\n\t\tvar cards = this.currencycards;\n\t\tlet sourcecard;\n\n\t\tfor (var i = 0; i < cards.length; i++) {\n\t\t\tif (uuid === cards[i].uuid) {\n\t\t\t\tsourcecard = cards[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (sourcecard) {\n\t\t\tthis._setState({sourcecard});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync onPickCreditsFrom() {\n\t\tconsole.log('onPickCreditsFrom pressed!');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\t\t\n\t\tlet { sourcecard, currentcard, credit_units_requested  } = this.state;\n\n\t\tthis.setState({processing: true});\n\n\t\ttry {\n\t\t\t// check we have enough transaction credits\n\t\t\tlet feelevel = null;\n\t\t\tlet tx_fee = {};\n\t\t\ttx_fee.transferred_credit_units = parseInt(credit_units_requested);\n\t\t\tlet transfer_cost_units = 1;\n\t\t\ttx_fee.estimated_cost_units = transfer_cost_units;\n\n\t\t\tvar canspend = await mvcmyquote.canCompleteTransaction(rootsessionuuid, walletuuid, sourcecard.uuid, tx_fee, feelevel).catch(err => {});\n\n\t\t\tif (!canspend) {\n\t\t\t\tif (tx_fee.estimated_fee.execution_credits > tx_fee.estimated_fee.max_credits) {\n\t\t\t\t\tthis.app.alert('The execution of this transaction is too large: ' + tx_fee.estimated_fee.execution_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.app.alert('You must add transaction units to the source card. You need at least ' + tx_fee.required_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// do transfer of credits\n\t\t\tlet units_txhash = await mvcmyquote.transferTransactionUnits(rootsessionuuid, walletuuid, sourcecard.uuid, currentcard.uuid, credit_units_requested);\n\n\t\t\tif (!units_txhash) {\n\t\t\t\tthis.app.alert('Could not pick transaction units from source card');\n\t\t\t\tthis.setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({processing: false});\n\n\t\t\tthis.app.refreshPage();\t\n\t\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in onPickCreditsFrom: ' + e);\n\t\t\tthis.app.error('exception in onPickCreditsFrom: ' + e);\n\n\t\t\tthis.app.alert('could not pick transaction units')\n\n\t\t\tthis.setState({processing: false});\n\t\t}\n\t}\n\n\t// moving credits\n\tasync onMoveCredits() {\n\t\tconsole.log('onMoveCredits pressed!');\n\t\t\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet rootsessionuuid = this.props.rootsessionuuid;\n\t\tlet walletuuid = this.props.currentwalletuuid;\n\n\t\tlet {currentcard, credit_amount, to_address, return_url} = this.state;\n\n\t\tthis.setState({processing: true});\n\n\t\ttry {\n\t\t\t// check address\n\t\t\tlet validaddress = await mvcmyquote.isValidAddress(rootsessionuuid, to_address)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('error in CurrencyCardView.onTransfer: ' + err);\n\t\t\t});\n\n\t\t\tif (!validaddress) {\n\t\t\t\tthis.app.alert('This address is not valid');\n\t\t\t\tthis._setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check we have enough transaction credits\n\t\t\tlet feelevel = null;\n\t\t\tlet tx_fee = {};\n\t\t\ttx_fee.transferred_credit_units = parseInt(credit_amount);\n\t\t\tlet transfer_cost_units = 1;\n\t\t\ttx_fee.estimated_cost_units = transfer_cost_units;\n\n\t\t\tvar canspend = await mvcmyquote.canCompleteTransaction(rootsessionuuid, walletuuid, currentcard.uuid, tx_fee, feelevel).catch(err => {});\n\n\t\t\tif (!canspend) {\n\t\t\t\tif (tx_fee.estimated_fee.execution_credits > tx_fee.estimated_fee.max_credits) {\n\t\t\t\t\tthis.app.alert('The execution of this transaction is too large: ' + tx_fee.estimated_fee.execution_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.app.alert('You must add transaction units to the source card. You need at least ' + tx_fee.required_units + ' credit units.');\n\t\t\t\t\tthis._setState({processing: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t// get card on same scheme for the to_address\n\t\t\tvar tocard = await mvcmyquote.getCardInfoFromAddressOnScheme(rootsessionuuid, walletuuid, currentcard.schemeuuid, to_address).catch(err => {});\n\n\n\t\t\tlet units_txhash;\n\t\t\t\n\t\t\tif (tocard) {\n\t\t\t\tunits_txhash = await mvcmyquote.transferTransactionUnits(rootsessionuuid, walletuuid, currentcard.uuid, tocard.uuid, credit_amount);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// it is not one of our cards, or a read-only card that we know\n\t\t\t\tunits_txhash = await mvcmyquote.sendTransactionUnits(rootsessionuuid, walletuuid, currentcard.uuid, to_address, credit_amount);\n\t\t\t}\n\n\t\t\tif (!units_txhash) {\n\t\t\t\tthis.app.alert('Could not pick transaction units from source card');\n\t\t\t\tthis.setState({processing: false});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\t\n\t\t\t\n\t\t\tthis.setState({processing: false});\n\n\t\t\tif (return_url) {\n\t\t\t\t// transaction hash\n\t\t\t\tlet _url = return_url;\n\n\t\t\t\tif (_url.includes('?') !== true) {\n\t\t\t\t\t_url += '?tx=' + units_txhash;;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// transaction hash\n\t\t\t\t\t_url += '&tx=' + units_txhash;\n\t\t\t\t}\n\n\t\t\t\t// and we add all call parameters ending with \"id\"\n\t\t\t\tif (this.callparams) {\n\t\t\t\t\tvar _keys = Object.keys(this.callparams);\n\t\t\t\t\tfor (var i = 0; i < _keys.length; i++) {\n\t\t\t\t\t\tif (_keys[i].toLowerCase().endsWith(\"id\")) {\n\t\t\t\t\t\t\t_url += '&' + _keys[i] + '=' + this.callparams[_keys[i]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait this.app.gotoUrl(_url);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait this.app.refreshPage();\t\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch(e) {\n\t\t\tconsole.log('exception in onMoveCredits: ' + e);\n\t\t\tthis.setState({processing: false});\n\t\t}\n\t}\n\n\t\n\t// rendering\n\trenderBuyMoreCreditsPart() {\n\t\tlet { currency, credit_units_requested, position_int,priceinfo } = this.state;\n\n\t\tif (currency.ops.canswap  !== true)\n\t\treturn (<></>);\n\n\t\tlet credit_units_requested_disabled = ((credit_units_requested > 0) || (parseInt(credit_units_requested) > 0) ? false : true);\n\n\t\tif (position_int == 0)\n\t\t\tcredit_units_requested_disabled = true;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className=\"Separator\">&nbsp;</div>\n\t\t\t<FormGroup controlId=\"buycredits\">\n\t\t\t\t<FormLabel>Buy more credit units</FormLabel>\n\t\t\t\t{(priceinfo && priceinfo.length ? <div className=\"TextBox\">{priceinfo}</div> : <></>)}\n\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={credit_units_requested}\n\t\t\t\t\t\tonChange={e => this.setState({credit_units_requested: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button \n\t\t\t\t\tdisabled={credit_units_requested_disabled}\n\t\t\t\t\tonClick={this.onBuyCredits.bind(this)} \n\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\tBuy\n\t\t\t\t\t</Button>\n\n\t\t\t\t</FormGroup>\n\t\t\t</FormGroup>\n\t\t\t</div>\n\t\t);\n\t\t\n\t}\n\n\trenderPickCreditsFromPart() {\n\t\tlet mvcmyquote = this.getMvcMyQuoteObject();\n\n\t\tlet { sourcecard, credit_units_requested } = this.state;\n\t\tlet positivecards = this.positivecards;\n\n\t\tlet can_pick_credit_units = false;\n\t\tlet pick_credit_units_disabled = true;\n\n\t\tif ((!positivecards) || (positivecards.length == 0)) {\n\t\t\tcan_pick_credit_units = true;\n\t\t}\n\n\t\tif (sourcecard) {\n\t\t\tif ((credit_units_requested > 0) || (parseInt(credit_units_requested) > 0)) {\n\n\t\t\t\tif (credit_units_requested < sourcecard.credits.transactionunits) {\n\t\t\t\t\tpick_credit_units_disabled = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpick_credit_units_disabled = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpick_credit_units_disabled = true;\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tpick_credit_units_disabled = true;\n\t\t}\n\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t<div className=\"Separator\">&nbsp;</div>\n\n\t\t\t\t{(can_pick_credit_units ? \n\t\t\t\t<div className=\"TextBox\">There is no other card for this currency that has enough transaction credits to pick some units from it.</div> :\n\t\t\t\t<FormGroup controlId=\"pickcredits\">\n\t\t\t\t\t<FormLabel>Pick from</FormLabel>\n\t\t\t\t\t<FormGroup controlId=\"newcard\" className=\"AddCardLine\">\n\t\t\t\t\t\t<FormControl className=\"CardPrivateKeyInput\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(sourcecard ? sourcecard.address : '')}\n\t\t\t\t\t\t\tonChange={e => this._setState({signingkey: e.target.value})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\t\tid=\"input-dropdown-addon\"\n\t\t\t\t\t\t\ttitle=\"Cur.\"\n\t\t\t\t\t\t\tonSelect={e => this.onSelectSourceCard(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{positivecards.map((item, index) => (\n\t\t\t\t\t\t\t\t<Dropdown.Item key={item.uuid} eventKey={item.uuid} value={item.uuid}>{'card with ' + item.credits.transactionunits + ' units - ' + mvcmyquote.fitString(item.address, 12)}</Dropdown.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</DropdownButton>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup>\n\t\t\t\t)}\n\n\t\t\t\t<FormGroup controlId=\"pickcredits\">\n\t\t\t\t\t<FormLabel># credit units</FormLabel>\n\t\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={credit_units_requested}\n\t\t\t\t\t\t\tonChange={e => this.setState({credit_units_requested: e.target.value})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\tdisabled={pick_credit_units_disabled}\n\t\t\t\t\t\tonClick={this.onPickCreditsFrom.bind(this)} \n\t\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\t\tPick\n\t\t\t\t\t\t</Button>\n\t\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup>\n\t\t\t\t</div>\n\t\t\t);\n\t\n\n\t}\n\n\trenderTransferToPart() {\n\t\tlet { to_address, transfer_amount, return_url } = this.state;\n\n\t\tlet transfer_disabled = (to_address && to_address.length && ((transfer_amount > 0) || (parseInt(transfer_amount) > 0) ) ? false : true);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className=\"Separator\">&nbsp;</div>\n\t\t\t<FormGroup controlId=\"transferto\">\n\t\t\t\t<FormLabel>Transfer to address</FormLabel>\n\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={(to_address ? to_address : '')}\n\t\t\t\t\t\tonChange={e => this.setState({to_address: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t\t{(return_url ? \n\t\t\t\t\t<Button \n\t\t\t\t\tonClick={this.onReturn.bind(this)} \n\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\tCancel\n\t\t\t\t\t</Button> :\n\t\t\t\t\t<></>)}\n\t\t\t\t</FormGroup>\n\t\t\t</FormGroup>\n\t\t\t<FormGroup controlId=\"transfer\">\n\t\t\t\t<FormLabel>currency amount</FormLabel>\n\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={transfer_amount}\n\t\t\t\t\t\tonChange={e => this.setState({transfer_amount: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button \n\t\t\t\t\tdisabled={transfer_disabled}\n\t\t\t\t\tonClick={this.onTransfer.bind(this)} \n\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\tTransfer\n\t\t\t\t\t</Button>\n\n\t\t\t\t</FormGroup>\n\t\t\t</FormGroup>\n\t\t\t</div>\t\t\n\t\t);\n\t}\n\n\trenderMoveCreditsToPart() {\n\t\tlet { to_address, credit_amount } = this.state;\n\n\t\tlet transfer_disabled = (to_address && to_address.length && ((credit_amount > 0) || (parseInt(credit_amount) > 0) ) ? false : true);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<div className=\"Separator\">&nbsp;</div>\n\t\t\t<FormGroup controlId=\"move\">\n\t\t\t\t<FormLabel># credits units</FormLabel>\n\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={credit_amount}\n\t\t\t\t\t\tonChange={e => this.setState({credit_amount: e.target.value})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button \n\t\t\t\t\tdisabled={transfer_disabled}\n\t\t\t\t\tonClick={this.onMoveCredits.bind(this)} \n\t\t\t\t\ttype=\"submit\">\n\t\t\t\t\tProvide\n\t\t\t\t\t</Button>\n\n\t\t\t\t</FormGroup>\n\t\t\t</FormGroup>\n\t\t\t</div>\t\t\n\t\t);\n\t}\n\n\trenderTransactionPart() {\n\t\tlet { to_address, currency, need_credit_units, can_buy_credit_units } = this.state;\n\n\t\tif (currency.ops.canpay !== true)\n\t\t\treturn (<></>);\n\n\t\tif (need_credit_units) {\n\t\t\treturn (\n\t\t\t\t<div className=\"Form\">\n\t\t\t\t\t{this.renderPickCreditsFromPart()}\n\t\t\t\t\t{(can_buy_credit_units ? this.renderBuyMoreCreditsPart() : <></>)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\n\t\t\treturn (\n\t\t\t\t<div className=\"Form\">\n\n\t\t\t\t\t{this.renderTransferToPart()}\n\n\t\t\t\t\t{(to_address && to_address.length ?\n\t\t\t\t\tthis.renderMoveCreditsToPart() :\n\t\t\t\t\tthis.renderBuyMoreCreditsPart())}\n\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t}\n\n\trenderCurrencyCardView() {\n\t\tlet { currency, currentcard,\n\t\t\tcreditbalance, position_string,\n\t\t\tprivatekey, address, web3providerurl,\n\t\t\tprivatekey_string, address_string, web3providerurl_string } = this.state;\n\t\t\t\n\t\tlet maincard = (currentcard && currentcard.xtra_data.myquote ? currentcard.xtra_data.myquote.maincard : false);\n\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Form\">\n\t\t\t\t<FormGroup className=\"CurrencyCard\" controlId=\"balance\">\n\t\t\t\t<span>\n\t\t\t\t\t<FormLabel># credit units</FormLabel>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tclassName=\"CurrencyCardBalance\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={creditbalance}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<FormLabel>Balance</FormLabel>\n\t\t\t\t\t<FormControl\n\t\t\t\t\t\tclassName=\"CurrencyCardBalance\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={position_string}\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"CurrencyCardIconCol\">\n\t\t\t\t<span>\n\t\t\t\t{(maincard ? \n\t\t\t\t<FontAwesomeIcon icon={faStarSolid} size=\"2x\" /> :\n\t\t\t\t<FontAwesomeIcon icon={faStarEmpty} size=\"2x\" onClick={this.onMainCardSwitch.bind(this)} />)}\n\t\t\t\t</span>\n{/* \t\t\t\t<span>\n\t\t\t\t<FontAwesomeIcon icon={faUpload} size=\"2x\" onClick={this.onLoadCard.bind(this)} />\n\t\t\t\t</span>\n */}\t\t\t\t</span>\n\n\t\t\t\t</FormGroup>\n\n\t\t\t\t<FormGroup controlId=\"address\">\n\t\t\t\t\t<FormLabel>Address</FormLabel>\n\t\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName=\"CurrencyCardAddress\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(address_string ? address_string : '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"ShareIcon\">\n\t\t\t\t\t\t\t<TextCopyIcon\n\t\t\t\t\t\t\t\tapp={this.app}\n\t\t\t\t\t\t\t\ttext={address}\n\t\t\t\t\t\t\t\tmessage=\"address has been copied to clipboard\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t{(privatekey ? \n\t\t\t\t<FormGroup controlId=\"privatekey\">\n\t\t\t\t\t<FormLabel>Private key</FormLabel>\n\t\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName=\"CurrencyCardAddress\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(privatekey_string ? privatekey_string : '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"ShareIcon\">\n\t\t\t\t\t\t\t<TextCopyIcon\n\t\t\t\t\t\t\t\tapp={this.app}\n\t\t\t\t\t\t\t\ttext={privatekey}\n\t\t\t\t\t\t\t\tmessage=\"private key has been copied to clipboard\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup> :\n\t\t\t\t<></>\n\t\t\t\t)}\n\n\t\t\t\t<FormGroup controlId=\"web3providerurl\">\n\t\t\t\t\t<FormLabel>RPC URL {(currency && currency.name ? 'for ' + currency.name : '')}</FormLabel>\n\t\t\t\t\t<FormGroup className=\"ClaimerCardLine\">\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName=\"CurrencyCardAddress\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={(web3providerurl_string ? web3providerurl_string : '')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"ShareIcon\">\n\t\t\t\t\t\t\t<TextCopyIcon\n\t\t\t\t\t\t\t\tapp={this.app}\n\t\t\t\t\t\t\t\ttext={web3providerurl}\n\t\t\t\t\t\t\t\tmessage=\"rpc url has been copied to clipboard\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormGroup>\n\n\t\t\t</div>\n\t\t  );\n\t}\n\n\trender() {\n\t\tlet {processing} = this.state; \n\n\t\tif (processing === true) {\n\t\t\treturn (\n\t\t\t\t<div className=\"Splash\">\n\t\t\t\t\t<div>{this.state.processinginfo}</div>\n\t\t\t\t\t<Dots />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet { message_text, privatekey } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"Container\">\n\t\t\t\t<div className=\"TitleBanner\">\n\t\t\t\t<div className=\"Title\">Currency Card</div>\n\t\t\t\t<div className=\"BackIcon\" onClick={this.onBack.bind(this)}><FontAwesomeIcon icon={faUndo} /></div>\n\t\t\t\t</div>\n\n\t\t\t\t{ this.renderCurrencyCardView()}\n\t\t\t\t\n\t\t\t\t<div className=\"TextBox\">\n\t\t\t\t  {message_text}\n\t\t\t  \t</div>\n\n\t\t\t\t{(privatekey ? \n\t\t\t\t this.renderTransactionPart():\n\t\t\t\t <></>)}\n\n\t\t\t</div>\n\t\t  );\n\t}\n\t\n}\n\n\n// propTypes validation\nCurrencyCardView.propTypes = {\n\tapp: PropTypes.object.isRequired,\n\trootsessionuuid: PropTypes.string,\n\tcurrentwalletuuid: PropTypes.string,\n\tiswalletlocked: PropTypes.bool,\n};\n\n//redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\trootsessionuuid: state.session.sessionuuid,\n\t\tpending: state.login.pending,\n\t\tsuccess: state.login.success,\n\t\tlasterror: state.login.error,\n\t\tcurrentwalletuuid: state.wallets.walletuuid,\n\t\tiswalletlocked: state.wallets.islocked,\n\t};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t};\n}\n\n\nexport {CurrencyCardView};\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyCardView);\n\n"],"mappings":"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"}