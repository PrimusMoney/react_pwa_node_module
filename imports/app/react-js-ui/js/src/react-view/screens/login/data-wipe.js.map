{"version":3,"file":"data-wipe.js","names":["DataWipeScreen","props","app","getMvcModuleObject","state","prevProps","console","log","mvcmodule","wipedata","onWipeData","bind","renderWipeDataForm","nextProps","prevState","rootsessionuuid","React","Component","propTypes","PropTypes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch","connect"],"sources":["../../../../../../../../../../../imports/app/react-js-ui/js/src/react-view/screens/login/data-wipe.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'react-bootstrap';\n\n\nimport Header from '../../navigation/header/header.js';\n\n\n\nclass DataWipeScreen extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.app = this.props.app;\n\t\tthis.getMvcModuleObject = this.app.getMvcModuleObject;\n\n\t\tthis.state = {\n\t\t};\t\t\n\t}\n\t\n\tcomponentDidUpdate(prevProps) {\n\t\tconsole.log('DataWipeScreen.componentDidUpdate called');\n\t\tlet mvcmodule = this.getMvcModuleObject();\n\t\t\n\t}\n\t\n\tasync onWipeData() {\n\t\tconsole.log('DataWipeScreen.onDataWipe pressed!');\n \n\t\tthis.app.wipedata();\n\t}\n\n\trenderWipeDataForm() {\n\t\treturn (\n\t\t\t<div className=\"Container LogoutContainer\">\n\t\t\t\t<div className=\"Instructions\">Do you want to erase all data in this browser?</div>\n\t\t\t\t<div className=\"Instructions\">This can not be undone!</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={this.onWipeData.bind(this)} type=\"submit\">\n\t\t\t\t\t\tWipe\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\t\t\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Screen\">\n\t\t\t\t<Header app = {this.app}/>\n\t\t\t\t{this.renderWipeDataForm()}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\t// fill state\n\t\treturn {\n\t\t\trootsessionuuid: nextProps.rootsessionuuid,\n\t\t};\n\t}\n}\n\n// propTypes validation\nDataWipeScreen.propTypes = {\n\tapp: PropTypes.object.isRequired\n};\n\n//redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t};\n} \n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t};\n}\n\n\nexport {DataWipeScreen};\nexport default connect(mapStateToProps, mapDispatchToProps)(DataWipeScreen);"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AAGA;;;;;;;;+CAPA,oJ;;;;;;;;;;;;;;;;;;;;;;;;;;IAWMA,c;;;;;EAEL,wBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IAClB,0BAAMA,KAAN;IAEA,MAAKC,GAAL,GAAW,MAAKD,KAAL,CAAWC,GAAtB;IACA,MAAKC,kBAAL,GAA0B,MAAKD,GAAL,CAASC,kBAAnC;IAEA,MAAKC,KAAL,GAAa,EAAb;IANkB;EAQlB;;;;WAED,4BAAmBC,SAAnB,EAA8B;MAC7BC,OAAO,CAACC,GAAR,CAAY,0CAAZ;MACA,IAAIC,SAAS,GAAG,KAAKL,kBAAL,EAAhB;IAEA;;;;mFAED;QAAA;UAAA;YAAA;cAAA;gBACCG,OAAO,CAACC,GAAR,CAAY,oCAAZ;gBAEA,KAAKL,GAAL,CAASO,QAAT;;cAHD;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAMA,8BAAqB;MACpB,oBACC;QAAK,SAAS,EAAC;MAAf,gBACC;QAAK,SAAS,EAAC;MAAf,oDADD,eAEC;QAAK,SAAS,EAAC;MAAf,6BAFD,eAGC,0DACC,gCAAC,sBAAD;QAAQ,OAAO,EAAE,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAjB;QAA6C,IAAI,EAAC;MAAlD,UADD,CAHD,CADD;IAWA;;;WAED,kBAAS;MACR,oBACC;QAAK,SAAS,EAAC;MAAf,gBACC,gCAAC,kBAAD;QAAQ,GAAG,EAAI,KAAKT;MAApB,EADD,EAEE,KAAKU,kBAAL,EAFF,CADD;IAMA;;;WAED,kCAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;MACrD;MACA,OAAO;QACNC,eAAe,EAAEF,SAAS,CAACE;MADrB,CAAP;IAGA;;;;EApD2BC,iBAAA,CAAMC,S,GAuDnC;;;;AACAjB,cAAc,CAACkB,SAAf,GAA2B;EAC1BhB,GAAG,EAAEiB,qBAAA,CAAUC,MAAV,CAAiBC;AADI,CAA3B,C,CAIA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAClB,KAAD,EAAW;EAClC,OAAO,EAAP;AAEA,CAHD;;AAKA,IAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;EACxC,OAAO,EAAP;AAEA,CAHD;;eAOe,IAAAC,mBAAA,EAAQH,eAAR,EAAyBC,kBAAzB,EAA6CvB,cAA7C,C"}